{"ast":null,"code":"var _jsxFileName = \"/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/src/containers/admin/aminUserEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { getOneUser, updateUser, updatePassword, updateRole, getAllRoles } from \"../../api/user\";\nimport Header from \"../headers/header\";\nimport HeaderPages from \"../headers/headerPages\";\nimport Footer from \"../footer\";\nimport AdminMenu from \"../../components/adminMenu\";\nimport contactIcon from \"../../assets/icons/email-blue.svg\";\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminUserEdit = props => {\n  _s();\n\n  const [headerTitle, setHeaderTitle] = useState(\"Administration\");\n  const [headerBreadcrumbs, setHeaderBreadcrumbs] = useState([{\n    value: \"Accueil\",\n    link: \"/\"\n  }, {\n    value: \"Administration\",\n    link: \"/admin\"\n  }, {\n    value: \"Utilisateurs\",\n    link: \"/admin/users\"\n  }, {\n    value: \"Edition\",\n    link: null\n  }]);\n  const [firstName, setFirstName] = useState(\"\");\n  const [firstNameError, setFirstNameError] = useState(false);\n  const [firstNameErrorText, setFirstNameErrorText] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [lastNameError, setLastNameError] = useState(false);\n  const [lastNameErrorText, setLastNameErrorText] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [emailErrorText, setEmailErrorText] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordUpdated, setPasswordUpdated] = useState(false);\n  const [phone, setPhone] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(false);\n  const [phoneErrorText, setPhoneErrorText] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [idSelectedRole, setIdSelectedRole] = useState(\"\");\n  const [selectedRole, setSelectedRole] = useState(\"\");\n  const [roles, setRoles] = useState([]);\n  const [newRole, setNewRole] = useState(0); // RegEx de vérification du mail\n\n  let emailRegEx = /^[a-z]+([\\.\\-_]?[a-z0-9]+)*@([a-z]{3,})+(\\.[a-z]{2,3})+$/; // RegEx de vérification du Téléphone\n\n  let phoneRegEx = /^(?:(?:\\+|00)33|0)\\s*[1-9](?:[\\s.-]*\\d{2}){4}$/;\n  useEffect(() => {\n    getOneUser(props.match.params.id).then(user => {\n      setFirstName(user.first_name);\n      setLastName(user.last_name);\n      setEmail(user.email);\n      setPhone(user.phone);\n      setAddress(user.address);\n      setZip(user.zip);\n      setCity(user.city);\n      setIdSelectedRole(user.id_role);\n      setSelectedRole(user.role);\n      setNewRole(user.id_role);\n    });\n    getAllRoles().then(rolesDB => {\n      setRoles(rolesDB.data.result);\n    });\n  }, []);\n\n  const globalVerify = () => {\n    if (!firstName) {\n      setFirstNameError(true);\n      setFirstNameErrorText(\"Prénom non renseigné\");\n    } else {\n      setFirstNameError(false);\n      setFirstNameErrorText(\"\");\n    }\n\n    if (!lastName) {\n      setLastNameError(true);\n      setLastNameErrorText(\"Nom non renseigné\");\n    } else {\n      setLastNameError(false);\n      setLastNameErrorText(\"\");\n    }\n\n    if (!email) {\n      setEmailError(true);\n      setEmailErrorText(\"Adresse email non renseignée\");\n    } else {\n      if (!email.match(emailRegEx)) {\n        setEmailError(true);\n        setEmailErrorText(\"Adresse email non valide\");\n      } else {\n        setEmailError(false);\n        setEmailErrorText(\"\");\n      }\n    }\n\n    if (password !== \"\") {\n      setPasswordUpdated(true);\n    } else {\n      setPasswordUpdated(false);\n    }\n\n    if (!phone) {\n      setPhoneError(true);\n      setPhoneErrorText(\"N° de téléphone non renseigné\");\n    } else {\n      if (!phone.match(phoneRegEx)) {\n        setPhoneError(true);\n        setPhoneErrorText(\"N° de téléphone incorrect\");\n      } else {\n        setPhoneError(false);\n        setPhoneErrorText(\"\");\n      }\n    } //Si tous les champs sont bons, on enregistre l'utilisateur\n\n\n    if (firstName && lastName && email && phone && phone.match(phoneRegEx) && email.match(emailRegEx)) {\n      let datas = {\n        first_name: firstName,\n        last_name: lastName,\n        email: email,\n        phone: phone,\n        address: address,\n        zip: zip,\n        city: city\n      };\n      updateUser(datas, props.match.params.id).then(responseUpdateUser => {\n        if (responseUpdateUser.data.status === 200) {\n          console.log(\"Succès de la mise à jour utilisateur\");\n\n          if (passwordUpdated) {\n            let datasPassword = {\n              password: password\n            };\n            updatePassword(datasPassword, props.match.params.id).then(responsePassword => {\n              if (responsePassword.data.status === 200) {\n                console.log(\"Succès de la mise à jour du mot de passe\");\n              } else {\n                console.log(\"Erreur lors de la mise à jour du mot de passe\");\n              }\n            });\n          }\n        } else {\n          console.log(\"Erreur lors de la mise à jour de l'utilisateur\");\n        }\n      });\n      /*saveUser(datas)\n      .then(response => {\n          if(response.data.status === 401){\n              setEmailErrorText(\"Utilisateur existant\")\n              setEmailError(true)\n          }\n          else{\n              \n          }\n      })*/\n    }\n  };\n\n  const onSubmit = () => {\n    globalVerify();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(HeaderPages, {\n      headerTitle: headerTitle,\n      headerBreadcrumbs: headerBreadcrumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-container\",\n      children: [/*#__PURE__*/_jsxDEV(AdminMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Edition d'un utilisateur\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-edit-container\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"\",\n            autoComplete: \"off\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-edit-informations\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-edit-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: contactIcon,\n                  alt: \"Personnal information icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"admin-content-section-title\",\n                  children: \"Informations personnelles\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-edit-informations-content\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  error: true,\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Nom\",\n                    color: \"primary\",\n                    className: \"register-form-input\",\n                    required: true,\n                    onChange: e => {\n                      setLastName(e.target.value);\n                    },\n                    error: lastNameError,\n                    value: lastName || \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    children: lastNameErrorText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  error: true,\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Pr\\xE9nom\",\n                    color: \"primary\",\n                    className: \"register-form-input\",\n                    required: true,\n                    onChange: e => {\n                      setFirstName(e.target.value);\n                    },\n                    error: firstNameError,\n                    value: firstName || \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    children: firstNameErrorText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  error: true,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Mot de passe\",\n                    color: \"primary\",\n                    className: \"register-form-input\",\n                    required: true,\n                    onChange: e => {\n                      setPassword(e.target.value);\n                      e.target.value ? setPasswordUpdated(true) : setPasswordUpdated(false);\n                    },\n                    type: \"password\",\n                    defaultValue: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-edit-contact\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-edit-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: contactIcon,\n                  alt: \"Contact icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"admin-content-section-title\",\n                  children: \"Contact\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-edit-contact-content\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  error: true,\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Email\",\n                    color: \"primary\",\n                    className: \"edit-contact-form-input\",\n                    required: true,\n                    onChange: e => {\n                      setEmail(e.target.value);\n                    },\n                    error: emailError,\n                    type: \"email\",\n                    value: email || \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    children: emailErrorText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  error: true,\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"T\\xE9l\\xE9phone\",\n                    color: \"primary\",\n                    className: \"edit-contact-form-input\",\n                    required: true,\n                    error: phoneError,\n                    type: \"tel\",\n                    value: phone || \"\",\n                    onChange: e => {\n                      setPhone(e.target.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    children: phoneErrorText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  error: true,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Adresse\",\n                    color: \"primary\",\n                    className: \"edit-contact-form-input\",\n                    onChange: e => {\n                      setAddress(e.target.value);\n                    },\n                    value: address || \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  error: true,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Code Postal\",\n                    color: \"primary\",\n                    className: \"edit-contact-form-input\",\n                    onChange: e => {\n                      setZip(e.target.value);\n                    },\n                    value: zip || \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  error: true,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Ville\",\n                    color: \"primary\",\n                    className: \"edit-contact-form-input\",\n                    onChange: e => {\n                      setCity(e.target.value);\n                    },\n                    value: city || \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"admin-user-edit-button\",\n                color: \"primary\",\n                variant: \"contained\",\n                onClick: onSubmit,\n                children: \"Envoyer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-edit-role\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-edit-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: contactIcon,\n                  alt: \"Contact icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"admin-content-section-title\",\n                  children: \"R\\xF4le\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-edit-role-content\",\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  children: /*#__PURE__*/_jsxDEV(NativeSelect, {\n                    name: \"role\",\n                    className: \"\",\n                    children: roles.map(role => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: role.id,\n                        selected: idSelectedRole === role.id ? true : false,\n                        children: role.label\n                      }, role.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 274,\n                        columnNumber: 60\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdminUserEdit, \"JQu5p1k7Qkl3BTVjZV9hsK7uRnI=\");\n\n_c = AdminUserEdit;\nexport default AdminUserEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminUserEdit\");","map":{"version":3,"sources":["/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/src/containers/admin/aminUserEdit.js"],"names":["React","useState","useEffect","getOneUser","updateUser","updatePassword","updateRole","getAllRoles","Header","HeaderPages","Footer","AdminMenu","Button","TextField","FormHelperText","FormControl","InputLabel","NativeSelect","AdminUserEdit","props","headerTitle","setHeaderTitle","headerBreadcrumbs","setHeaderBreadcrumbs","value","link","firstName","setFirstName","firstNameError","setFirstNameError","firstNameErrorText","setFirstNameErrorText","lastName","setLastName","lastNameError","setLastNameError","lastNameErrorText","setLastNameErrorText","email","setEmail","emailError","setEmailError","emailErrorText","setEmailErrorText","password","setPassword","passwordUpdated","setPasswordUpdated","phone","setPhone","phoneError","setPhoneError","phoneErrorText","setPhoneErrorText","address","setAddress","zip","setZip","city","setCity","idSelectedRole","setIdSelectedRole","selectedRole","setSelectedRole","roles","setRoles","newRole","setNewRole","emailRegEx","phoneRegEx","match","params","id","then","user","first_name","last_name","id_role","role","rolesDB","data","result","globalVerify","datas","responseUpdateUser","status","console","log","datasPassword","responsePassword","onSubmit","contactIcon","e","target","map","label"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport {getOneUser, updateUser, updatePassword, updateRole, getAllRoles} from \"../../api/user\"\n\nimport Header from \"../headers/header\"\nimport HeaderPages from \"../headers/headerPages\"\nimport Footer from \"../footer\"\n\nimport AdminMenu from \"../../components/adminMenu\"\n\nimport contactIcon from \"../../assets/icons/email-blue.svg\"\n\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n\nconst AdminUserEdit = (props) => {\n\n    const [headerTitle, setHeaderTitle] = useState(\"Administration\")\n    const [headerBreadcrumbs, setHeaderBreadcrumbs] = useState([{value: \"Accueil\", link:\"/\"},\n                                                                {value:\"Administration\", link:\"/admin\"},\n                                                                {value: \"Utilisateurs\", link:\"/admin/users\"},\n                                                                {value: \"Edition\", link:null}])\n\n    const [firstName, setFirstName] = useState(\"\")\n    const [firstNameError, setFirstNameError] = useState(false)\n    const [firstNameErrorText, setFirstNameErrorText] = useState(\"\")\n    \n\n    const [lastName, setLastName] = useState(\"\")\n    const [lastNameError, setLastNameError] = useState(false)\n    const [lastNameErrorText, setLastNameErrorText] = useState(\"\")\n\n    const [email, setEmail] = useState(\"\")\n    const [emailError, setEmailError] = useState(\"\")\n    const [emailErrorText, setEmailErrorText] = useState(\"\")\n\n    const [password, setPassword] = useState(\"\")\n    const [passwordUpdated, setPasswordUpdated] = useState(false)\n\n    const [phone, setPhone] = useState(\"\")\n    const [phoneError, setPhoneError] = useState(false)\n    const [phoneErrorText, setPhoneErrorText] = useState(\"\")\n\n    const [address, setAddress] = useState(\"\")\n    const [zip, setZip] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n\n    const [idSelectedRole, setIdSelectedRole] = useState(\"\")\n    const [selectedRole, setSelectedRole] = useState(\"\")\n\n    const [roles, setRoles] = useState([])\n    const [newRole, setNewRole] = useState(0)\n\n    // RegEx de vérification du mail\n    let emailRegEx = /^[a-z]+([\\.\\-_]?[a-z0-9]+)*@([a-z]{3,})+(\\.[a-z]{2,3})+$/\n\n    // RegEx de vérification du Téléphone\n    let phoneRegEx = /^(?:(?:\\+|00)33|0)\\s*[1-9](?:[\\s.-]*\\d{2}){4}$/\n    \n    useEffect(() => {\n        getOneUser(props.match.params.id)\n        .then((user) => {\n            setFirstName(user.first_name)\n            setLastName(user.last_name)\n            setEmail(user.email)\n            setPhone(user.phone)\n            setAddress(user.address)\n            setZip(user.zip)\n            setCity(user.city)\n            setIdSelectedRole(user.id_role)\n            setSelectedRole(user.role)\n            setNewRole(user.id_role)\n        })\n        getAllRoles()\n        .then(rolesDB => {\n            setRoles(rolesDB.data.result)\n        })\n    }, [])\n\n    const globalVerify = () => {\n\n        if(!firstName){\n            setFirstNameError(true)\n            setFirstNameErrorText(\"Prénom non renseigné\")\n        }\n        else {\n            setFirstNameError(false)\n            setFirstNameErrorText(\"\")\n        }\n\n        if(!lastName){\n            setLastNameError(true)\n            setLastNameErrorText(\"Nom non renseigné\")\n        }\n        else {\n            setLastNameError(false)\n            setLastNameErrorText(\"\")\n        }\n        if(!email){\n            setEmailError(true)\n            setEmailErrorText(\"Adresse email non renseignée\")\n        }\n        else {\n            if(!email.match(emailRegEx)){\n                setEmailError(true)\n                setEmailErrorText(\"Adresse email non valide\")\n            }\n            else {\n                setEmailError(false)\n                setEmailErrorText(\"\")\n            }\n        }\n        if(password !== \"\"){\n            setPasswordUpdated(true)\n        }\n        else {\n            setPasswordUpdated(false)\n        }\n        if(!phone){\n            setPhoneError(true)\n            setPhoneErrorText(\"N° de téléphone non renseigné\")\n        }\n        else{\n            if(!phone.match(phoneRegEx)){\n                setPhoneError(true)\n                setPhoneErrorText(\"N° de téléphone incorrect\")\n            }\n            else {\n                setPhoneError(false)\n                setPhoneErrorText(\"\")\n            }\n        }\n\n        //Si tous les champs sont bons, on enregistre l'utilisateur\n        if(firstName && lastName && email && phone && phone.match(phoneRegEx) && email.match(emailRegEx)){\n            \n            let datas = {\n                first_name: firstName,\n                last_name: lastName,\n                email: email,\n                phone: phone,\n                address: address,\n                zip: zip,\n                city: city\n            }    \n\n            updateUser(datas, props.match.params.id)\n            .then(responseUpdateUser => {\n                if(responseUpdateUser.data.status === 200){\n                    console.log(\"Succès de la mise à jour utilisateur\")\n                    if(passwordUpdated){\n                        let datasPassword = {\n                            password: password\n                        }\n                        updatePassword(datasPassword, props.match.params.id)\n                        .then(responsePassword => { \n                            if(responsePassword.data.status === 200){\n                                console.log(\"Succès de la mise à jour du mot de passe\")\n                            }\n                            else {\n                                console.log(\"Erreur lors de la mise à jour du mot de passe\")\n                            }\n                        })\n                    }\n                }\n                else {\n                    console.log(\"Erreur lors de la mise à jour de l'utilisateur\")\n                }\n            })\n            /*saveUser(datas)\n            .then(response => {\n                if(response.data.status === 401){\n                    setEmailErrorText(\"Utilisateur existant\")\n                    setEmailError(true)\n                }\n                else{\n                    \n                }\n            })*/\n            \n        }\n        \n    }\n\n    const onSubmit = () => {\n        globalVerify()\n    }\n\n    return(\n        <div className=\"root\">\n                <Header />\n                <HeaderPages headerTitle={headerTitle} headerBreadcrumbs={headerBreadcrumbs}/>\n                <div className=\"admin-container\">\n                    <AdminMenu />\n\n                    <div className=\"admin-content\">\n                        <h4>Edition d'un utilisateur</h4>\n                        <div className=\"user-edit-container\">\n                            <form className=\"\" autoComplete=\"off\">\n                                <div className=\"user-edit-informations\">\n                                    <div className=\"user-edit-header\">\n                                        <img src={contactIcon} alt=\"Personnal information icon\" />\n                                        <p className=\"admin-content-section-title\">Informations personnelles</p>\n                                    </div>\n                                    <div className=\"user-edit-informations-content\">\n                                        <FormControl error>\n                                            <TextField label=\"Nom\" color=\"primary\" className=\"register-form-input\" required onChange={(e) => {setLastName(e.target.value)}} error={lastNameError} value={lastName || \"\"} />\n                                            <FormHelperText>{lastNameErrorText}</FormHelperText>\n                                        </FormControl>\n\n                                        <FormControl error>\n                                            <TextField label=\"Prénom\" color=\"primary\" className=\"register-form-input\" required onChange={(e) => {setFirstName(e.target.value)}} error={firstNameError} value={firstName || \"\"}/>\n                                            <FormHelperText>{firstNameErrorText}</FormHelperText>\n                                        </FormControl>\n\n                                        <FormControl error>\n                                            <TextField label=\"Mot de passe\" color=\"primary\" className=\"register-form-input\" required onChange={(e) => {setPassword(e.target.value)\n                                            e.target.value ? setPasswordUpdated(true) : setPasswordUpdated(false)}} type=\"password\" defaultValue=\"\"/>\n                                           \n                                        </FormControl>\n                                    </div>\n                                </div>\n                                <div className=\"user-edit-contact\">\n                                        <div className=\"user-edit-header\">\n                                            <img src={contactIcon} alt=\"Contact icon\" />\n                                            <p className=\"admin-content-section-title\">Contact</p>\n                                        </div>\n                                        <div className=\"user-edit-contact-content\">\n                                            \n                                                <FormControl error>\n                                                    <TextField label=\"Email\" color=\"primary\" className=\"edit-contact-form-input\" required onChange={(e) => {setEmail(e.target.value)}} error={emailError} type=\"email\" value={email || \"\"}/>\n                                                    <FormHelperText>{emailErrorText}</FormHelperText>\n                                                </FormControl>\n\n                                                <FormControl error>\n                                                    <TextField label=\"Téléphone\" color=\"primary\" className=\"edit-contact-form-input\" required  error={phoneError} type=\"tel\" value={phone || \"\"\n                                                    } onChange={(e) => {setPhone(e.target.value)}} />\n                                                    <FormHelperText>{phoneErrorText}</FormHelperText>\n                                                </FormControl>\n\n                                                <FormControl error>\n                                                    <TextField label=\"Adresse\" color=\"primary\" className=\"edit-contact-form-input\" onChange={(e) => {setAddress(e.target.value)}} value={address || \"\"}/>\n                                                </FormControl>\n\n                                                <FormControl error>\n                                                    <TextField label=\"Code Postal\" color=\"primary\" className=\"edit-contact-form-input\" onChange={(e) => {setZip(e.target.value)}} value={zip || \"\"}/>\n                                                </FormControl>\n\n                                                <FormControl error>\n                                                    <TextField label=\"Ville\" color=\"primary\" className=\"edit-contact-form-input\" onChange={(e) => {setCity(e.target.value)}} value={city || \"\"}/>\n                                                </FormControl>\n\n                                                \n                                        </div>\n                                        <Button className=\"admin-user-edit-button\" color=\"primary\" variant=\"contained\" onClick={onSubmit}>\n                                                    Envoyer\n                                                </Button>\n                                </div>\n                                <div className=\"user-edit-role\">\n                                    <div className=\"user-edit-header\">\n                                        <img src={contactIcon} alt=\"Contact icon\" />\n                                        <p className=\"admin-content-section-title\">Rôle</p>\n                                    </div>\n                                    <div className=\"user-edit-role-content\">\n                                        <FormControl>\n                                        <NativeSelect\n                                        name=\"role\"\n                                        className=\"\"\n                                        >\n                                            {roles.map((role) => {\n                                                    return(<option value={role.id} key={role.id} selected={idSelectedRole === role.id ? true : false}>{role.label}</option>)\n                                            })}\n                                        </NativeSelect></FormControl>\n                                    </div>\n                                </div>                            \n                            </form>\n                        </div>\n\n                    </div>\n                </div>\n                <Footer />\n        </div>\n    )\n}\n\nexport default AdminUserEdit"]},"metadata":{},"sourceType":"module"}