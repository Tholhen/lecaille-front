{"ast":null,"code":"var _jsxFileName = \"/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/src/components/shopOpinionPopUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { saveUser } from \"../api/user\";\nimport { config } from \"../config\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from \"@material-ui/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShopOpinionPopUp = props => {\n  _s();\n\n  //Définition des variables\n  const [opinion, setOpinion] = useState(\"\");\n  const [opinionError, setOpinionError] = useState(false);\n  const [opinionErrorMsg, setOpinionErrorMsg] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(\"\");\n  const [filePreview, setFilePreview] = useState(\"\");\n  const [defaultPict, setDefaultPict] = useState(\"no-pict.png\"); //Définition des styles MaterialUI\n\n  const useStyles = makeStyles(theme => ({\n    margin: {\n      marginTop: theme.spacing(3)\n    }\n  }));\n  const classes = useStyles();\n  const [firstName, setFirstName] = useState(\"\");\n  const [firstNameError, setFirstNameError] = useState(false);\n  const [firstNameErrorText, setFirstNameErrorText] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [lastNameError, setLastNameError] = useState(false);\n  const [lastNameErrorText, setLastNameErrorText] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [emailErrorText, setEmailErrorText] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(false);\n  const [passwordErrorText, setPasswordErrorText] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(false);\n  const [phoneErrorText, setPhoneErrorText] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n\n  const globalVerify = () => {\n    if (!firstName) {\n      setFirstNameError(true);\n      setFirstNameErrorText(\"Prénom non renseigné\");\n    } else {\n      setFirstNameError(false);\n      setFirstNameErrorText(\"\");\n    }\n\n    if (!lastName) {\n      setLastNameError(true);\n      setLastNameErrorText(\"Nom non renseigné\");\n    } else {\n      setLastNameError(false);\n      setLastNameErrorText(\"\");\n    }\n\n    if (!email) {\n      setEmailError(true);\n      setEmailErrorText(\"Adresse email non renseignée\");\n    } else {\n      if (!email.match(config.emailRegEx)) {\n        setEmailError(true);\n        setEmailErrorText(\"Format d'email non valide\");\n      } else {\n        setEmailError(false);\n        setEmailErrorText(\"\");\n      }\n    } //Si tous les champs sont bons, on enregistre l'utilisateur\n\n\n    if (firstName && lastName && email && password && phone && email.match(config.emailRegEx)) {\n      let datas = {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        password: password,\n        phone: phone,\n        address: address,\n        zip: zip,\n        city: city\n      };\n      saveUser(datas).then(response => {\n        if (response.data.status === 401) {\n          setEmailErrorText(\"Utilisateur existant\");\n          setEmailError(true);\n        } else {\n          props.closeShopOpinionPopUp();\n        }\n      });\n    }\n  };\n\n  const onSubmit = () => {\n    globalVerify();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: props.opened,\n    onClose: e => {\n      props.closeShopOpinionPopUp();\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Votre avis compte pour nous !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"shop-opinion-popup-form\",\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          error: true,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"filled\",\n            label: \"Avis\",\n            required: true,\n            multiline: true,\n            rows: 4,\n            error: opinionErrorMsg,\n            onChange: e => {\n              setOpinion(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: opinionErrorMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: classes.margin,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            accept: \"images/*\",\n            style: {\n              display: 'none'\n            },\n            id: \"file-select\",\n            type: \"file\",\n            onChange: e => {\n              setSelectedFile(e.target.files[0]);\n\n              if (e.target.files.length > 0) {\n                setFilePreview(URL.createObjectURL(e.target.files[0]));\n              } else {\n                setFilePreview(\"\");\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-select\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              component: \"span\",\n              children: \"Ajouter une photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shop-opinion-popup-preview\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: filePreview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this), selectedFile && selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: e => {\n          props.closeShopOpinionPopUp();\n        },\n        color: \"primary\",\n        children: \"Annuler\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: e => {\n          onSubmit();\n        },\n        color: \"primary\",\n        variant: \"contained\",\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ShopOpinionPopUp, \"IELH33Kx4ewIMlmvs8xoEY8wm9w=\", true);\n\n_c = ShopOpinionPopUp;\n\nconst mapStateToProps = store => {\n  return {\n    user: store.user\n  };\n};\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopOpinionPopUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"ShopOpinionPopUp\");","map":{"version":3,"sources":["/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/src/components/shopOpinionPopUp.js"],"names":["React","useState","connect","saveUser","config","Dialog","DialogActions","DialogContent","DialogTitle","Button","TextField","FormHelperText","FormControl","makeStyles","ShopOpinionPopUp","props","opinion","setOpinion","opinionError","setOpinionError","opinionErrorMsg","setOpinionErrorMsg","selectedFile","setSelectedFile","filePreview","setFilePreview","defaultPict","setDefaultPict","useStyles","theme","margin","marginTop","spacing","classes","firstName","setFirstName","firstNameError","setFirstNameError","firstNameErrorText","setFirstNameErrorText","lastName","setLastName","lastNameError","setLastNameError","lastNameErrorText","setLastNameErrorText","email","setEmail","emailError","setEmailError","emailErrorText","setEmailErrorText","password","setPassword","passwordError","setPasswordError","passwordErrorText","setPasswordErrorText","phone","setPhone","phoneError","setPhoneError","phoneErrorText","setPhoneErrorText","address","setAddress","zip","setZip","city","setCity","globalVerify","match","emailRegEx","datas","then","response","data","status","closeShopOpinionPopUp","onSubmit","opened","e","target","value","display","files","length","URL","createObjectURL","name","mapStateToProps","store","user","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {connect} from \"react-redux\"\nimport {saveUser} from \"../api/user\"\nimport {config} from \"../config\"\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport {makeStyles } from \"@material-ui/styles\";\n\n\n\nconst ShopOpinionPopUp = (props) => {\n\n    //Définition des variables\n    const [opinion, setOpinion] = useState(\"\")\n    const [opinionError, setOpinionError] = useState(false)\n    const [opinionErrorMsg, setOpinionErrorMsg] = useState(\"\")\n\n    const [selectedFile, setSelectedFile] = useState(\"\")\n    const [filePreview, setFilePreview] = useState(\"\")\n    const [defaultPict, setDefaultPict] = useState(\"no-pict.png\")\n\n    //Définition des styles MaterialUI\n    const useStyles = makeStyles((theme) => ({\n        margin:{\n            marginTop: theme.spacing(3)\n        }\n        }));\n        \n    const classes = useStyles();\n\n\n\n    const [firstName, setFirstName] = useState(\"\")\n    const [firstNameError, setFirstNameError] = useState(false)\n    const [firstNameErrorText, setFirstNameErrorText] = useState(\"\")\n\n    const [lastName, setLastName] = useState(\"\")\n    const [lastNameError, setLastNameError] = useState(false)\n    const [lastNameErrorText, setLastNameErrorText] = useState(\"\")\n\n    const [email, setEmail] = useState(\"\")\n    const [emailError, setEmailError] = useState(\"\")\n    const [emailErrorText, setEmailErrorText] = useState(\"\")\n\n    const [password, setPassword] = useState(\"\")\n    const [passwordError, setPasswordError] = useState(false)\n    const [passwordErrorText, setPasswordErrorText] = useState(\"\")\n\n    const [phone, setPhone] = useState(\"\")\n    const [phoneError, setPhoneError] = useState(false)\n    const [phoneErrorText, setPhoneErrorText] = useState(\"\")\n\n    const [address, setAddress] = useState(\"\")\n    const [zip, setZip] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n\n    const globalVerify = () => {\n\n            if(!firstName){\n                setFirstNameError(true)\n                setFirstNameErrorText(\"Prénom non renseigné\")\n            }\n            else {\n                setFirstNameError(false)\n                setFirstNameErrorText(\"\")\n            }\n\n            if(!lastName){\n                setLastNameError(true)\n                setLastNameErrorText(\"Nom non renseigné\")\n            }\n            else {\n                setLastNameError(false)\n                setLastNameErrorText(\"\")\n            }\n            if(!email){\n                setEmailError(true)\n                setEmailErrorText(\"Adresse email non renseignée\")\n            }\n            else {\n                if(!email.match(config.emailRegEx)){\n                    setEmailError(true)\n                    setEmailErrorText(\"Format d'email non valide\")\n                }\n                else {\n                    setEmailError(false)\n                    setEmailErrorText(\"\")\n                }\n            }\n\n            //Si tous les champs sont bons, on enregistre l'utilisateur\n            if(firstName && lastName && email && password && phone && email.match(config.emailRegEx)){\n                \n                let datas = {\n                    firstName: firstName,\n                    lastName: lastName,\n                    email: email,\n                    password: password,\n                    phone: phone,\n                    address: address,\n                    zip: zip,\n                    city: city\n                }    \n                \n                saveUser(datas)\n                .then(response => {\n                    if(response.data.status === 401){\n                        setEmailErrorText(\"Utilisateur existant\")\n                        setEmailError(true)\n                    }\n                    else{\n                        props.closeShopOpinionPopUp()\n                    }\n                })\n                \n            }\n            \n    }\n\n    const onSubmit = () =>{\n        globalVerify()\n       \n    }\n\n    return(\n        <Dialog\n            open={props.opened}\n            onClose={(e) => {props.closeShopOpinionPopUp()}}\n        >\n            <DialogTitle>Votre avis compte pour nous !</DialogTitle>\n            <DialogContent>\n                <form className=\"shop-opinion-popup-form\">\n                    <FormControl error>\n                    <TextField variant=\"filled\" \n                                label=\"Avis\"\n                                required\n                                multiline rows={4}\n                                error={opinionErrorMsg}\n                                onChange={(e) => {setOpinion(e.target.value)}}/>\n                        <FormHelperText>{opinionErrorMsg}</FormHelperText>\n                    </FormControl>\n\n                    <FormControl className={classes.margin}>\n                        <input \n                        accept=\"images/*\"\n                        style={{display: 'none'}}\n                        id=\"file-select\"\n                        type=\"file\"\n                        onChange={(e) => {setSelectedFile(e.target.files[0])\n                                            if(e.target.files.length > 0) {\n                                            setFilePreview(URL.createObjectURL(e.target.files[0]))\n                                            }\n                                            else {\n                                            setFilePreview(\"\")\n                                        }\n                                            }}\n                        />\n                        <label htmlFor=\"file-select\">\n                            <Button color=\"primary\" component=\"span\">Ajouter une photo</Button>\n                            \n                        </label>\n                        <div className=\"shop-opinion-popup-preview\">\n                            <img src={filePreview} />\n                            {selectedFile && selectedFile.name}\n                        </div>\n                    </FormControl>\n                    \n                </form>\n            </DialogContent>\n            <DialogActions>\n            <Button onClick={(e) => {props.closeShopOpinionPopUp()}} color=\"primary\">\n                Annuler\n            </Button>\n            <Button onClick={(e) => {onSubmit()}} color=\"primary\" variant=\"contained\">\n                Envoyer\n            </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nconst mapStateToProps = (store) => {\n    return {\n        user: store.user\n    }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopOpinionPopUp)"]},"metadata":{},"sourceType":"module"}