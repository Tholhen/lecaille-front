{"ast":null,"code":"var _jsxFileName = \"/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/src/containers/user/profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateUser, updatePassword } from \"../../api/user\";\nimport { config } from \"../../config/config\"; //Imports des composants de l'UI externes\n\nimport Header from \"../headers/header\";\nimport HeaderPages from \"../headers/headerPages\";\nimport Footer from \"../footer\"; //Imports depuis la librairie MaterialUI\n\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport { makeStyles } from \"@material-ui/styles\";\nimport contactIcon from \"../../assets/icons/email-blue.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = props => {\n  _s();\n\n  const headerTitle = \"Profil\";\n  const headerBreadcrumbs = [{\n    value: \"Accueil\",\n    link: \"/\"\n  }, {\n    value: \"Profil\",\n    link: null\n  }];\n  const [firstName, setFirstName] = useState(\"\");\n  const [firstNameError, setFirstNameError] = useState(false);\n  const [firstNameErrorText, setFirstNameErrorText] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [lastNameError, setLastNameError] = useState(false);\n  const [lastNameErrorText, setLastNameErrorText] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [emailErrorText, setEmailErrorText] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordUpdated, setPasswordUpdated] = useState(false);\n  const [phone, setPhone] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(false);\n  const [phoneErrorText, setPhoneErrorText] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [city, setCity] = useState(\"\"); //Définition des styles MaterialUI\n\n  const useStyles = makeStyles(theme => ({\n    margin: {\n      margin: theme.spacing(1)\n    }\n  }));\n  const classes = useStyles(); //Au chargement de la page\n\n  useEffect(() => {}, []); // Au click sur le bouton envoyer\n\n  const onSubmit = () => {\n    globalVerify();\n  };\n\n  const globalVerify = () => {\n    if (!firstName) {\n      setFirstNameError(true);\n      setFirstNameErrorText(\"Prénom non renseigné\");\n    } else {\n      setFirstNameError(false);\n      setFirstNameErrorText(\"\");\n    }\n\n    if (!lastName) {\n      setLastNameError(true);\n      setLastNameErrorText(\"Nom non renseigné\");\n    } else {\n      setLastNameError(false);\n      setLastNameErrorText(\"\");\n    }\n\n    if (!email) {\n      setEmailError(true);\n      setEmailErrorText(\"Adresse email non renseignée\");\n    } else {\n      if (!email.match(config.emailRegEx)) {\n        setEmailError(true);\n        setEmailErrorText(\"Adresse email non valide\");\n      } else {\n        setEmailError(false);\n        setEmailErrorText(\"\");\n      }\n    }\n\n    if (password !== \"\") {\n      setPasswordUpdated(true);\n    } else {\n      setPasswordUpdated(false);\n    }\n\n    if (!phone) {\n      setPhoneError(true);\n      setPhoneErrorText(\"N° de téléphone non renseigné\");\n    } else {\n      if (!phone.match(config.phoneRegEx)) {\n        setPhoneError(true);\n        setPhoneErrorText(\"N° de téléphone incorrect\");\n      } else {\n        setPhoneError(false);\n        setPhoneErrorText(\"\");\n      }\n    } //Si tous les champs sont bons, on enregistre l'utilisateur\n\n\n    if (firstName && lastName && email && phone && phone.match(config.phoneRegEx) && email.match(config.emailRegEx)) {\n      let datas = {\n        first_name: firstName,\n        last_name: lastName,\n        email: email,\n        phone: phone,\n        address: address,\n        zip: zip,\n        city: city\n      };\n      updateUser(datas, props.match.params.id).then(responseUpdateUser => {\n        if (responseUpdateUser.data.status === 200) {\n          console.log(\"Succès de la mise à jour utilisateur\");\n\n          if (passwordUpdated) {\n            let datasPassword = {\n              password: password\n            };\n            updatePassword(datasPassword, props.match.params.id).then(responsePassword => {\n              if (responsePassword.data.status === 200) {\n                console.log(\"Succès de la mise à jour du mot de passe\");\n              } else {\n                console.log(\"Erreur lors de la mise à jour du mot de passe\");\n              }\n            });\n          }\n        } else {\n          console.log(\"Erreur lors de la mise à jour de l'utilisateur\");\n        }\n      });\n      /*saveUser(datas)\n      .then(response => {\n          if(response.data.status === 401){\n              setEmailErrorText(\"Utilisateur existant\")\n              setEmailError(true)\n          }\n          else{\n              \n          }\n      })*/\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HeaderPages, {\n      headerTitle: headerTitle,\n      headerBreadcrumbs: headerBreadcrumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"user-edit-informations\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-edit-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: contactIcon,\n            alt: \"Personnal information icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"admin-content-section-title\",\n            children: \"Informations personnelles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-edit-informations-content\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            error: true,\n            className: classes.margin,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Nom\",\n              color: \"primary\",\n              className: \"register-form-input\",\n              required: true,\n              onChange: e => {\n                setLastName(e.target.value);\n              },\n              error: lastNameError,\n              value: lastName || \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              children: lastNameErrorText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            error: true,\n            className: classes.margin,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Pr\\xE9nom\",\n              color: \"primary\",\n              className: \"register-form-input\",\n              required: true,\n              onChange: e => {\n                setFirstName(e.target.value);\n              },\n              error: firstNameError,\n              value: firstName || \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              children: firstNameErrorText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            error: true,\n            className: classes.margin,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Mot de passe\",\n              color: \"primary\",\n              className: \"register-form-input\",\n              onChange: e => {\n                setPassword(e.target.value);\n                e.target.value ? setPasswordUpdated(true) : setPasswordUpdated(false);\n              },\n              type: \"password\",\n              defaultValue: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"user-edit-contact\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-edit-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: contactIcon,\n            alt: \"Contact icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"admin-content-section-title\",\n            children: \"Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-edit-contact-content\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            error: true,\n            className: classes.margin,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Email\",\n              color: \"primary\",\n              required: true,\n              onChange: e => {\n                setEmail(e.target.value);\n              },\n              error: emailError,\n              type: \"email\",\n              value: email || \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              children: emailErrorText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            error: true,\n            className: classes.margin,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"T\\xE9l\\xE9phone\",\n              color: \"primary\",\n              required: true,\n              error: phoneError,\n              type: \"tel\",\n              value: phone || \"\",\n              onChange: e => {\n                setPhone(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              children: phoneErrorText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            error: true,\n            className: classes.margin,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Adresse\",\n              color: \"primary\",\n              onChange: e => {\n                setAddress(e.target.value);\n              },\n              value: address || \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            error: true,\n            className: classes.margin,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Code Postal\",\n              color: \"primary\",\n              onChange: e => {\n                setZip(e.target.value);\n              },\n              value: zip || \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            error: true,\n            className: classes.margin,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Ville\",\n              color: \"primary\",\n              onChange: e => {\n                setCity(e.target.value);\n              },\n              value: city || \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"admin-user-edit-button\",\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: onSubmit,\n          children: \"Envoyer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"8TlTrIyDX3MgjWgPDKsfo13cj7Y=\", true);\n\n_c = Profile;\n\nconst mapStateToProps = store => {\n  return {};\n};\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/src/containers/user/profile.js"],"names":["React","useState","useEffect","connect","updateUser","updatePassword","config","Header","HeaderPages","Footer","Button","TextField","FormHelperText","FormControl","InputLabel","NativeSelect","makeStyles","Profile","props","headerTitle","headerBreadcrumbs","value","link","firstName","setFirstName","firstNameError","setFirstNameError","firstNameErrorText","setFirstNameErrorText","lastName","setLastName","lastNameError","setLastNameError","lastNameErrorText","setLastNameErrorText","email","setEmail","emailError","setEmailError","emailErrorText","setEmailErrorText","password","setPassword","passwordUpdated","setPasswordUpdated","phone","setPhone","phoneError","setPhoneError","phoneErrorText","setPhoneErrorText","address","setAddress","zip","setZip","city","setCity","useStyles","theme","margin","spacing","classes","onSubmit","globalVerify","match","emailRegEx","phoneRegEx","datas","first_name","last_name","params","id","then","responseUpdateUser","data","status","console","log","datasPassword","responsePassword","contactIcon","e","target","mapStateToProps","store","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport {connect} from \"react-redux\"\n\nimport {updateUser, updatePassword} from \"../../api/user\"\nimport {config} from \"../../config/config\"\n\n//Imports des composants de l'UI externes\nimport Header from \"../headers/header\"\nimport HeaderPages from \"../headers/headerPages\"\nimport Footer from \"../footer\"\n\n//Imports depuis la librairie MaterialUI\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport {makeStyles } from \"@material-ui/styles\";\n\nimport contactIcon from \"../../assets/icons/email-blue.svg\"\n\nconst Profile = (props) => {\n\n    const headerTitle = \"Profil\"\n    const headerBreadcrumbs = [{value: \"Accueil\", link:\"/\"}, {value: \"Profil\", link:null}]\n\n    \n    const [firstName, setFirstName] = useState(\"\")\n    const [firstNameError, setFirstNameError] = useState(false)\n    const [firstNameErrorText, setFirstNameErrorText] = useState(\"\")\n    \n\n    const [lastName, setLastName] = useState(\"\")\n    const [lastNameError, setLastNameError] = useState(false)\n    const [lastNameErrorText, setLastNameErrorText] = useState(\"\")\n\n    const [email, setEmail] = useState(\"\")\n    const [emailError, setEmailError] = useState(\"\")\n    const [emailErrorText, setEmailErrorText] = useState(\"\")\n\n    const [password, setPassword] = useState(\"\")\n    const [passwordUpdated, setPasswordUpdated] = useState(false)\n\n    const [phone, setPhone] = useState(\"\")\n    const [phoneError, setPhoneError] = useState(false)\n    const [phoneErrorText, setPhoneErrorText] = useState(\"\")\n\n    const [address, setAddress] = useState(\"\")\n    const [zip, setZip] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n\n    //Définition des styles MaterialUI\n    const useStyles = makeStyles((theme) => ({\n        margin: {\n            margin: theme.spacing(1),\n        }\n        }));\n        \n    const classes = useStyles();\n\n    //Au chargement de la page\n    useEffect(() => {\n        \n    }, [])\n\n    // Au click sur le bouton envoyer\n    const onSubmit = () => {\n        globalVerify()\n    }\n\n    const globalVerify = () => {\n\n        if(!firstName){\n            setFirstNameError(true)\n            setFirstNameErrorText(\"Prénom non renseigné\")\n        }\n        else {\n            setFirstNameError(false)\n            setFirstNameErrorText(\"\")\n        }\n\n        if(!lastName){\n            setLastNameError(true)\n            setLastNameErrorText(\"Nom non renseigné\")\n        }\n        else {\n            setLastNameError(false)\n            setLastNameErrorText(\"\")\n        }\n        if(!email){\n            setEmailError(true)\n            setEmailErrorText(\"Adresse email non renseignée\")\n        }\n        else {\n            if(!email.match(config.emailRegEx)){\n                setEmailError(true)\n                setEmailErrorText(\"Adresse email non valide\")\n            }\n            else {\n                setEmailError(false)\n                setEmailErrorText(\"\")\n            }\n        }\n        if(password !== \"\"){\n            setPasswordUpdated(true)\n        }\n        else {\n            setPasswordUpdated(false)\n        }\n        if(!phone){\n            setPhoneError(true)\n            setPhoneErrorText(\"N° de téléphone non renseigné\")\n        }\n        else{\n            if(!phone.match(config.phoneRegEx)){\n                setPhoneError(true)\n                setPhoneErrorText(\"N° de téléphone incorrect\")\n            }\n            else {\n                setPhoneError(false)\n                setPhoneErrorText(\"\")\n            }\n        }\n\n        //Si tous les champs sont bons, on enregistre l'utilisateur\n        if(firstName && lastName && email && phone && phone.match(config.phoneRegEx) && email.match(config.emailRegEx)){\n            \n            let datas = {\n                first_name: firstName,\n                last_name: lastName,\n                email: email,\n                phone: phone,\n                address: address,\n                zip: zip,\n                city: city\n            }    \n\n            updateUser(datas, props.match.params.id)\n            .then(responseUpdateUser => {\n                if(responseUpdateUser.data.status === 200){\n                    console.log(\"Succès de la mise à jour utilisateur\")\n                    if(passwordUpdated){\n                        let datasPassword = {\n                            password: password\n                        }\n                        updatePassword(datasPassword, props.match.params.id)\n                        .then(responsePassword => { \n                            if(responsePassword.data.status === 200){\n                                console.log(\"Succès de la mise à jour du mot de passe\")\n                            }\n                            else {\n                                console.log(\"Erreur lors de la mise à jour du mot de passe\")\n                            }\n                        })\n                    }\n                    \n\n                    \n                }\n                else {\n                    console.log(\"Erreur lors de la mise à jour de l'utilisateur\")\n                }\n            })\n            /*saveUser(datas)\n            .then(response => {\n                if(response.data.status === 401){\n                    setEmailErrorText(\"Utilisateur existant\")\n                    setEmailError(true)\n                }\n                else{\n                    \n                }\n            })*/\n            \n        }\n        \n    }\n\n    return(\n        <section className=\"root\">\n            <Header />\n            <HeaderPages headerTitle={headerTitle} headerBreadcrumbs={headerBreadcrumbs}/>\n            <section className=\"profile-container\">\n                <section className=\"user-edit-informations\">\n                    <div className=\"user-edit-header\">\n                        <img src={contactIcon} alt=\"Personnal information icon\" />\n                        <p className=\"admin-content-section-title\">Informations personnelles</p>\n                    </div>\n                    <div className=\"user-edit-informations-content\">\n                        <FormControl error className={classes.margin}>\n                            <TextField label=\"Nom\" color=\"primary\" className=\"register-form-input\" required onChange={(e) => {setLastName(e.target.value)}} error={lastNameError} value={lastName || \"\"} />\n                            <FormHelperText>{lastNameErrorText}</FormHelperText>\n                        </FormControl>\n\n                        <FormControl error className={classes.margin}>\n                            <TextField label=\"Prénom\" color=\"primary\" className=\"register-form-input\" required onChange={(e) => {setFirstName(e.target.value)}} error={firstNameError} value={firstName || \"\"}/>\n                            <FormHelperText>{firstNameErrorText}</FormHelperText>\n                        </FormControl>\n\n                        <FormControl error className={classes.margin}>\n                            <TextField label=\"Mot de passe\" color=\"primary\" className=\"register-form-input\" onChange={(e) => {setPassword(e.target.value)\n                            e.target.value ? setPasswordUpdated(true) : setPasswordUpdated(false)}} type=\"password\" defaultValue=\"\"/>\n                        </FormControl>\n                    </div>\n                </section>\n                <section className=\"user-edit-contact\">\n                        <div className=\"user-edit-header\">\n                            <img src={contactIcon} alt=\"Contact icon\" />\n                            <p className=\"admin-content-section-title\">Contact</p>\n                        </div>\n                        <div className=\"user-edit-contact-content\">\n                            \n                                <FormControl error className={classes.margin} >\n                                    <TextField label=\"Email\" color=\"primary\" required onChange={(e) => {setEmail(e.target.value)}} error={emailError} type=\"email\" value={email || \"\"}/>\n                                    <FormHelperText>{emailErrorText}</FormHelperText>\n                                </FormControl>\n\n                                <FormControl error className={classes.margin}>\n                                    <TextField label=\"Téléphone\" color=\"primary\" required  error={phoneError} type=\"tel\" value={phone || \"\"\n                                    } onChange={(e) => {setPhone(e.target.value)}} />\n                                    <FormHelperText>{phoneErrorText}</FormHelperText>\n                                </FormControl>\n\n                                <FormControl error className={classes.margin}>\n                                    <TextField label=\"Adresse\" color=\"primary\" onChange={(e) => {setAddress(e.target.value)}} value={address || \"\"}/>\n                                </FormControl>\n\n                                <FormControl error className={classes.margin}>\n                                    <TextField label=\"Code Postal\" color=\"primary\" onChange={(e) => {setZip(e.target.value)}} value={zip || \"\"}/>\n                                </FormControl>\n\n                                <FormControl error className={classes.margin}>\n                                    <TextField label=\"Ville\" color=\"primary\" onChange={(e) => {setCity(e.target.value)}} value={city || \"\"}/>\n                                </FormControl>\n\n                                \n                        </div>\n                        <Button className=\"admin-user-edit-button\" color=\"primary\" variant=\"contained\" onClick={onSubmit}>\n                                    Envoyer\n                                </Button>\n                </section>            \n            </section>\n            <Footer />\n        </section>\n    )\n}\n\nconst mapStateToProps = (store) => {\n    return {\n\n    }\n\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)"]},"metadata":{},"sourceType":"module"}