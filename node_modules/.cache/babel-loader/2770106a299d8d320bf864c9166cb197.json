{"ast":null,"code":"var _jsxFileName = \"/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/src/components/registerPopUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { saveUser } from \"../api/user\";\nimport MaskedInput from 'react-text-mask';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles, makeStyles } from \"@material-ui/styles\";\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterPopUp = props => {\n  _s();\n\n  //Définition des variables\n  const [firstName, setFirstName] = useState(\"\");\n  const [firstNameError, setFirstNameError] = useState(false);\n  const [firstNameErrorText, setFirstNameErrorText] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [lastNameError, setLastNameError] = useState(false);\n  const [lastNameErrorText, setLastNameErrorText] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [emailErrorText, setEmailErrorText] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(false);\n  const [passwordErrorText, setPasswordErrorText] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(false);\n  const [phoneErrorText, setPhoneErrorText] = useState(\"\");\n  const [autoFocusPhone, setAutoFocusPhone] = useState(true);\n  const [address, setAddress] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [redirect, setRedirect] = useState(\"\");\n  const [verifyAll, setVerifyAll] = useState(false); // RegEx de vérification du mail\n\n  let mailRegEx = /^[a-z]+([\\.\\-_]?[a-z0-9]+)*@([a-z]{3,})+(\\.[a-z]{2,3})+$/; // RegEx de vérification du Téléphone\n\n  let phoneRegEx = /^(?:(?:\\+|00)33|0)\\s*[1-9](?:[\\s.-]*\\d{2}){4}$/; //Fonctions de vérifications du formulaire\n\n  const verifyFirstName = () => {\n    console.log(\"firstName\", firstName);\n\n    if (firstName === null) {\n      setFirstNameError(true);\n      setFirstNameErrorText(\"Veuillez saisir un prénom\");\n    } else {\n      setFirstNameError(false);\n      setFirstNameErrorText(\"\");\n    }\n  };\n\n  const verifyLastName = () => {\n    if (!lastName) {\n      setLastNameError(true);\n      setLastNameErrorText(\"Veuillez saisir un nom\");\n    } else {\n      setLastNameError(false);\n      setLastNameErrorText(\"\");\n    }\n  };\n\n  const verifyMail = () => {\n    if (!email) {\n      setEmailError(true);\n      setEmailErrorText(\"Adresse email non renseignée\");\n    } else {\n      if (!email.match(mailRegEx)) {\n        setEmailError(true);\n        setEmailErrorText(\"Adresse email non valide\");\n      } else {\n        setEmailError(false);\n        setEmailErrorText(\"\");\n      }\n    }\n  };\n\n  const verifyPhone = async () => {\n    if (!phone) {\n      setPhoneError(true);\n      setPhoneErrorText(\"N° de téléphone non renseigné\");\n    } else {\n      if (!phone.match(phoneRegEx)) {\n        setPhoneError(true);\n        setPhoneErrorText(\"N° de téléphone incorrect\");\n      } else {\n        setPhoneError(false);\n        setPhoneErrorText(\"\");\n      }\n    }\n  };\n\n  const globalVerify = () => {\n    /*//if(firstNameError || lastNameError || emailError || phoneError){\n        //if(!firstNameError && !lastNameError && !emailError && !phoneError){    \n            setVerifyAll(true)    \n        console.log(verifyAll)\n            \n        }\n        else {\n            setVerifyAll(false)\n            console.log(verifyAll)\n        }*/\n    console.log(\"firstName\", firstName);\n\n    if (firstName == null) {\n      setFirstNameError(true);\n      setFirstNameErrorText(\"Veuillez saisir un prénom\");\n    } else {\n      setFirstNameError(false);\n      setFirstNameErrorText(\"\");\n    }\n\n    console.log(\"firstNameError\", firstNameError);\n\n    if (!lastName) {\n      setLastNameError(true);\n      setLastNameErrorText(\"Veuillez saisir un nom\");\n    } else {\n      setLastNameError(false);\n      setLastNameErrorText(\"\");\n    }\n\n    if (!email) {\n      setEmailError(true);\n      setEmailErrorText(\"Adresse email non renseignée\");\n    } else {\n      if (!email.match(mailRegEx)) {\n        setEmailError(true);\n        setEmailErrorText(\"Adresse email non valide\");\n      } else {\n        setEmailError(false);\n        setEmailErrorText(\"\");\n      }\n    }\n\n    if (!phone) {\n      setPhoneError(true);\n      setPhoneErrorText(\"N° de téléphone non renseigné\");\n    } else {\n      if (!phone.match(phoneRegEx)) {\n        setPhoneError(true);\n        setPhoneErrorText(\"N° de téléphone incorrect\");\n      } else {\n        setPhoneError(false);\n        setPhoneErrorText(\"\");\n      }\n    }\n\n    if (firstNameError || lastNameError || emailError || phoneError) {\n      console.log(\"erreur\");\n    } else {\n      console.log(\"ok\");\n    }\n  };\n\n  const onSubmit = () => {\n    /*verifyFirstName()\n    verifyLastName()\n    verifyMail()\n    verifyPhone()*/\n    //globalVerify()\n    let datas = {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: password,\n      phone: phone,\n      address: address,\n      zip: zip,\n      city: city\n    };\n    saveUser(datas).then(response => {\n      console.log(response);\n    });\n  }; //Fonction de création du masque pour le numéro de téléphone\n\n\n  function PhoneNumberMask(props) {\n    const {\n      inputRef,\n      ...other\n    } = props;\n    return /*#__PURE__*/_jsxDEV(MaskedInput, { ...other,\n      value: phone,\n      mask: [/[0-9]/, /\\d/, \".\", /\\d/, /\\d/, \".\", /\\d/, /\\d/, \".\", /\\d/, /\\d/, \".\", /\\d/, /\\d/],\n      placeholderChar: '\\u2000'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: props.opened,\n    onClose: e => {\n      props.closeRegisterForm();\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"S'enregistrer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"register-form\",\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          error: true,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Nom\",\n            color: \"primary\",\n            className: \"register-form-input\",\n            required: true,\n            onChange: e => {\n              setLastName(e.target.value);\n            },\n            error: lastNameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: lastNameErrorText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          error: true,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Pr\\xE9nom\",\n            color: \"primary\",\n            className: \"register-form-input\",\n            required: true,\n            onChange: e => {\n              setFirstName(e.target.value);\n              console.log(firstName.length);\n            },\n            error: firstNameError,\n            value: firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: firstNameErrorText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          error: true,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Email\",\n            color: \"primary\",\n            className: \"register-form-input\",\n            required: true,\n            onChange: e => {\n              setEmail(e.target.value);\n            },\n            error: emailError,\n            type: \"email\",\n            value: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: emailErrorText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          error: true,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"T\\xE9l\\xE9phone\",\n            color: \"primary\",\n            className: \"register-form-input\",\n            required: true,\n            error: phoneError,\n            type: \"tel\",\n            onChange: e => {\n              setPhone(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: phoneErrorText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          error: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Adresse\",\n            color: \"primary\",\n            className: \"register-form-input\",\n            onChange: e => {\n              setAddress(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          error: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Code Postal\",\n            color: \"primary\",\n            className: \"register-form-input\",\n            onChange: e => {\n              setZip(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          error: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Ville\",\n            color: \"primary\",\n            className: \"register-form-input\",\n            onChange: e => {\n              setCity(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: e => {\n          props.closeRegisterForm();\n        },\n        color: \"primary\",\n        children: \"Annuler\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: e => {\n          onSubmit();\n        },\n        color: \"primary\",\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterPopUp, \"yAR1QsLBHR7WRQszbXtziu4GL3U=\");\n\n_c = RegisterPopUp;\nexport default RegisterPopUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPopUp\");","map":{"version":3,"sources":["/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/src/components/registerPopUp.js"],"names":["React","useState","useEffect","saveUser","MaskedInput","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","TextField","withStyles","makeStyles","FormHelperText","FormControl","RegisterPopUp","props","firstName","setFirstName","firstNameError","setFirstNameError","firstNameErrorText","setFirstNameErrorText","lastName","setLastName","lastNameError","setLastNameError","lastNameErrorText","setLastNameErrorText","email","setEmail","emailError","setEmailError","emailErrorText","setEmailErrorText","password","setPassword","passwordError","setPasswordError","passwordErrorText","setPasswordErrorText","phone","setPhone","phoneError","setPhoneError","phoneErrorText","setPhoneErrorText","autoFocusPhone","setAutoFocusPhone","address","setAddress","zip","setZip","city","setCity","redirect","setRedirect","verifyAll","setVerifyAll","mailRegEx","phoneRegEx","verifyFirstName","console","log","verifyLastName","verifyMail","match","verifyPhone","globalVerify","onSubmit","datas","then","response","PhoneNumberMask","inputRef","other","opened","e","closeRegisterForm","target","value","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {saveUser} from \"../api/user\"\n\nimport MaskedInput from 'react-text-mask';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles, makeStyles } from \"@material-ui/styles\";\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst RegisterPopUp = (props) => {\n\n    //Définition des variables\n    const [firstName, setFirstName] = useState(\"\")\n    const [firstNameError, setFirstNameError] = useState(false)\n    const [firstNameErrorText, setFirstNameErrorText] = useState(\"\")\n\n    const [lastName, setLastName] = useState(\"\")\n    const [lastNameError, setLastNameError] = useState(false)\n    const [lastNameErrorText, setLastNameErrorText] = useState(\"\")\n\n    const [email, setEmail] = useState(\"\")\n    const [emailError, setEmailError] = useState(\"\")\n    const [emailErrorText, setEmailErrorText] = useState(\"\")\n\n    const [password, setPassword] = useState(\"\")\n    const [passwordError, setPasswordError] = useState(false)\n    const [passwordErrorText, setPasswordErrorText] = useState(\"\")\n\n    const [phone, setPhone] = useState(\"\")\n    const [phoneError, setPhoneError] = useState(false)\n    const [phoneErrorText, setPhoneErrorText] = useState(\"\")\n    const [autoFocusPhone, setAutoFocusPhone] = useState(true)\n\n    const [address, setAddress] = useState(\"\")\n    const [zip, setZip] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n    const [redirect, setRedirect] = useState(\"\")\n    const [verifyAll, setVerifyAll] = useState(false)\n    \n\n    // RegEx de vérification du mail\n    let mailRegEx = /^[a-z]+([\\.\\-_]?[a-z0-9]+)*@([a-z]{3,})+(\\.[a-z]{2,3})+$/\n\n    // RegEx de vérification du Téléphone\n    let phoneRegEx = /^(?:(?:\\+|00)33|0)\\s*[1-9](?:[\\s.-]*\\d{2}){4}$/\n\n    //Fonctions de vérifications du formulaire\n    const verifyFirstName = () => {\n        console.log(\"firstName\", firstName)\n        if(firstName === null){\n            setFirstNameError(true)\n            setFirstNameErrorText(\"Veuillez saisir un prénom\")\n            \n        }\n        else {\n            setFirstNameError(false)\n            setFirstNameErrorText(\"\")\n        }\n    }\n\n    const verifyLastName = () => {\n        if(!lastName){\n            setLastNameError(true)\n            setLastNameErrorText(\"Veuillez saisir un nom\")\n        }\n        else {\n            setLastNameError(false)\n            setLastNameErrorText(\"\")\n        }\n    }\n\n    const verifyMail = () => {\n        if(!email){\n            setEmailError(true)\n            setEmailErrorText(\"Adresse email non renseignée\")\n        }\n        else {\n            if(!email.match(mailRegEx)){\n                setEmailError(true)\n                setEmailErrorText(\"Adresse email non valide\")\n            }\n            else {\n                setEmailError(false)\n                setEmailErrorText(\"\")\n            }\n        }\n        \n    } \n\n    const verifyPhone = async () => {\n        if(!phone){\n            setPhoneError(true)\n            setPhoneErrorText(\"N° de téléphone non renseigné\")\n        }\n        else{\n            if(!phone.match(phoneRegEx)){\n                setPhoneError(true)\n                setPhoneErrorText(\"N° de téléphone incorrect\")\n            }\n            else {\n                setPhoneError(false)\n                setPhoneErrorText(\"\")\n            }\n        }\n    }\n\n    const globalVerify = () => {\n        /*//if(firstNameError || lastNameError || emailError || phoneError){\n            //if(!firstNameError && !lastNameError && !emailError && !phoneError){    \n                setVerifyAll(true)    \n            console.log(verifyAll)\n                \n            }\n            else {\n                setVerifyAll(false)\n                console.log(verifyAll)\n            }*/\n            console.log(\"firstName\", firstName)\n            if(firstName == null){\n                setFirstNameError(true)\n                setFirstNameErrorText(\"Veuillez saisir un prénom\")\n            }\n            else {\n                setFirstNameError(false)\n                setFirstNameErrorText(\"\")\n            }\n\n            console.log(\"firstNameError\", firstNameError)\n\n            if(!lastName){\n                setLastNameError(true)\n                setLastNameErrorText(\"Veuillez saisir un nom\")\n            }\n            else {\n                setLastNameError(false)\n                setLastNameErrorText(\"\")\n            }\n            if(!email){\n                setEmailError(true)\n                setEmailErrorText(\"Adresse email non renseignée\")\n            }\n            else {\n                if(!email.match(mailRegEx)){\n                    setEmailError(true)\n                    setEmailErrorText(\"Adresse email non valide\")\n                }\n                else {\n                    setEmailError(false)\n                    setEmailErrorText(\"\")\n                }\n            }\n            if(!phone){\n                setPhoneError(true)\n                setPhoneErrorText(\"N° de téléphone non renseigné\")\n            }\n            else{\n                if(!phone.match(phoneRegEx)){\n                    setPhoneError(true)\n                    setPhoneErrorText(\"N° de téléphone incorrect\")\n                }\n                else {\n                    setPhoneError(false)\n                    setPhoneErrorText(\"\")\n                }\n            }\n            if(firstNameError || lastNameError || emailError || phoneError){\n                console.log(\"erreur\")\n            }\n            else {\n                console.log(\"ok\")\n            }\n    }\n\n    const onSubmit = () =>{\n        /*verifyFirstName()\n        verifyLastName()\n        verifyMail()\n        verifyPhone()*/\n        //globalVerify()\n        \n        let datas = {\n            firstName: firstName,\n            lastName: lastName,\n            email: email,\n            password: password,\n            phone: phone,\n            address: address,\n            zip: zip,\n            city: city\n        }    \n\n        saveUser(datas)\n        .then(response => {\n            console.log(response)\n        })\n    }\n\n    //Fonction de création du masque pour le numéro de téléphone\n    function PhoneNumberMask(props) {\n        const { inputRef, ...other } = props;\n      \n        return (\n          <MaskedInput\n            {...other}\n            value={phone}\n            mask={[/[0-9]/, /\\d/,\".\", /\\d/, /\\d/,\".\", /\\d/, /\\d/,\".\",/\\d/, /\\d/,\".\",/\\d/, /\\d/]}\n            placeholderChar={'\\u2000'}\n            \n          />\n        );\n      }\n\n\n    return(\n        <Dialog\n            open={props.opened}\n            onClose={(e) => {props.closeRegisterForm()}}\n        >\n            <DialogTitle>S'enregistrer</DialogTitle>\n            <DialogContent>\n            <form className=\"register-form\" autoComplete=\"off\">\n                <FormControl error>\n                    <TextField label=\"Nom\" color=\"primary\" className=\"register-form-input\" required onChange={(e) => {setLastName(e.target.value)}} error={lastNameError} />\n                    <FormHelperText>{lastNameErrorText}</FormHelperText>\n                </FormControl>\n\n                <FormControl error>\n                    <TextField label=\"Prénom\" color=\"primary\" className=\"register-form-input\" required onChange={(e) => {setFirstName(e.target.value)\n                    console.log(firstName.length)}} error={firstNameError} value={firstName}/>\n                    <FormHelperText>{firstNameErrorText}</FormHelperText>\n                </FormControl>\n\n                <FormControl error>\n                    <TextField label=\"Email\" color=\"primary\" className=\"register-form-input\" required onChange={(e) => {setEmail(e.target.value)}} error={emailError} type=\"email\" value={email}/>\n                    <FormHelperText>{emailErrorText}</FormHelperText>\n                </FormControl>\n\n                <FormControl error>\n                    {/*<TextField label=\"Téléphone\" color=\"primary\" className=\"register-form-input\" required onChange={(e) => {setPhone(e.target.value)}} error={phoneError} type=\"tel\"/>\n                    <TextField InputProps={{ inputComponent: PhoneNumberMask }} label=\"Téléphone\" color=\"primary\" className=\"register-form-input\" required  error={phoneError} type=\"tel\"  onChange={setPhoneNumber} autoFocus={autoFocusPhone}/>*/}\n\n                    <TextField label=\"Téléphone\" color=\"primary\" className=\"register-form-input\" required  error={phoneError} type=\"tel\"  onChange={(e) => {setPhone(e.target.value)}} />\n                    \n                    <FormHelperText>{phoneErrorText}</FormHelperText>\n                </FormControl>\n\n                <FormControl error>\n                    <TextField label=\"Adresse\" color=\"primary\" className=\"register-form-input\" onChange={(e) => {setAddress(e.target.value)}} />\n                </FormControl>\n\n                <FormControl error>\n                    <TextField label=\"Code Postal\" color=\"primary\" className=\"register-form-input\" onChange={(e) => {setZip(e.target.value)}} />\n                </FormControl>\n\n                <FormControl error>\n                    <TextField label=\"Ville\" color=\"primary\" className=\"register-form-input\" onChange={(e) => {setCity(e.target.value)}} />\n                </FormControl>\n            </form>\n            </DialogContent>\n            <DialogActions>\n            <Button onClick={(e) => {props.closeRegisterForm()}} color=\"primary\">\n                Annuler\n            </Button>\n            <Button onClick={(e) => {onSubmit()}} color=\"primary\">\n                Envoyer\n            </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default RegisterPopUp"]},"metadata":{},"sourceType":"module"}