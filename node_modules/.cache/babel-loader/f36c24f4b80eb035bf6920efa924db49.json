{"ast":null,"code":"import axios from \"axios\";\nimport { config } from \"../config\";\nimport tokenConfig from \"../tokenConfig\";\nconst token = localStorage.getItem(tokenConfig.token.name);\nexport const getFishesCount = () => {\n  return axios.get(config.api_url + \"/product/allfishes/count\").then(response => {\n    return response.data.result[0].fishes_count;\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const getCrustaceansCount = () => {\n  return axios.get(config.api_url + \"/product/allcrustaceans/count\").then(response => {\n    return response.data.result[0].crustaceans_count;\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const getAllProducts = () => {\n  return axios.get(config.api_url + \"/product/all\").then(response => {\n    return response.data.result;\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const saveProduct = datas => {\n  return axios.post(config.api_url + \"/product/save\", datas, {\n    headers: {\n      \"x-access-token\": token\n    }\n  }).then(response => {\n    return response;\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const saveProductPict = (fileDatas, datas) => {\n  let formData = new FormData();\n  formData.append('image', fileDatas);\n  return axios({\n    method: \"post\",\n    url: config.api_url + \"/product/pict\",\n    data: formData,\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      \"x-access-token\": token\n    }\n  }).then(response => {\n    return response;\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const getAllProductCat = () => {\n  return axios.get(config.api_url + \"/product/categories/all\", {\n    headers: {\n      \"x-access-token\": token\n    }\n  }).then(response => {\n    return response.data.result;\n  }).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"sources":["/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/src/api/products.js"],"names":["axios","config","tokenConfig","token","localStorage","getItem","name","getFishesCount","get","api_url","then","response","data","result","fishes_count","catch","err","console","log","getCrustaceansCount","crustaceans_count","getAllProducts","saveProduct","datas","post","headers","saveProductPict","fileDatas","formData","FormData","append","method","url","getAllProductCat"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport {config} from \"../config\"\nimport tokenConfig from \"../tokenConfig\"\nconst token = localStorage.getItem(tokenConfig.token.name)\n\n\nexport const getFishesCount = () => {\n    \n    return axios.get(config.api_url+\"/product/allfishes/count\")\n    .then(response => {\n        return response.data.result[0].fishes_count;\n    })\n    .catch(err => { console.log(err)})\n}\n\nexport const getCrustaceansCount = () => {\n    return axios.get(config.api_url+\"/product/allcrustaceans/count\")\n    .then(response => {\n        return response.data.result[0].crustaceans_count\n    })\n    .catch(err => { console.log(err)})\n}\n\nexport const getAllProducts = () => {\n    return axios.get(config.api_url+\"/product/all\")\n    .then(response => {\n        return response.data.result\n    })\n    .catch(err => { console.log(err)})\n}\n\nexport const saveProduct = (datas) => {\n    return axios.post(config.api_url + \"/product/save\", datas, {headers: {\"x-access-token\": token}})\n    .then(response => {\n        return response\n    })\n    .catch(err => {console.log(err)})\n}\n\nexport const saveProductPict = (fileDatas, datas) => {\n    let formData = new FormData()\n    formData.append('image', fileDatas)\n\n    return axios({method: \"post\",\n                  url: config.api_url + \"/product/pict\",\n                  data: formData,\n                  headers: {\n                      \"Content-Type\":\"multipart/form-data\",\n                      \"x-access-token\":token\n                  }})\n                .then(response => {return response})\n                .catch(err => {console.log(err)})\n}\n\nexport const getAllProductCat = () => {\n    return axios.get(config.api_url + \"/product/categories/all\", {headers: {\"x-access-token\":token}})\n    .then(response => {\n        return response.data.result\n    })\n    .catch(err => {console.log(err)})\n}"]},"metadata":{},"sourceType":"module"}