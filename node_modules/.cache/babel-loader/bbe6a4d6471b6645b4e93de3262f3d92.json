{"ast":null,"code":"var _jsxFileName = \"/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/src/containers/admin/adminUserEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { getOneUser, updateUser, updatePassword, updateUserRole, getAllRoles } from \"../../api/user\";\nimport Header from \"../headers/header\";\nimport HeaderPages from \"../headers/headerPages\";\nimport Footer from \"../footer\";\nimport AdminMenu from \"../../components/adminMenu\";\nimport contactIcon from \"../../assets/icons/email-blue.svg\";\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport { makeStyles } from \"@material-ui/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminUserEdit = props => {\n  _s();\n\n  const [headerTitle, setHeaderTitle] = useState(\"Administration\");\n  const [headerBreadcrumbs, setHeaderBreadcrumbs] = useState([{\n    value: \"Accueil\",\n    link: \"/\"\n  }, {\n    value: \"Administration\",\n    link: \"/admin\"\n  }, {\n    value: \"Utilisateurs\",\n    link: \"/admin/users\"\n  }, {\n    value: \"Edition\",\n    link: null\n  }]);\n  const [firstName, setFirstName] = useState(\"\");\n  const [firstNameError, setFirstNameError] = useState(false);\n  const [firstNameErrorText, setFirstNameErrorText] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [lastNameError, setLastNameError] = useState(false);\n  const [lastNameErrorText, setLastNameErrorText] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(false);\n  const [emailErrorText, setEmailErrorText] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordUpdated, setPasswordUpdated] = useState(false);\n  const [phone, setPhone] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(false);\n  const [phoneErrorText, setPhoneErrorText] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [idSelectedRole, setIdSelectedRole] = useState(\"\");\n  const [selectedRole, setSelectedRole] = useState(\"\");\n  const [roles, setRoles] = useState([]);\n  const [newRole, setNewRole] = useState(0); // RegEx de vérification du mail\n\n  let emailRegEx = /^[a-z]+([\\.\\-_]?[a-z0-9]+)*@([a-z]{3,})+(\\.[a-z]{2,3})+$/; // RegEx de vérification du Téléphone\n\n  let phoneRegEx = /^(?:(?:\\+|00)33|0)\\s*[1-9](?:[\\s.-]*\\d{2}){4}$/; //Définition du style MaterialUI\n\n  const useStyles = makeStyles(theme => ({\n    margin: {\n      margin: theme.spacing(1),\n      width: \"90%\"\n    }\n  }));\n  const classes = useStyles();\n  useEffect(() => {\n    getOneUser(props.match.params.id).then(user => {\n      setFirstName(user.first_name);\n      setLastName(user.last_name);\n      setEmail(user.email);\n      setPhone(user.phone);\n      setAddress(user.address);\n      setZip(user.zip);\n      setCity(user.city);\n      setIdSelectedRole(user.id_role);\n      setSelectedRole(user.role);\n      setNewRole(user.id_role);\n    });\n    getAllRoles().then(rolesDB => {\n      setRoles(rolesDB.data.result);\n    });\n  }, []);\n\n  const globalVerify = () => {\n    if (!firstName) {\n      setFirstNameError(true);\n      setFirstNameErrorText(\"Prénom non renseigné\");\n    } else {\n      setFirstNameError(false);\n      setFirstNameErrorText(\"\");\n    }\n\n    if (!lastName) {\n      setLastNameError(true);\n      setLastNameErrorText(\"Nom non renseigné\");\n    } else {\n      setLastNameError(false);\n      setLastNameErrorText(\"\");\n    }\n\n    if (!email) {\n      setEmailError(true);\n      setEmailErrorText(\"Adresse email non renseignée\");\n    } else {\n      if (!email.match(emailRegEx)) {\n        setEmailError(true);\n        setEmailErrorText(\"Adresse email non valide\");\n      } else {\n        setEmailError(false);\n        setEmailErrorText(\"\");\n      }\n    }\n\n    if (password !== \"\") {\n      setPasswordUpdated(true);\n    } else {\n      setPasswordUpdated(false);\n    }\n\n    if (!phone) {\n      setPhoneError(true);\n      setPhoneErrorText(\"N° de téléphone non renseigné\");\n    } else {\n      if (!phone.match(phoneRegEx)) {\n        setPhoneError(true);\n        setPhoneErrorText(\"N° de téléphone incorrect\");\n      } else {\n        setPhoneError(false);\n        setPhoneErrorText(\"\");\n      }\n    } //Si tous les champs sont bons, on enregistre l'utilisateur\n\n\n    if (firstName && lastName && email && phone && phone.match(phoneRegEx) && email.match(emailRegEx)) {\n      let datas = {\n        first_name: firstName,\n        last_name: lastName,\n        email: email,\n        phone: phone,\n        address: address,\n        zip: zip,\n        city: city\n      };\n      updateUser(datas, props.match.params.id).then(responseUpdateUser => {\n        if (responseUpdateUser.data.status === 200) {\n          console.log(\"Succès de la mise à jour utilisateur\");\n\n          if (passwordUpdated) {\n            let datasPassword = {\n              password: password\n            };\n            updatePassword(datasPassword, props.match.params.id).then(responsePassword => {\n              if (responsePassword.data.status === 200) {\n                console.log(\"Succès de la mise à jour du mot de passe\");\n              } else {\n                console.log(\"Erreur lors de la mise à jour du mot de passe\");\n              }\n            });\n          }\n\n          if (parseInt(newRole) !== idSelectedRole) {\n            let datas = {\n              id_role: newRole\n            };\n            updateUserRole(datas, props.match.params.id).then(responseRole => {\n              if (responseRole.status === 200) {\n                console.log(\"Succès de la mise à jour du rôle\");\n              } else {\n                console.log(\"Erreur lors de la mise à jour du rôle\");\n              }\n            });\n          }\n        } else {\n          console.log(\"Erreur lors de la mise à jour de l'utilisateur\");\n        }\n      });\n    }\n  };\n\n  const onSubmit = () => {\n    globalVerify();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(HeaderPages, {\n      headerTitle: headerTitle,\n      headerBreadcrumbs: headerBreadcrumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"admin-container\",\n      children: [/*#__PURE__*/_jsxDEV(AdminMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"admin-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Edition d'un utilisateur\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"user-edit-container\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"admin-user-edit\",\n            autoComplete: \"off\",\n            children: [/*#__PURE__*/_jsxDEV(\"section\", {\n              className: \"user-edit-informations\",\n              children: [/*#__PURE__*/_jsxDEV(\"section\", {\n                className: \"user-edit-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: contactIcon,\n                  alt: \"Personnal information icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"admin-content-section-title\",\n                  children: \"Informations personnelles\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n                className: \"user-edit-informations-content\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  error: true,\n                  className: classes.margin,\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Nom\",\n                    color: \"primary\",\n                    required: true,\n                    onChange: e => {\n                      setLastName(e.target.value);\n                    },\n                    error: lastNameError,\n                    value: lastName || \"\",\n                    variant: \"filled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    children: lastNameErrorText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  error: true,\n                  className: classes.margin,\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Pr\\xE9nom\",\n                    color: \"primary\",\n                    required: true,\n                    onChange: e => {\n                      setFirstName(e.target.value);\n                    },\n                    error: firstNameError,\n                    value: firstName || \"\",\n                    variant: \"filled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    children: firstNameErrorText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  error: true,\n                  className: classes.margin,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Mot de passe\",\n                    color: \"primary\",\n                    onChange: e => {\n                      setPassword(e.target.value);\n                      e.target.value ? setPasswordUpdated(true) : setPasswordUpdated(false);\n                    },\n                    type: \"password\",\n                    defaultValue: \"\",\n                    variant: \"filled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  className: classes.margin,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    shrink: true,\n                    children: \"R\\xF4le\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(NativeSelect, {\n                    name: \"role\",\n                    className: \"\",\n                    textfieldprops: {\n                      label: \"Label\",\n                      InputLabelProps: {\n                        shrink: true\n                      }\n                    },\n                    onChange: e => {\n                      setNewRole(e.target.value);\n                    },\n                    children: roles.map(role => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: role.id,\n                        selected: idSelectedRole === role.id ? true : false,\n                        children: role.label\n                      }, role.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 253,\n                        columnNumber: 64\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n              className: \"user-edit-contact\",\n              children: [/*#__PURE__*/_jsxDEV(\"section\", {\n                className: \"user-edit-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: contactIcon,\n                  alt: \"Contact icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"admin-content-section-title\",\n                  children: \"Contact\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n                className: \"user-edit-contact-content\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  error: true,\n                  className: classes.margin,\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Email\",\n                    color: \"primary\",\n                    required: true,\n                    onChange: e => {\n                      setEmail(e.target.value);\n                    },\n                    error: emailError,\n                    type: \"email\",\n                    value: email || \"\",\n                    variant: \"filled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    children: emailErrorText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  error: true,\n                  className: classes.margin,\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"T\\xE9l\\xE9phone\",\n                    color: \"primary\",\n                    required: true,\n                    error: phoneError,\n                    type: \"tel\",\n                    value: phone || \"\",\n                    onChange: e => {\n                      setPhone(e.target.value);\n                    },\n                    variant: \"filled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    children: phoneErrorText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  error: true,\n                  className: classes.margin,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Adresse\",\n                    color: \"primary\",\n                    onChange: e => {\n                      setAddress(e.target.value);\n                    },\n                    value: address || \"\",\n                    variant: \"filled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  error: true,\n                  className: classes.margin,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Code Postal\",\n                    color: \"primary\",\n                    onChange: e => {\n                      setZip(e.target.value);\n                    },\n                    value: zip || \"\",\n                    variant: \"filled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  error: true,\n                  className: classes.margin,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Ville\",\n                    color: \"primary\",\n                    onChange: e => {\n                      setCity(e.target.value);\n                    },\n                    value: city || \"\",\n                    variant: \"filled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"admin-user-edit-button\",\n                color: \"primary\",\n                variant: \"contained\",\n                onClick: e => {\n                  onSubmit();\n                },\n                children: \"Envoyer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdminUserEdit, \"JhnO0s9Dv6CBObpjEAahpsNCnww=\", true);\n\n_c = AdminUserEdit;\nexport default AdminUserEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminUserEdit\");","map":{"version":3,"sources":["/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/src/containers/admin/adminUserEdit.js"],"names":["React","useState","useEffect","getOneUser","updateUser","updatePassword","updateUserRole","getAllRoles","Header","HeaderPages","Footer","AdminMenu","Button","TextField","FormHelperText","FormControl","InputLabel","NativeSelect","makeStyles","AdminUserEdit","props","headerTitle","setHeaderTitle","headerBreadcrumbs","setHeaderBreadcrumbs","value","link","firstName","setFirstName","firstNameError","setFirstNameError","firstNameErrorText","setFirstNameErrorText","lastName","setLastName","lastNameError","setLastNameError","lastNameErrorText","setLastNameErrorText","email","setEmail","emailError","setEmailError","emailErrorText","setEmailErrorText","password","setPassword","passwordUpdated","setPasswordUpdated","phone","setPhone","phoneError","setPhoneError","phoneErrorText","setPhoneErrorText","address","setAddress","zip","setZip","city","setCity","idSelectedRole","setIdSelectedRole","selectedRole","setSelectedRole","roles","setRoles","newRole","setNewRole","emailRegEx","phoneRegEx","useStyles","theme","margin","spacing","width","classes","match","params","id","then","user","first_name","last_name","id_role","role","rolesDB","data","result","globalVerify","datas","responseUpdateUser","status","console","log","datasPassword","responsePassword","parseInt","responseRole","onSubmit","contactIcon","e","target","label","InputLabelProps","shrink","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport {getOneUser, updateUser, updatePassword, updateUserRole, getAllRoles} from \"../../api/user\"\n\nimport Header from \"../headers/header\"\nimport HeaderPages from \"../headers/headerPages\"\nimport Footer from \"../footer\"\n\nimport AdminMenu from \"../../components/adminMenu\"\n\nimport contactIcon from \"../../assets/icons/email-blue.svg\"\n\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport {makeStyles } from \"@material-ui/styles\";\n\nconst AdminUserEdit = (props) => {\n    \n    const [headerTitle, setHeaderTitle] = useState(\"Administration\")\n    const [headerBreadcrumbs, setHeaderBreadcrumbs] = useState([{value: \"Accueil\", link:\"/\"},\n                                                                {value:\"Administration\", link:\"/admin\"},\n                                                                {value: \"Utilisateurs\", link:\"/admin/users\"},\n                                                                {value: \"Edition\", link:null}])\n\n    const [firstName, setFirstName] = useState(\"\")\n    const [firstNameError, setFirstNameError] = useState(false)\n    const [firstNameErrorText, setFirstNameErrorText] = useState(\"\")\n    \n\n    const [lastName, setLastName] = useState(\"\")\n    const [lastNameError, setLastNameError] = useState(false)\n    const [lastNameErrorText, setLastNameErrorText] = useState(\"\")\n\n    const [email, setEmail] = useState(\"\")\n    const [emailError, setEmailError] = useState(false)\n    const [emailErrorText, setEmailErrorText] = useState(\"\")\n\n    const [password, setPassword] = useState(\"\")\n    const [passwordUpdated, setPasswordUpdated] = useState(false)\n\n    const [phone, setPhone] = useState(\"\")\n    const [phoneError, setPhoneError] = useState(false)\n    const [phoneErrorText, setPhoneErrorText] = useState(\"\")\n\n    const [address, setAddress] = useState(\"\")\n    const [zip, setZip] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n\n    const [idSelectedRole, setIdSelectedRole] = useState(\"\")\n    const [selectedRole, setSelectedRole] = useState(\"\")\n\n    const [roles, setRoles] = useState([])\n    const [newRole, setNewRole] = useState(0)\n\n    // RegEx de vérification du mail\n    let emailRegEx = /^[a-z]+([\\.\\-_]?[a-z0-9]+)*@([a-z]{3,})+(\\.[a-z]{2,3})+$/\n\n    // RegEx de vérification du Téléphone\n    let phoneRegEx = /^(?:(?:\\+|00)33|0)\\s*[1-9](?:[\\s.-]*\\d{2}){4}$/\n    \n    //Définition du style MaterialUI\n    const useStyles = makeStyles((theme) => ({\n        margin: {\n            margin: theme.spacing(1),\n            width: \"90%\"\n        },\n    }));\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        getOneUser(props.match.params.id)\n        .then((user) => {\n            setFirstName(user.first_name)\n            setLastName(user.last_name)\n            setEmail(user.email)\n            setPhone(user.phone)\n            setAddress(user.address)\n            setZip(user.zip)\n            setCity(user.city)\n            setIdSelectedRole(user.id_role)\n            setSelectedRole(user.role)\n            setNewRole(user.id_role)\n        })\n        getAllRoles()\n        .then(rolesDB => {\n            setRoles(rolesDB.data.result)\n        })\n    }, [])\n\n    const globalVerify = () => {\n\n        if(!firstName){\n            setFirstNameError(true)\n            setFirstNameErrorText(\"Prénom non renseigné\")\n        }\n        else {\n            setFirstNameError(false)\n            setFirstNameErrorText(\"\")\n        }\n\n        if(!lastName){\n            setLastNameError(true)\n            setLastNameErrorText(\"Nom non renseigné\")\n        }\n        else {\n            setLastNameError(false)\n            setLastNameErrorText(\"\")\n        }\n        if(!email){\n            setEmailError(true)\n            setEmailErrorText(\"Adresse email non renseignée\")\n        }\n        else {\n            if(!email.match(emailRegEx)){\n                setEmailError(true)\n                setEmailErrorText(\"Adresse email non valide\")\n            }\n            else {\n                setEmailError(false)\n                setEmailErrorText(\"\")\n            }\n        }\n        if(password !== \"\"){\n            setPasswordUpdated(true)\n        }\n        else {\n            setPasswordUpdated(false)\n        }\n        if(!phone){\n            setPhoneError(true)\n            setPhoneErrorText(\"N° de téléphone non renseigné\")\n        }\n        else{\n            if(!phone.match(phoneRegEx)){\n                setPhoneError(true)\n                setPhoneErrorText(\"N° de téléphone incorrect\")\n            }\n            else {\n                setPhoneError(false)\n                setPhoneErrorText(\"\")\n            }\n        }\n\n        //Si tous les champs sont bons, on enregistre l'utilisateur\n        if(firstName && lastName && email && phone && phone.match(phoneRegEx) && email.match(emailRegEx)){\n            \n            let datas = {\n                first_name: firstName,\n                last_name: lastName,\n                email: email,\n                phone: phone,\n                address: address,\n                zip: zip,\n                city: city\n            }    \n\n            updateUser(datas, props.match.params.id)\n            .then(responseUpdateUser => {\n                if(responseUpdateUser.data.status === 200){\n                    console.log(\"Succès de la mise à jour utilisateur\")\n                    if(passwordUpdated){\n                        let datasPassword = {\n                            password: password\n                        }\n                        updatePassword(datasPassword, props.match.params.id)\n                        .then(responsePassword => { \n                            if(responsePassword.data.status === 200){\n                                console.log(\"Succès de la mise à jour du mot de passe\")\n                            }\n                            else {\n                                console.log(\"Erreur lors de la mise à jour du mot de passe\")\n                            }\n                        })\n                    }\n                    if(parseInt(newRole) !== idSelectedRole){\n                        let datas = {\n                            id_role: newRole\n                        }\n                        updateUserRole(datas, props.match.params.id)\n                        .then(responseRole => {\n                            if(responseRole.status === 200){\n                                console.log(\"Succès de la mise à jour du rôle\")\n                            } else {\n                                console.log(\"Erreur lors de la mise à jour du rôle\")\n                            }\n                        })\n                    }\n\n                    \n                }\n                else {\n                    console.log(\"Erreur lors de la mise à jour de l'utilisateur\")\n                }\n            })\n            \n        }\n        \n    }\n\n    const onSubmit = () => {\n        globalVerify()\n    }\n\n    return(\n        <section className=\"root\">\n                <Header />\n                <HeaderPages headerTitle={headerTitle} headerBreadcrumbs={headerBreadcrumbs}/>\n                <section className=\"admin-container\">\n                    <AdminMenu />\n\n                    <section className=\"admin-content\">\n                        <h4>Edition d'un utilisateur</h4>\n                        <section className=\"user-edit-container\">\n                            <form className=\"admin-user-edit\" autoComplete=\"off\">\n                                <section className=\"user-edit-informations\">\n                                    <section className=\"user-edit-header\">\n                                        <img src={contactIcon} alt=\"Personnal information icon\" />\n                                        <p className=\"admin-content-section-title\">Informations personnelles</p>\n                                    </section>\n                                    <section className=\"user-edit-informations-content\">\n                                        <FormControl error className={classes.margin}>\n                                            <TextField label=\"Nom\" color=\"primary\" required onChange={(e) => {setLastName(e.target.value)}} error={lastNameError} value={lastName || \"\"} variant=\"filled\"/>\n                                            <FormHelperText>{lastNameErrorText}</FormHelperText>\n                                        </FormControl>\n\n                                        <FormControl error className={classes.margin}>\n                                            <TextField label=\"Prénom\" color=\"primary\"  required onChange={(e) => {setFirstName(e.target.value)}} error={firstNameError} value={firstName || \"\"} variant=\"filled\"/>\n                                            <FormHelperText>{firstNameErrorText}</FormHelperText>\n                                        </FormControl>\n\n                                        <FormControl error className={classes.margin}>\n                                            <TextField label=\"Mot de passe\" color=\"primary\" onChange={(e) => {setPassword(e.target.value)\n                                            e.target.value ? setPasswordUpdated(true) : setPasswordUpdated(false)}} type=\"password\" defaultValue=\"\" variant=\"filled\"/>\n                                        </FormControl>\n\n                                        <FormControl className={classes.margin}>\n                                            <InputLabel shrink={true}>Rôle</InputLabel>\n                                            <NativeSelect\n                                            name=\"role\"\n                                            className=\"\"\n                                            textfieldprops={{\n                                                label: \"Label\",\n                                                InputLabelProps: {shrink:true}\n                                            }}\n                                            onChange={(e) => {\n                                                setNewRole(e.target.value)\n                                            }}>\n                                                {roles.map((role) => {\n                                                        return(<option value={role.id} key={role.id} selected={idSelectedRole === role.id ? true : false}>{role.label}</option>)\n                                                })}\n                                            </NativeSelect>\n                                        </FormControl>\n                                    </section>\n                                </section>\n                                <section className=\"user-edit-contact\">\n                                        <section className=\"user-edit-header\">\n                                            <img src={contactIcon} alt=\"Contact icon\" />\n                                            <p className=\"admin-content-section-title\">Contact</p>\n                                        </section>\n                                        <section className=\"user-edit-contact-content\">\n                                            \n                                                <FormControl error className={classes.margin} >\n                                                    <TextField label=\"Email\" color=\"primary\" required onChange={(e) => {setEmail(e.target.value)}} error={emailError} type=\"email\" value={email || \"\"} variant=\"filled\"/>\n                                                    <FormHelperText>{emailErrorText}</FormHelperText>\n                                                </FormControl>\n\n                                                <FormControl error className={classes.margin}>\n                                                    <TextField label=\"Téléphone\" color=\"primary\" required  error={phoneError} type=\"tel\" value={phone || \"\"\n                                                    } onChange={(e) => {setPhone(e.target.value)}} variant=\"filled\"/>\n                                                    <FormHelperText>{phoneErrorText}</FormHelperText>\n                                                </FormControl>\n\n                                                <FormControl error className={classes.margin}>\n                                                    <TextField label=\"Adresse\" color=\"primary\" onChange={(e) => {setAddress(e.target.value)}} value={address || \"\"} variant=\"filled\"/>\n                                                </FormControl>\n\n                                                <FormControl error className={classes.margin}>\n                                                    <TextField label=\"Code Postal\" color=\"primary\" onChange={(e) => {setZip(e.target.value)}} value={zip || \"\"} variant=\"filled\"/>\n                                                </FormControl>\n\n                                                <FormControl error className={classes.margin}>\n                                                    <TextField label=\"Ville\" color=\"primary\" onChange={(e) => {setCity(e.target.value)}} value={city || \"\"} variant=\"filled\"/>\n                                                </FormControl>\n\n                                                \n                                        </section>\n                                        <Button className=\"admin-user-edit-button\" color=\"primary\" variant=\"contained\" onClick={(e)=>{onSubmit()}}>\n                                                    Envoyer\n                                                </Button>\n                                </section>                          \n                            </form>\n                        </section>\n\n                    </section>\n                </section>\n                <Footer />\n        </section>\n    )\n}\n\nexport default AdminUserEdit"]},"metadata":{},"sourceType":"module"}