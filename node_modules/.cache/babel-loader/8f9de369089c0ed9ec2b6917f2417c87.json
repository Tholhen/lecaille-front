{"ast":null,"code":"var _jsxFileName = \"/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/src/containers/admin/adminDailyStand.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; //Imports des composants de l'UI externes\n\nimport Header from \"../headers/header\";\nimport HeaderPages from \"../headers/headerPages\";\nimport Footer from \"../footer\";\nimport AdminMenu from \"../../components/adminMenu\";\nimport { getDailyStand, getDailyStandDetails, saveDailyStand, saveDailyStandDetail, saveDailyStandDetailPict, deleteDailyStand, updateDailyStand, deleteDailyStandDetails } from \"../../api/dailyStand\"; //Imports de la librairie MaterialUI\n\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminDailyStand = props => {\n  _s();\n\n  const headerTitle = \"Administration\";\n  const headerBreadcrumbs = [{\n    value: \"Accueil\",\n    link: \"/\"\n  }, {\n    value: \"Administration\",\n    link: \"/admin\"\n  }, {\n    value: \"Etal\",\n    link: null\n  }];\n  const [dailyStand, setDailyStand] = useState({\n    id: \"\",\n    description: \"\",\n    creation_timestamp: \"\"\n  });\n  const [contentAdded, setContentAdded] = useState([]);\n  const [dailyStandItems, setDailyStandItems] = useState([]); //Ajout des champs permettant de compléter l'étal du jour\n\n  const addElement = () => {\n    setDailyStandItems(dailyStandItems => [...dailyStandItems, {\n      pict_url: \"\",\n      description: \"\",\n      filePreview: \"\",\n      selectedFile: \"\"\n    }]);\n  }; //Au chargement de la page\n\n\n  useEffect(() => {\n    getDailyStand().then(response => {\n      if (response) {\n        setDailyStand(response);\n      }\n    });\n  }, []); //A chaque modification de dailyStandItems\n\n  useEffect(() => {\n    if (dailyStandItems.length > 0) {\n      let index = contentAdded.length;\n      setContentAdded(contentAdded => [...contentAdded, /*#__PURE__*/_jsxDEV(\"article\", {\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              accept: \"images/*\",\n              style: {\n                display: 'none'\n              },\n              id: \"file-select\" + index,\n              type: \"file\",\n              onChange: e => {\n                changePicture(index, e.target.files[0]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"file-select\" + index,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                component: \"span\",\n                children: \"Ajouter une photo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), dailyStandItems[index].selectedFile && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: dailyStandItems[index].selectedFile.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 65\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Description\",\n              variant: \"filled\",\n              onChange: e => {\n                changeDescription(contentAdded.length, e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]);\n    }\n  }, [dailyStandItems]);\n\n  const changeDescription = (index, value) => {\n    dailyStandItems[index].description = value;\n  };\n\n  const changePicture = (index, file) => {\n    dailyStandItems[index].filePreview = URL.createObjectURL(file);\n    dailyStandItems[index].selectedFile = file;\n  }; //Initialisation d'un nouveau étal\n\n\n  const newDailyStand = () => {\n    deleteDailyStand();\n    deleteDailyStandDetails();\n    setDailyStand({\n      id: \"\",\n      description: \"\",\n      creation_timestamp: \"\"\n    });\n  }; //Fonction d'enregistrement de l'étal\n\n\n  const handleSave = () => {\n    //Vérification des données avant enregistrement\n    if (!dailyStand.description) {\n      for (let i = 0; i < dailyStandItems.length; i++) {}\n    }\n\n    let dailyStandDatas = {\n      description: dailyStand.description\n    };\n\n    if (dailyStand.id === \"\") {\n      saveDailyStand(dailyStandDatas).then(responseDailyStand => {\n        setDailyStand({ ...dailyStand,\n          [\"id\"]: responseDailyStand.data.result.insertId\n        });\n\n        for (let i = 0; i < dailyStandItems.length; i++) {\n          saveDailyStandDetailPict(dailyStandItems[i].selectedFile).then(responseDailyStandDetailPict => {\n            let dailyStandDetailDatas = {\n              description: dailyStandItems[i].description,\n              pict_url: responseDailyStandDetailPict.data.url || \"\",\n              id_daily_stand: responseDailyStand.data.result.insertId\n            };\n            saveDailyStandDetail(dailyStandDetailDatas);\n          });\n        }\n      });\n    } else {\n      updateDailyStand(dailyStandDatas).then(response => {\n        for (let i = 0; i < dailyStandItems.length; i++) {\n          if (dailyStandItems[i].selectedFile) {\n            saveDailyStandDetailPict(dailyStandItems[i].selectedFile).then(responseDailyStandDetailPict => {\n              let dailyStandDetailDatas = {\n                description: dailyStandItems[i].description,\n                pict_url: responseDailyStandDetailPict.data.url || \"\",\n                id_daily_stand: dailyStand.id\n              };\n              saveDailyStandDetail(dailyStandDetailDatas);\n            });\n          }\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(HeaderPages, {\n      headerTitle: headerTitle,\n      headerBreadcrumbs: headerBreadcrumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"admin-container\",\n      children: [/*#__PURE__*/_jsxDEV(AdminMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"admin-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Gestion de l'\\xE9tal du jour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"admin-dailystand-interractions\",\n          children: [dailyStand.id !== \"\" && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: e => {\n              newDailyStand();\n            },\n            children: \"Nouvel Etal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 54\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: e => {\n              addElement();\n            },\n            children: \"Ajouter un \\xE9l\\xE9ment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"admin-dailystand-content\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Description de l'\\xE9tal\",\n              multiline: true,\n              rows: 8,\n              variant: \"filled\",\n              onChange: e => {\n                setDailyStand({ ...dailyStand,\n                  [\"description\"]: e.target.value\n                });\n              },\n              value: dailyStand.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this), contentAdded]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: e => handleSave(),\n          children: \"Enregistrer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdminDailyStand, \"qaFCVXmUgaIZfhi35VTBdsSVd6I=\");\n\n_c = AdminDailyStand;\nexport default AdminDailyStand;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminDailyStand\");","map":{"version":3,"sources":["/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/src/containers/admin/adminDailyStand.js"],"names":["React","useState","useEffect","Header","HeaderPages","Footer","AdminMenu","getDailyStand","getDailyStandDetails","saveDailyStand","saveDailyStandDetail","saveDailyStandDetailPict","deleteDailyStand","updateDailyStand","deleteDailyStandDetails","Button","TextField","FormControl","InputLabel","AdminDailyStand","props","headerTitle","headerBreadcrumbs","value","link","dailyStand","setDailyStand","id","description","creation_timestamp","contentAdded","setContentAdded","dailyStandItems","setDailyStandItems","addElement","pict_url","filePreview","selectedFile","then","response","length","index","display","e","changePicture","target","files","name","changeDescription","file","URL","createObjectURL","newDailyStand","handleSave","i","dailyStandDatas","responseDailyStand","data","result","insertId","responseDailyStandDetailPict","dailyStandDetailDatas","url","id_daily_stand"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\n\n//Imports des composants de l'UI externes\nimport Header from \"../headers/header\"\nimport HeaderPages from \"../headers/headerPages\"\nimport Footer from \"../footer\"\nimport AdminMenu from \"../../components/adminMenu\"\n\nimport {getDailyStand, getDailyStandDetails, saveDailyStand, saveDailyStandDetail, saveDailyStandDetailPict, deleteDailyStand, updateDailyStand, deleteDailyStandDetails} from \"../../api/dailyStand\"\n\n//Imports de la librairie MaterialUI\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nconst AdminDailyStand = (props) => {\n\n    const headerTitle = \"Administration\"\n    const headerBreadcrumbs = [{value: \"Accueil\", link:\"/\"},{value: \"Administration\", link:\"/admin\"}, {value: \"Etal\", link:null}]\n\n    const [dailyStand, setDailyStand] = useState({id:\"\", description:\"\", creation_timestamp:\"\"})\n    const [contentAdded, setContentAdded] = useState([])\n    const [dailyStandItems, setDailyStandItems] = useState([])\n\n    //Ajout des champs permettant de compléter l'étal du jour\n    const addElement = () => {\n        setDailyStandItems(dailyStandItems => [...dailyStandItems,\n            {pict_url:\"\",\n            description: \"\",\n            filePreview: \"\",\n            selectedFile: \"\"}])\n    }\n\n    //Au chargement de la page\n    useEffect(() => {\n        getDailyStand()\n        .then(response => {\n            if(response){\n                setDailyStand(response)\n            }\n        })\n    }, [])\n\n    //A chaque modification de dailyStandItems\n    useEffect(() => {\n        if(dailyStandItems.length > 0){\n            let index = contentAdded.length\n            setContentAdded(contentAdded => [...contentAdded, \n                <article key={index}>\n                    <section>\n                        <FormControl>\n                            <input \n                            accept=\"images/*\"\n                            style={{display: 'none'}}\n                            id={\"file-select\"+index}\n                            type=\"file\"\n                            onChange={(e) => {changePicture(index, e.target.files[0])}}\n                            />\n                            <label htmlFor={\"file-select\"+index}>\n                                <Button color=\"primary\" component=\"span\">Ajouter une photo</Button>\n                            </label>\n                        </FormControl>\n                        {dailyStandItems[index].selectedFile && <p>{dailyStandItems[index].selectedFile.name}</p>}\n                    </section>\n                    <section>\n                        <FormControl>\n                            <TextField label=\"Description\" variant=\"filled\" onChange={(e) => {changeDescription(contentAdded.length, e.target.value)}}/>\n                        </FormControl>\n                    </section>\n                </article>\n            ])\n        }\n        \n    }, [dailyStandItems])\n\n    const changeDescription = (index, value) => {\n        dailyStandItems[index].description = value\n    }\n\n    const changePicture = (index, file) => {\n        dailyStandItems[index].filePreview = URL.createObjectURL(file)\n        dailyStandItems[index].selectedFile = file\n        \n    }\n\n    //Initialisation d'un nouveau étal\n    const newDailyStand = () => {\n        deleteDailyStand()\n        deleteDailyStandDetails()\n        setDailyStand({id:\"\", description:\"\", creation_timestamp:\"\"})\n    }\n\n    //Fonction d'enregistrement de l'étal\n    const handleSave = () => {\n        \n\n        //Vérification des données avant enregistrement\n        if(!dailyStand.description) {\n            for(let i = 0; i < dailyStandItems.length; i++){\n            }\n        }\n        \n        let dailyStandDatas = {description: dailyStand.description}\n        if(dailyStand.id === \"\"){\n            saveDailyStand(dailyStandDatas)\n            .then(responseDailyStand => {\n                setDailyStand({...dailyStand, [\"id\"]: responseDailyStand.data.result.insertId})\n                for(let i = 0; i < dailyStandItems.length; i++){\n                    saveDailyStandDetailPict(dailyStandItems[i].selectedFile)\n                    .then(responseDailyStandDetailPict => {\n                        let dailyStandDetailDatas = {\n                            description: dailyStandItems[i].description,\n                            pict_url: responseDailyStandDetailPict.data.url || \"\",\n                            id_daily_stand: responseDailyStand.data.result.insertId\n                        }\n                        saveDailyStandDetail(dailyStandDetailDatas)\n                    })\n                }\n            })\n        }\n        else {\n            updateDailyStand(dailyStandDatas)\n            .then(response => {\n                for(let i = 0; i < dailyStandItems.length; i++){\n                    if(dailyStandItems[i].selectedFile){\n                        saveDailyStandDetailPict(dailyStandItems[i].selectedFile)\n                        .then(responseDailyStandDetailPict => {\n                            let dailyStandDetailDatas = {\n                                description: dailyStandItems[i].description,\n                                pict_url: responseDailyStandDetailPict.data.url  || \"\",\n                                id_daily_stand: dailyStand.id\n                            }\n                            saveDailyStandDetail(dailyStandDetailDatas)\n                        })\n                    }\n                }\n            })\n        }\n    }\n\n    return(\n        <section className=\"root\">\n                <Header />\n                <HeaderPages headerTitle={headerTitle} headerBreadcrumbs={headerBreadcrumbs}/>\n                <section className=\"admin-container\">\n                    <AdminMenu />\n \n                    <section className=\"admin-content\">\n                        <h4>Gestion de l'étal du jour</h4>\n                        <section className=\"admin-dailystand-interractions\">\n                            {dailyStand.id !== \"\" && <Button variant=\"contained\" color=\"primary\" onClick={(e) => {newDailyStand()}}>Nouvel Etal</Button>}\n                            <Button variant=\"contained\" color=\"primary\" onClick={(e) => {addElement()}}>Ajouter un élément</Button>\n                        </section>\n                        <section className=\"admin-dailystand-content\">\n                            <FormControl>\n                                <TextField label=\"Description de l'étal\" multiline rows={8} variant=\"filled\" \n                                onChange={(e) => {setDailyStand({...dailyStand, [\"description\"]: e.target.value})}}\n                               \n                                value={dailyStand.description}/>\n                            </FormControl>\n                            {contentAdded}\n                        </section>\n                        <Button variant=\"contained\" color=\"primary\" onClick={(e) => handleSave()}>Enregistrer</Button>\n                    </section>\n                </section>\n                <Footer />\n        </section>\n    )\n\n}\n\nexport default AdminDailyStand"]},"metadata":{},"sourceType":"module"}