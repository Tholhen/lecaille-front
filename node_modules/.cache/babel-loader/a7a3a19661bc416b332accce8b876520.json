{"ast":null,"code":"var _jsxFileName = \"/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/src/containers/user/profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateUser, updatePassword } from \"../../api/user\";\nimport { getAllRequestsByCustomer, getAllRequestDetails } from \"../../api/requests\";\nimport { convertDate } from \"../../utils/utils\";\nimport { getOneUser } from \"../../api/user\";\nimport { refreshUserInfos } from \"../../actions/user/userAction\";\nimport { config } from \"../../config/config\"; //Imports des composants de l'UI externes\n\nimport Header from \"../headers/header\";\nimport HeaderPages from \"../headers/headerPages\";\nimport Footer from \"../footer\"; //Imports depuis la librairie MaterialUI\n\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from \"@material-ui/styles\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = props => {\n  _s();\n\n  const headerTitle = \"Profil\";\n  const headerBreadcrumbs = [{\n    value: \"Accueil\",\n    link: \"/\"\n  }, {\n    value: \"Profil\",\n    link: null\n  }];\n  const [firstName, setFirstName] = useState(\"\");\n  const [firstNameError, setFirstNameError] = useState(false);\n  const [firstNameErrorText, setFirstNameErrorText] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [lastNameError, setLastNameError] = useState(false);\n  const [lastNameErrorText, setLastNameErrorText] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(false);\n  const [emailErrorText, setEmailErrorText] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordUpdated, setPasswordUpdated] = useState(false);\n  const [phone, setPhone] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(false);\n  const [phoneErrorText, setPhoneErrorText] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [displayedRequests, setDisplayedRequests] = useState([]);\n  const [snackBarOpened, setSnackBarOpened] = useState(false);\n  const [snackBarSeverity, setSnackBarSeverity] = useState(\"\");\n  const [successUpdateText, setSuccessUpdateText] = useState(\"\"); //Définition des styles MaterialUI\n\n  const useStyles = makeStyles(theme => ({\n    margin: {\n      margin: theme.spacing(1)\n    }\n  }));\n  const classes = useStyles(); //A chaque modification du redux user\n\n  useEffect(() => {\n    setFirstName(props.user.infos.first_name);\n    setLastName(props.user.infos.last_name);\n    setEmail(props.user.infos.email);\n    setPhone(props.user.infos.phone);\n    setAddress(props.user.infos.address);\n    setZip(props.user.infos.zip);\n    setCity(props.user.infos.city);\n    getAllRequestsByCustomer(props.user.infos.id).then(requestsDB => {\n      loadRequestsDetails(requestsDB);\n    });\n  }, [props.user]); // Au click sur le bouton envoyer\n\n  const onSubmit = () => {\n    globalVerify();\n  }; //Fonction de vérification de bonne saisie des informations\n\n\n  const globalVerify = () => {\n    if (!firstName) {\n      setFirstNameError(true);\n      setFirstNameErrorText(\"Prénom non renseigné\");\n    } else {\n      setFirstNameError(false);\n      setFirstNameErrorText(\"\");\n    }\n\n    if (!lastName) {\n      setLastNameError(true);\n      setLastNameErrorText(\"Nom non renseigné\");\n    } else {\n      setLastNameError(false);\n      setLastNameErrorText(\"\");\n    }\n\n    if (!email) {\n      setEmailError(true);\n      setEmailErrorText(\"Adresse email non renseignée\");\n    } else {\n      if (!email.match(config.emailRegEx)) {\n        setEmailError(true);\n        setEmailErrorText(\"Adresse email non valide\");\n      } else {\n        setEmailError(false);\n        setEmailErrorText(\"\");\n      }\n    }\n\n    if (password !== \"\") {\n      setPasswordUpdated(true);\n    } else {\n      setPasswordUpdated(false);\n    }\n\n    if (!phone) {\n      setPhoneError(true);\n      setPhoneErrorText(\"N° de téléphone non renseigné\");\n    } else {\n      if (!phone.match(config.phoneRegEx)) {\n        setPhoneError(true);\n        setPhoneErrorText(\"N° de téléphone incorrect\");\n      } else {\n        setPhoneError(false);\n        setPhoneErrorText(\"\");\n      }\n    } //Si tous les champs sont bons, on enregistre les modification apportées à l'utilisateur\n\n\n    if (firstName && lastName && email && phone && phone.match(config.phoneRegEx) && email.match(config.emailRegEx)) {\n      let datas = {\n        first_name: firstName,\n        last_name: lastName,\n        email: email,\n        phone: phone,\n        address: address,\n        zip: zip,\n        city: city\n      };\n      updateUser(datas, props.user.infos.id).then(responseUpdateUser => {\n        if (responseUpdateUser.data.status === 200) {\n          if (passwordUpdated) {\n            let datasPassword = {\n              password: password\n            };\n            updatePassword(datasPassword, props.user.infos.id).then(responsePassword => {\n              if (responsePassword.data.status === 200) {\n                endUpdateProcess(\"success\", \"Succès de la mise à jour de votre profil et du mot de passe\");\n              } else {\n                endUpdateProcess(\"error\", \"Erreur lors de la mise à jour du mot de passe\");\n              }\n            });\n          } else {\n            endUpdateProcess(\"success\", \"Succès de la mise à jour de votre profil\");\n          }\n        } else {\n          endUpdateProcess(\"error\", \"Erreur lors de la mise à jour de votre profil\");\n        }\n      });\n    }\n  };\n\n  const endUpdateProcess = (result, message) => {\n    setSnackBarSeverity(result);\n    setSuccessUpdateText(message);\n    openSnackbar();\n\n    if (result === \"success\") {\n      getOneUser(props.user.infos.id).then(user => {\n        props.refreshUserInfos(user);\n      });\n    }\n  }; //Fonctions de gestion de l'ouverture/fermeture de la snackbar\n\n\n  const closeSnackbar = () => {\n    setSnackBarOpened(false);\n  };\n\n  const openSnackbar = () => {\n    setSnackBarOpened(true);\n  }; //Contruction de la liste des commandes passées à afficher\n\n\n  const loadRequestsDetails = requests => {\n    requests.map(requestItem => {\n      let requestDetails = [];\n      getAllRequestDetails(requestItem.id).then(requestLines => {\n        requestLines.map((requestLineDetails, indexDetail) => {\n          requestDetails = [...requestDetails, /*#__PURE__*/_jsxDEV(\"article\", {\n            className: \"request-details-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"section\", {\n              className: \"request-details-item-pict\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: config.product_pict_url + requestLineDetails.pict_url,\n                alt: \"illustration\" + requestLineDetails.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n              className: \"request-details-item-infos\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: requestLineDetails.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [requestLineDetails.quantity, \" g\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [requestLineDetails.price, \" \\u20AC TTC\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this)]\n          }, indexDetail, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this)];\n        });\n        setDisplayedRequests(displayedRequests => [...displayedRequests, /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"profile-user-request-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"request-item-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"N\\xB0\", requestItem.request_number]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"du \", convertDate(requestItem.request_date)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Statut : \", requestItem.preparation_status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"request-item-details\",\n            children: requestDetails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"request-item-resume\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [requestItem.total_amount, \" \\u20AC TCC\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this)]\n        }, requestItem.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this)]);\n      });\n    });\n  }; //Fonction d'affichage des commandes de l'utilisateur\n\n\n  const showRequestsDetails = () => {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile-user-requests-container\",\n      children: displayedRequests\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HeaderPages, {\n      headerTitle: headerTitle,\n      headerBreadcrumbs: headerBreadcrumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Mes informations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"profile-user-infos-container default-background-gradient\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"profile-user-informations\",\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"profile-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 32\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"profile-header-title\",\n              children: \"Informations personnelles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"profile-user-informations-content\",\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              error: true,\n              className: classes.margin,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"filled\",\n                label: \"Nom\",\n                color: \"primary\",\n                required: true,\n                onChange: e => {\n                  setLastName(e.target.value);\n                },\n                error: lastNameError,\n                value: lastName || \"\",\n                InputLabelProps: {\n                  style: {\n                    color: \"#B4B4B4\"\n                  }\n                },\n                InputProps: {\n                  style: {\n                    color: \"#fff\"\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: lastNameErrorText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              error: true,\n              className: classes.margin,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"filled\",\n                label: \"Pr\\xE9nom\",\n                color: \"primary\",\n                required: true,\n                onChange: e => {\n                  setFirstName(e.target.value);\n                },\n                error: firstNameError,\n                value: firstName || \"\",\n                InputLabelProps: {\n                  style: {\n                    color: \"#B4B4B4\"\n                  }\n                },\n                InputProps: {\n                  style: {\n                    color: \"#fff\"\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: firstNameErrorText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              error: true,\n              className: classes.margin,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"filled\",\n                label: \"Mot de passe\",\n                color: \"primary\",\n                onChange: e => {\n                  setPassword(e.target.value);\n                  e.target.value ? setPasswordUpdated(true) : setPasswordUpdated(false);\n                },\n                type: \"password\",\n                defaultValue: \"\",\n                InputLabelProps: {\n                  style: {\n                    color: \"#B4B4B4\"\n                  }\n                },\n                InputProps: {\n                  style: {\n                    color: \"#fff\"\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"profile-user-contact\",\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"profile-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"profile-header-title\",\n              children: \"Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"profile-user-contact-content\",\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              error: true,\n              className: classes.margin,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"filled\",\n                label: \"Email\",\n                color: \"primary\",\n                required: true,\n                onChange: e => {\n                  setEmail(e.target.value);\n                },\n                error: emailError,\n                type: \"email\",\n                value: email || \"\",\n                InputLabelProps: {\n                  style: {\n                    color: \"#B4B4B4\"\n                  }\n                },\n                InputProps: {\n                  style: {\n                    color: \"#fff\"\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: emailErrorText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              error: true,\n              className: classes.margin,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"filled\",\n                label: \"T\\xE9l\\xE9phone\",\n                color: \"primary\",\n                required: true,\n                error: phoneError,\n                type: \"tel\",\n                value: phone || \"\",\n                onChange: e => {\n                  setPhone(e.target.value);\n                },\n                InputLabelProps: {\n                  style: {\n                    color: \"#B4B4B4\"\n                  }\n                },\n                InputProps: {\n                  style: {\n                    color: \"#fff\"\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: phoneErrorText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              error: true,\n              className: classes.margin,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"filled\",\n                label: \"Adresse\",\n                color: \"primary\",\n                onChange: e => {\n                  setAddress(e.target.value);\n                },\n                value: address || \"\",\n                InputLabelProps: {\n                  style: {\n                    color: \"#B4B4B4\"\n                  }\n                },\n                InputProps: {\n                  style: {\n                    color: \"#fff\"\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              error: true,\n              className: classes.margin,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"filled\",\n                label: \"Code Postal\",\n                color: \"primary\",\n                onChange: e => {\n                  setZip(e.target.value);\n                },\n                value: zip || \"\",\n                InputLabelProps: {\n                  style: {\n                    color: \"#B4B4B4\"\n                  }\n                },\n                InputProps: {\n                  style: {\n                    color: \"#fff\"\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              error: true,\n              className: classes.margin,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"filled\",\n                label: \"Ville\",\n                color: \"primary\",\n                onChange: e => {\n                  setCity(e.target.value);\n                },\n                value: city || \"\",\n                InputLabelProps: {\n                  style: {\n                    color: \"#B4B4B4\"\n                  }\n                },\n                InputProps: {\n                  style: {\n                    color: \"#fff\"\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"profile-submit-button\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"admin-user-edit-button\",\n              color: \"primary\",\n              variant: \"contained\",\n              onClick: onSubmit,\n              children: \"Envoyer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n            open: snackBarOpened,\n            autoHideDuration: 6000,\n            onClose: e => {\n              closeSnackbar();\n            },\n            children: /*#__PURE__*/_jsxDEV(MuiAlert, {\n              onClose: e => {\n                closeSnackbar();\n              },\n              severity: snackBarSeverity,\n              children: successUpdateText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Mes commandes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }, this), showRequestsDetails()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"YUDBpTASLDBC/eIsrXgkbHTTWZA=\", true);\n\n_c = Profile;\n\nconst mapStateToProps = store => {\n  return {};\n};\n\nconst mapDispatchToProps = {\n  refreshUserInfos\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/src/containers/user/profile.js"],"names":["React","useState","useEffect","connect","updateUser","updatePassword","getAllRequestsByCustomer","getAllRequestDetails","convertDate","getOneUser","refreshUserInfos","config","Header","HeaderPages","Footer","Button","TextField","FormHelperText","FormControl","makeStyles","AccountCircleIcon","MailIcon","Snackbar","MuiAlert","Profile","props","headerTitle","headerBreadcrumbs","value","link","firstName","setFirstName","firstNameError","setFirstNameError","firstNameErrorText","setFirstNameErrorText","lastName","setLastName","lastNameError","setLastNameError","lastNameErrorText","setLastNameErrorText","email","setEmail","emailError","setEmailError","emailErrorText","setEmailErrorText","password","setPassword","passwordUpdated","setPasswordUpdated","phone","setPhone","phoneError","setPhoneError","phoneErrorText","setPhoneErrorText","address","setAddress","zip","setZip","city","setCity","displayedRequests","setDisplayedRequests","snackBarOpened","setSnackBarOpened","snackBarSeverity","setSnackBarSeverity","successUpdateText","setSuccessUpdateText","useStyles","theme","margin","spacing","classes","user","infos","first_name","last_name","id","then","requestsDB","loadRequestsDetails","onSubmit","globalVerify","match","emailRegEx","phoneRegEx","datas","responseUpdateUser","data","status","datasPassword","responsePassword","endUpdateProcess","result","message","openSnackbar","closeSnackbar","requests","map","requestItem","requestDetails","requestLines","requestLineDetails","indexDetail","product_pict_url","pict_url","name","quantity","price","request_number","request_date","preparation_status","total_amount","showRequestsDetails","e","target","style","color","mapStateToProps","store","mapDispatchToProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,UAAR,EAAoBC,cAApB,QAAyC,gBAAzC;AACA,SAAQC,wBAAR,EAAkCC,oBAAlC,QAA6D,oBAA7D;AACA,SAAQC,WAAR,QAA0B,mBAA1B;AACA,SAAQC,UAAR,QAAyB,gBAAzB;AACA,SAAQC,gBAAR,QAA+B,+BAA/B;AACA,SAAQC,MAAR,QAAqB,qBAArB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CAEA;;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAAQC,UAAR,QAA0B,qBAA1B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAEvB,QAAMC,WAAW,GAAG,QAApB;AACA,QAAMC,iBAAiB,GAAG,CAAC;AAACC,IAAAA,KAAK,EAAE,SAAR;AAAmBC,IAAAA,IAAI,EAAC;AAAxB,GAAD,EAA+B;AAACD,IAAAA,KAAK,EAAE,QAAR;AAAkBC,IAAAA,IAAI,EAAC;AAAvB,GAA/B,CAA1B;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4B9B,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC+B,cAAD,EAAiBC,iBAAjB,IAAsChC,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACiC,kBAAD,EAAqBC,qBAArB,IAA8ClC,QAAQ,CAAC,EAAD,CAA5D;AAGA,QAAM,CAACmC,QAAD,EAAWC,WAAX,IAA0BpC,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACqC,aAAD,EAAgBC,gBAAhB,IAAoCtC,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACuC,iBAAD,EAAoBC,oBAApB,IAA4CxC,QAAQ,CAAC,EAAD,CAA1D;AAEA,QAAM,CAACyC,KAAD,EAAQC,QAAR,IAAoB1C,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC2C,UAAD,EAAaC,aAAb,IAA8B5C,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAAC6C,cAAD,EAAiBC,iBAAjB,IAAsC9C,QAAQ,CAAC,EAAD,CAApD;AAEA,QAAM,CAAC+C,QAAD,EAAWC,WAAX,IAA0BhD,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiD,eAAD,EAAkBC,kBAAlB,IAAwClD,QAAQ,CAAC,KAAD,CAAtD;AAEA,QAAM,CAACmD,KAAD,EAAQC,QAAR,IAAoBpD,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACqD,UAAD,EAAaC,aAAb,IAA8BtD,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACuD,cAAD,EAAiBC,iBAAjB,IAAsCxD,QAAQ,CAAC,EAAD,CAApD;AAEA,QAAM,CAACyD,OAAD,EAAUC,UAAV,IAAwB1D,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC2D,GAAD,EAAMC,MAAN,IAAgB5D,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAAC6D,IAAD,EAAOC,OAAP,IAAkB9D,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM,CAAC+D,iBAAD,EAAoBC,oBAApB,IAA4ChE,QAAQ,CAAC,EAAD,CAA1D;AAEA,QAAM,CAACiE,cAAD,EAAiBC,iBAAjB,IAAsClE,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACmE,gBAAD,EAAmBC,mBAAnB,IAA0CpE,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACqE,iBAAD,EAAoBC,oBAApB,IAA4CtE,QAAQ,CAAC,EAAD,CAA1D,CAjCuB,CAmCvB;;AACA,QAAMuE,SAAS,GAAGrD,UAAU,CAAEsD,KAAD,KAAY;AACrCC,IAAAA,MAAM,EAAE;AACJA,MAAAA,MAAM,EAAED,KAAK,CAACE,OAAN,CAAc,CAAd;AADJ;AAD6B,GAAZ,CAAD,CAA5B;AAMA,QAAMC,OAAO,GAAGJ,SAAS,EAAzB,CA1CuB,CA4CvB;;AACAtE,EAAAA,SAAS,CAAC,MAAM;AACZ6B,IAAAA,YAAY,CAACN,KAAK,CAACoD,IAAN,CAAWC,KAAX,CAAiBC,UAAlB,CAAZ;AACA1C,IAAAA,WAAW,CAACZ,KAAK,CAACoD,IAAN,CAAWC,KAAX,CAAiBE,SAAlB,CAAX;AACArC,IAAAA,QAAQ,CAAClB,KAAK,CAACoD,IAAN,CAAWC,KAAX,CAAiBpC,KAAlB,CAAR;AACAW,IAAAA,QAAQ,CAAC5B,KAAK,CAACoD,IAAN,CAAWC,KAAX,CAAiB1B,KAAlB,CAAR;AACAO,IAAAA,UAAU,CAAClC,KAAK,CAACoD,IAAN,CAAWC,KAAX,CAAiBpB,OAAlB,CAAV;AACAG,IAAAA,MAAM,CAACpC,KAAK,CAACoD,IAAN,CAAWC,KAAX,CAAiBlB,GAAlB,CAAN;AACAG,IAAAA,OAAO,CAACtC,KAAK,CAACoD,IAAN,CAAWC,KAAX,CAAiBhB,IAAlB,CAAP;AAEAxD,IAAAA,wBAAwB,CAACmB,KAAK,CAACoD,IAAN,CAAWC,KAAX,CAAiBG,EAAlB,CAAxB,CACCC,IADD,CACOC,UAAD,IAAgB;AAClBC,MAAAA,mBAAmB,CAACD,UAAD,CAAnB;AACH,KAHD;AAKH,GAdQ,EAcN,CAAC1D,KAAK,CAACoD,IAAP,CAdM,CAAT,CA7CuB,CA6DvB;;AACA,QAAMQ,QAAQ,GAAG,MAAM;AACnBC,IAAAA,YAAY;AACf,GAFD,CA9DuB,CAkEvB;;;AACA,QAAMA,YAAY,GAAG,MAAM;AAEvB,QAAG,CAACxD,SAAJ,EAAc;AACVG,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAE,MAAAA,qBAAqB,CAAC,sBAAD,CAArB;AACH,KAHD,MAIK;AACDF,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAE,MAAAA,qBAAqB,CAAC,EAAD,CAArB;AACH;;AAED,QAAG,CAACC,QAAJ,EAAa;AACTG,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,MAAAA,oBAAoB,CAAC,mBAAD,CAApB;AACH,KAHD,MAIK;AACDF,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAE,MAAAA,oBAAoB,CAAC,EAAD,CAApB;AACH;;AACD,QAAG,CAACC,KAAJ,EAAU;AACNG,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,MAAAA,iBAAiB,CAAC,8BAAD,CAAjB;AACH,KAHD,MAIK;AACD,UAAG,CAACL,KAAK,CAAC6C,KAAN,CAAY5E,MAAM,CAAC6E,UAAnB,CAAJ,EAAmC;AAC/B3C,QAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,QAAAA,iBAAiB,CAAC,0BAAD,CAAjB;AACH,OAHD,MAIK;AACDF,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,QAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACH;AACJ;;AACD,QAAGC,QAAQ,KAAK,EAAhB,EAAmB;AACfG,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,KAFD,MAGK;AACDA,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH;;AACD,QAAG,CAACC,KAAJ,EAAU;AACNG,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,MAAAA,iBAAiB,CAAC,+BAAD,CAAjB;AACH,KAHD,MAII;AACA,UAAG,CAACL,KAAK,CAACmC,KAAN,CAAY5E,MAAM,CAAC8E,UAAnB,CAAJ,EAAmC;AAC/BlC,QAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,QAAAA,iBAAiB,CAAC,2BAAD,CAAjB;AACH,OAHD,MAIK;AACDF,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,QAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACH;AACJ,KApDsB,CAsDvB;;;AACA,QAAG3B,SAAS,IAAIM,QAAb,IAAyBM,KAAzB,IAAkCU,KAAlC,IAA2CA,KAAK,CAACmC,KAAN,CAAY5E,MAAM,CAAC8E,UAAnB,CAA3C,IAA6E/C,KAAK,CAAC6C,KAAN,CAAY5E,MAAM,CAAC6E,UAAnB,CAAhF,EAA+G;AAE3G,UAAIE,KAAK,GAAG;AACRX,QAAAA,UAAU,EAAEjD,SADJ;AAERkD,QAAAA,SAAS,EAAE5C,QAFH;AAGRM,QAAAA,KAAK,EAAEA,KAHC;AAIRU,QAAAA,KAAK,EAAEA,KAJC;AAKRM,QAAAA,OAAO,EAAEA,OALD;AAMRE,QAAAA,GAAG,EAAEA,GANG;AAORE,QAAAA,IAAI,EAAEA;AAPE,OAAZ;AAUA1D,MAAAA,UAAU,CAACsF,KAAD,EAAQjE,KAAK,CAACoD,IAAN,CAAWC,KAAX,CAAiBG,EAAzB,CAAV,CACCC,IADD,CACMS,kBAAkB,IAAI;AACxB,YAAGA,kBAAkB,CAACC,IAAnB,CAAwBC,MAAxB,KAAmC,GAAtC,EAA0C;AAEtC,cAAG3C,eAAH,EAAmB;AACf,gBAAI4C,aAAa,GAAG;AAChB9C,cAAAA,QAAQ,EAAEA;AADM,aAApB;AAGA3C,YAAAA,cAAc,CAACyF,aAAD,EAAgBrE,KAAK,CAACoD,IAAN,CAAWC,KAAX,CAAiBG,EAAjC,CAAd,CACCC,IADD,CACMa,gBAAgB,IAAI;AACtB,kBAAGA,gBAAgB,CAACH,IAAjB,CAAsBC,MAAtB,KAAiC,GAApC,EAAwC;AACpCG,gBAAAA,gBAAgB,CAAC,SAAD,EAAW,6DAAX,CAAhB;AACH,eAFD,MAGK;AACDA,gBAAAA,gBAAgB,CAAC,OAAD,EAAS,+CAAT,CAAhB;AACH;AACJ,aARD;AASH,WAbD,MAcI;AACAA,YAAAA,gBAAgB,CAAC,SAAD,EAAW,0CAAX,CAAhB;AACH;AACJ,SAnBD,MAoBK;AACDA,UAAAA,gBAAgB,CAAC,OAAD,EAAS,+CAAT,CAAhB;AACH;AACJ,OAzBD;AA0BH;AACJ,GA9FD;;AAgGA,QAAMA,gBAAgB,GAAG,CAACC,MAAD,EAASC,OAAT,KAAqB;AAC1C7B,IAAAA,mBAAmB,CAAC4B,MAAD,CAAnB;AACA1B,IAAAA,oBAAoB,CAAC2B,OAAD,CAApB;AACAC,IAAAA,YAAY;;AACZ,QAAGF,MAAM,KAAG,SAAZ,EAAsB;AAClBxF,MAAAA,UAAU,CAACgB,KAAK,CAACoD,IAAN,CAAWC,KAAX,CAAiBG,EAAlB,CAAV,CACCC,IADD,CACML,IAAI,IAAI;AACVpD,QAAAA,KAAK,CAACf,gBAAN,CAAuBmE,IAAvB;AACH,OAHD;AAIH;AAEJ,GAXD,CAnKuB,CAgLvB;;;AACA,QAAMuB,aAAa,GAAG,MAAM;AACxBjC,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,GAFD;;AAIA,QAAMgC,YAAY,GAAG,MAAM;AACvBhC,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,GAFD,CArLuB,CAyLvB;;;AACA,QAAMiB,mBAAmB,GAAIiB,QAAD,IAAc;AACtCA,IAAAA,QAAQ,CAACC,GAAT,CAAcC,WAAD,IAAiB;AAC1B,UAAIC,cAAc,GAAG,EAArB;AACAjG,MAAAA,oBAAoB,CAACgG,WAAW,CAACtB,EAAb,CAApB,CACCC,IADD,CACOuB,YAAD,IAAkB;AACpBA,QAAAA,YAAY,CAACH,GAAb,CAAiB,CAACI,kBAAD,EAAqBC,WAArB,KAAqC;AAClDH,UAAAA,cAAc,GAAG,CAAC,GAAGA,cAAJ,eACb;AAA2B,YAAA,SAAS,EAAC,sBAArC;AAAA,oCACI;AAAS,cAAA,SAAS,EAAC,2BAAnB;AAAA,qCACI;AAAK,gBAAA,GAAG,EAAE7F,MAAM,CAACiG,gBAAP,GAA0BF,kBAAkB,CAACG,QAAvD;AAAiE,gBAAA,GAAG,EAAE,iBAAeH,kBAAkB,CAACzB;AAAxG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAS,cAAA,SAAS,EAAC,4BAAnB;AAAA,sCACI;AAAA,0BAAIyB,kBAAkB,CAACI;AAAvB;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,2BAAIJ,kBAAkB,CAACK,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA,2BAAIL,kBAAkB,CAACM,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA,aAAcL,WAAd;AAAA;AAAA;AAAA;AAAA,kBADa,CAAjB;AAWH,SAZD;AAcA1C,QAAAA,oBAAoB,CAACD,iBAAiB,IAAI,CAAC,GAAGA,iBAAJ,eACtC;AAA8B,UAAA,SAAS,EAAC,2BAAxC;AAAA,kCACI;AAAS,YAAA,SAAS,EAAC,qBAAnB;AAAA,oCACI;AAAA,kCAAMuC,WAAW,CAACU,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,gCAAOzG,WAAW,CAAC+F,WAAW,CAACW,YAAb,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,sCAAaX,WAAW,CAACY,kBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI;AAAS,YAAA,SAAS,EAAC,sBAAnB;AAAA,sBACKX;AADL;AAAA;AAAA;AAAA;AAAA,kBANJ,eASI;AAAS,YAAA,SAAS,EAAC,qBAAnB;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,yBAAID,WAAW,CAACa,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA,WAAcb,WAAW,CAACtB,EAA1B;AAAA;AAAA;AAAA;AAAA,gBADsC,CAAtB,CAApB;AAeH,OA/BD;AAmCH,KArCD;AAsCH,GAvCD,CA1LuB,CAmOvB;;;AACA,QAAMoC,mBAAmB,GAAG,MAAM;AAC9B,wBACA;AAAS,MAAA,SAAS,EAAC,iCAAnB;AAAA,gBACarD;AADb;AAAA;AAAA;AAAA;AAAA,YADA;AAIH,GALD;;AAOA,sBACI;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AAAa,MAAA,WAAW,EAAEtC,WAA1B;AAAuC,MAAA,iBAAiB,EAAEC;AAA1D;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAS,MAAA,SAAS,EAAC,mBAAnB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAS,QAAA,SAAS,EAAC,0DAAnB;AAAA,gCACI;AAAS,UAAA,SAAS,EAAC,2BAAnB;AAAA,kCAEI;AAAS,YAAA,SAAS,EAAC,gBAAnB;AAAA,oCACI;AAAA,qCAAG,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAG,cAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAMI;AAAS,YAAA,SAAS,EAAC,mCAAnB;AAAA,oCACI,QAAC,WAAD;AAAa,cAAA,KAAK,MAAlB;AAAmB,cAAA,SAAS,EAAEiD,OAAO,CAACF,MAAtC;AAAA,sCACI,QAAC,SAAD;AAAW,gBAAA,OAAO,EAAC,QAAnB;AAA4B,gBAAA,KAAK,EAAC,KAAlC;AAAwC,gBAAA,KAAK,EAAC,SAA9C;AAAwD,gBAAA,QAAQ,MAAhE;AAAiE,gBAAA,QAAQ,EAAG4C,CAAD,IAAO;AAACjF,kBAAAA,WAAW,CAACiF,CAAC,CAACC,MAAF,CAAS3F,KAAV,CAAX;AAA4B,iBAA/G;AAAiH,gBAAA,KAAK,EAAEU,aAAxH;AAAuI,gBAAA,KAAK,EAAEF,QAAQ,IAAI,EAA1J;AACA,gBAAA,eAAe,EAAE;AAACoF,kBAAAA,KAAK,EAAG;AAACC,oBAAAA,KAAK,EAAG;AAAT;AAAT,iBADjB;AAEA,gBAAA,UAAU,EAAE;AAACD,kBAAAA,KAAK,EAAG;AAACC,oBAAAA,KAAK,EAAG;AAAT;AAAT;AAFZ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII,QAAC,cAAD;AAAA,0BAAiBjF;AAAjB;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAQI,QAAC,WAAD;AAAa,cAAA,KAAK,MAAlB;AAAmB,cAAA,SAAS,EAAEoC,OAAO,CAACF,MAAtC;AAAA,sCACI,QAAC,SAAD;AAAW,gBAAA,OAAO,EAAC,QAAnB;AAA4B,gBAAA,KAAK,EAAC,WAAlC;AAA2C,gBAAA,KAAK,EAAC,SAAjD;AAA4D,gBAAA,QAAQ,MAApE;AAAqE,gBAAA,QAAQ,EAAG4C,CAAD,IAAO;AAACvF,kBAAAA,YAAY,CAACuF,CAAC,CAACC,MAAF,CAAS3F,KAAV,CAAZ;AAA6B,iBAApH;AAAsH,gBAAA,KAAK,EAAEI,cAA7H;AAA6I,gBAAA,KAAK,EAAEF,SAAS,IAAI,EAAjK;AACA,gBAAA,eAAe,EAAE;AAAC0F,kBAAAA,KAAK,EAAG;AAACC,oBAAAA,KAAK,EAAG;AAAT;AAAT,iBADjB;AAEA,gBAAA,UAAU,EAAE;AAACD,kBAAAA,KAAK,EAAG;AAACC,oBAAAA,KAAK,EAAG;AAAT;AAAT;AAFZ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII,QAAC,cAAD;AAAA,0BAAiBvF;AAAjB;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBARJ,eAeI,QAAC,WAAD;AAAa,cAAA,KAAK,MAAlB;AAAmB,cAAA,SAAS,EAAE0C,OAAO,CAACF,MAAtC;AAAA,qCACI,QAAC,SAAD;AAAW,gBAAA,OAAO,EAAC,QAAnB;AAA4B,gBAAA,KAAK,EAAC,cAAlC;AAAiD,gBAAA,KAAK,EAAC,SAAvD;AAAiE,gBAAA,QAAQ,EAAG4C,CAAD,IAAO;AAACrE,kBAAAA,WAAW,CAACqE,CAAC,CAACC,MAAF,CAAS3F,KAAV,CAAX;AACnF0F,kBAAAA,CAAC,CAACC,MAAF,CAAS3F,KAAT,GAAiBuB,kBAAkB,CAAC,IAAD,CAAnC,GAA4CA,kBAAkB,CAAC,KAAD,CAA9D;AAAsE,iBADtE;AACwE,gBAAA,IAAI,EAAC,UAD7E;AACwF,gBAAA,YAAY,EAAC,EADrG;AAEA,gBAAA,eAAe,EAAE;AAACqE,kBAAAA,KAAK,EAAG;AAACC,oBAAAA,KAAK,EAAG;AAAT;AAAT,iBAFjB;AAGA,gBAAA,UAAU,EAAE;AAACD,kBAAAA,KAAK,EAAG;AAACC,oBAAAA,KAAK,EAAG;AAAT;AAAT;AAHZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eA+BI;AAAS,UAAA,SAAS,EAAC,sBAAnB;AAAA,kCACQ;AAAS,YAAA,SAAS,EAAC,gBAAnB;AAAA,oCACI;AAAA,qCAAG,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAG,cAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADR,eAKQ;AAAS,YAAA,SAAS,EAAC,8BAAnB;AAAA,oCAEQ,QAAC,WAAD;AAAa,cAAA,KAAK,MAAlB;AAAmB,cAAA,SAAS,EAAE7C,OAAO,CAACF,MAAtC;AAAA,sCACI,QAAC,SAAD;AAAW,gBAAA,OAAO,EAAC,QAAnB;AAA4B,gBAAA,KAAK,EAAC,OAAlC;AAA0C,gBAAA,KAAK,EAAC,SAAhD;AAA0D,gBAAA,QAAQ,MAAlE;AAAmE,gBAAA,QAAQ,EAAG4C,CAAD,IAAO;AAAC3E,kBAAAA,QAAQ,CAAC2E,CAAC,CAACC,MAAF,CAAS3F,KAAV,CAAR;AAAyB,iBAA9G;AAAgH,gBAAA,KAAK,EAAEgB,UAAvH;AAAmI,gBAAA,IAAI,EAAC,OAAxI;AAAgJ,gBAAA,KAAK,EAAEF,KAAK,IAAI,EAAhK;AACA,gBAAA,eAAe,EAAE;AAAC8E,kBAAAA,KAAK,EAAG;AAACC,oBAAAA,KAAK,EAAG;AAAT;AAAT,iBADjB;AAEA,gBAAA,UAAU,EAAE;AAACD,kBAAAA,KAAK,EAAG;AAACC,oBAAAA,KAAK,EAAG;AAAT;AAAT;AAFZ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII,QAAC,cAAD;AAAA,0BAAiB3E;AAAjB;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFR,eASQ,QAAC,WAAD;AAAa,cAAA,KAAK,MAAlB;AAAmB,cAAA,SAAS,EAAE8B,OAAO,CAACF,MAAtC;AAAA,sCACI,QAAC,SAAD;AAAW,gBAAA,OAAO,EAAC,QAAnB;AAA4B,gBAAA,KAAK,EAAC,iBAAlC;AAA8C,gBAAA,KAAK,EAAC,SAApD;AAA8D,gBAAA,QAAQ,MAAtE;AAAwE,gBAAA,KAAK,EAAEpB,UAA/E;AAA2F,gBAAA,IAAI,EAAC,KAAhG;AAAsG,gBAAA,KAAK,EAAEF,KAAK,IAAI,EAAtH;AACE,gBAAA,QAAQ,EAAGkE,CAAD,IAAO;AAACjE,kBAAAA,QAAQ,CAACiE,CAAC,CAACC,MAAF,CAAS3F,KAAV,CAAR;AAAyB,iBAD7C;AAEA,gBAAA,eAAe,EAAE;AAAC4F,kBAAAA,KAAK,EAAG;AAACC,oBAAAA,KAAK,EAAG;AAAT;AAAT,iBAFjB;AAGA,gBAAA,UAAU,EAAE;AAACD,kBAAAA,KAAK,EAAG;AAACC,oBAAAA,KAAK,EAAG;AAAT;AAAT;AAHZ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAKI,QAAC,cAAD;AAAA,0BAAiBjE;AAAjB;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBATR,eAiBQ,QAAC,WAAD;AAAa,cAAA,KAAK,MAAlB;AAAmB,cAAA,SAAS,EAAEoB,OAAO,CAACF,MAAtC;AAAA,qCACI,QAAC,SAAD;AAAW,gBAAA,OAAO,EAAC,QAAnB;AAA4B,gBAAA,KAAK,EAAC,SAAlC;AAA4C,gBAAA,KAAK,EAAC,SAAlD;AAA4D,gBAAA,QAAQ,EAAG4C,CAAD,IAAO;AAAC3D,kBAAAA,UAAU,CAAC2D,CAAC,CAACC,MAAF,CAAS3F,KAAV,CAAV;AAA2B,iBAAzG;AAA2G,gBAAA,KAAK,EAAE8B,OAAO,IAAI,EAA7H;AACA,gBAAA,eAAe,EAAE;AAAC8D,kBAAAA,KAAK,EAAG;AAACC,oBAAAA,KAAK,EAAG;AAAT;AAAT,iBADjB;AAEA,gBAAA,UAAU,EAAE;AAACD,kBAAAA,KAAK,EAAG;AAACC,oBAAAA,KAAK,EAAG;AAAT;AAAT;AAFZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAjBR,eAuBQ,QAAC,WAAD;AAAa,cAAA,KAAK,MAAlB;AAAmB,cAAA,SAAS,EAAE7C,OAAO,CAACF,MAAtC;AAAA,qCACI,QAAC,SAAD;AAAW,gBAAA,OAAO,EAAC,QAAnB;AAA4B,gBAAA,KAAK,EAAC,aAAlC;AAAgD,gBAAA,KAAK,EAAC,SAAtD;AAAgE,gBAAA,QAAQ,EAAG4C,CAAD,IAAO;AAACzD,kBAAAA,MAAM,CAACyD,CAAC,CAACC,MAAF,CAAS3F,KAAV,CAAN;AAAuB,iBAAzG;AAA2G,gBAAA,KAAK,EAAEgC,GAAG,IAAI,EAAzH;AACA,gBAAA,eAAe,EAAE;AAAC4D,kBAAAA,KAAK,EAAG;AAACC,oBAAAA,KAAK,EAAG;AAAT;AAAT,iBADjB;AAEA,gBAAA,UAAU,EAAE;AAACD,kBAAAA,KAAK,EAAG;AAACC,oBAAAA,KAAK,EAAG;AAAT;AAAT;AAFZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAvBR,eA6BQ,QAAC,WAAD;AAAa,cAAA,KAAK,MAAlB;AAAmB,cAAA,SAAS,EAAE7C,OAAO,CAACF,MAAtC;AAAA,qCACI,QAAC,SAAD;AAAW,gBAAA,OAAO,EAAC,QAAnB;AAA4B,gBAAA,KAAK,EAAC,OAAlC;AAA0C,gBAAA,KAAK,EAAC,SAAhD;AAA0D,gBAAA,QAAQ,EAAG4C,CAAD,IAAO;AAACvD,kBAAAA,OAAO,CAACuD,CAAC,CAACC,MAAF,CAAS3F,KAAV,CAAP;AAAwB,iBAApG;AAAsG,gBAAA,KAAK,EAAEkC,IAAI,IAAI,EAArH;AACA,gBAAA,eAAe,EAAE;AAAC0D,kBAAAA,KAAK,EAAG;AAACC,oBAAAA,KAAK,EAAG;AAAT;AAAT,iBADjB;AAEA,gBAAA,UAAU,EAAE;AAACD,kBAAAA,KAAK,EAAG;AAACC,oBAAAA,KAAK,EAAG;AAAT;AAAT;AAFZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBA7BR;AAAA;AAAA;AAAA;AAAA;AAAA,kBALR,eA0CQ;AAAS,YAAA,SAAS,EAAC,uBAAnB;AAAA,mCACI,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC,wBAAlB;AAA2C,cAAA,KAAK,EAAC,SAAjD;AAA2D,cAAA,OAAO,EAAC,WAAnE;AAA+E,cAAA,OAAO,EAAEpC,QAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBA1CR,eA6CQ,QAAC,QAAD;AAAU,YAAA,IAAI,EAAEnB,cAAhB;AAAgC,YAAA,gBAAgB,EAAE,IAAlD;AAAwD,YAAA,OAAO,EAAGoD,CAAD,IAAO;AAAClB,cAAAA,aAAa;AAAG,aAAzF;AAAA,mCACI,QAAC,QAAD;AAAU,cAAA,OAAO,EAAGkB,CAAD,IAAO;AAAClB,gBAAAA,aAAa;AAAG,eAA3C;AAA6C,cAAA,QAAQ,EAAEhC,gBAAvD;AAAA,wBAA0EE;AAA1E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBA7CR;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAmFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnFJ,EAoFK+C,mBAAmB,EApFxB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAyFI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAzFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6FH,CAxUD;;GAAM7F,O;;KAAAA,O;;AA0UN,MAAMkG,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO,EAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAG;AACvBlH,EAAAA;AADuB,CAA3B;AAIA,eAAeP,OAAO,CAACuH,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CpG,OAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport {connect} from \"react-redux\"\n\nimport {updateUser, updatePassword} from \"../../api/user\"\nimport {getAllRequestsByCustomer, getAllRequestDetails} from \"../../api/requests\"\nimport {convertDate} from \"../../utils/utils\"\nimport {getOneUser} from \"../../api/user\"\nimport {refreshUserInfos} from \"../../actions/user/userAction\"\nimport {config} from \"../../config/config\"\n\n//Imports des composants de l'UI externes\nimport Header from \"../headers/header\"\nimport HeaderPages from \"../headers/headerPages\"\nimport Footer from \"../footer\"\n\n//Imports depuis la librairie MaterialUI\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport {makeStyles } from \"@material-ui/styles\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nconst Profile = (props) => {\n\n    const headerTitle = \"Profil\"\n    const headerBreadcrumbs = [{value: \"Accueil\", link:\"/\"}, {value: \"Profil\", link:null}]\n\n    const [firstName, setFirstName] = useState(\"\")\n    const [firstNameError, setFirstNameError] = useState(false)\n    const [firstNameErrorText, setFirstNameErrorText] = useState(\"\")\n    \n\n    const [lastName, setLastName] = useState(\"\")\n    const [lastNameError, setLastNameError] = useState(false)\n    const [lastNameErrorText, setLastNameErrorText] = useState(\"\")\n\n    const [email, setEmail] = useState(\"\")\n    const [emailError, setEmailError] = useState(false)\n    const [emailErrorText, setEmailErrorText] = useState(\"\")\n\n    const [password, setPassword] = useState(\"\")\n    const [passwordUpdated, setPasswordUpdated] = useState(false)\n\n    const [phone, setPhone] = useState(\"\")\n    const [phoneError, setPhoneError] = useState(false)\n    const [phoneErrorText, setPhoneErrorText] = useState(\"\")\n\n    const [address, setAddress] = useState(\"\")\n    const [zip, setZip] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n\n    const [displayedRequests, setDisplayedRequests] = useState([])\n\n    const [snackBarOpened, setSnackBarOpened] = useState(false)\n    const [snackBarSeverity, setSnackBarSeverity] = useState(\"\")\n    const [successUpdateText, setSuccessUpdateText] = useState(\"\")\n\n    //Définition des styles MaterialUI\n    const useStyles = makeStyles((theme) => ({\n        margin: {\n            margin: theme.spacing(1)\n        }\n        }));\n        \n    const classes = useStyles();\n\n    //A chaque modification du redux user\n    useEffect(() => {\n        setFirstName(props.user.infos.first_name)\n        setLastName(props.user.infos.last_name)\n        setEmail(props.user.infos.email)\n        setPhone(props.user.infos.phone)\n        setAddress(props.user.infos.address)\n        setZip(props.user.infos.zip)\n        setCity(props.user.infos.city)\n\n        getAllRequestsByCustomer(props.user.infos.id)\n        .then((requestsDB) => {\n            loadRequestsDetails(requestsDB)\n        })\n        \n    }, [props.user])\n\n    // Au click sur le bouton envoyer\n    const onSubmit = () => {\n        globalVerify()\n    }\n\n    //Fonction de vérification de bonne saisie des informations\n    const globalVerify = () => {\n\n        if(!firstName){\n            setFirstNameError(true)\n            setFirstNameErrorText(\"Prénom non renseigné\")\n        }\n        else {\n            setFirstNameError(false)\n            setFirstNameErrorText(\"\")\n        }\n\n        if(!lastName){\n            setLastNameError(true)\n            setLastNameErrorText(\"Nom non renseigné\")\n        }\n        else {\n            setLastNameError(false)\n            setLastNameErrorText(\"\")\n        }\n        if(!email){\n            setEmailError(true)\n            setEmailErrorText(\"Adresse email non renseignée\")\n        }\n        else {\n            if(!email.match(config.emailRegEx)){\n                setEmailError(true)\n                setEmailErrorText(\"Adresse email non valide\")\n            }\n            else {\n                setEmailError(false)\n                setEmailErrorText(\"\")\n            }\n        }\n        if(password !== \"\"){\n            setPasswordUpdated(true)\n        }\n        else {\n            setPasswordUpdated(false)\n        }\n        if(!phone){\n            setPhoneError(true)\n            setPhoneErrorText(\"N° de téléphone non renseigné\")\n        }\n        else{\n            if(!phone.match(config.phoneRegEx)){\n                setPhoneError(true)\n                setPhoneErrorText(\"N° de téléphone incorrect\")\n            }\n            else {\n                setPhoneError(false)\n                setPhoneErrorText(\"\")\n            }\n        }\n\n        //Si tous les champs sont bons, on enregistre les modification apportées à l'utilisateur\n        if(firstName && lastName && email && phone && phone.match(config.phoneRegEx) && email.match(config.emailRegEx)){\n            \n            let datas = {\n                first_name: firstName,\n                last_name: lastName,\n                email: email,\n                phone: phone,\n                address: address,\n                zip: zip,\n                city: city\n            }    \n\n            updateUser(datas, props.user.infos.id)\n            .then(responseUpdateUser => {\n                if(responseUpdateUser.data.status === 200){\n                    \n                    if(passwordUpdated){\n                        let datasPassword = {\n                            password: password\n                        }\n                        updatePassword(datasPassword, props.user.infos.id)\n                        .then(responsePassword => { \n                            if(responsePassword.data.status === 200){\n                                endUpdateProcess(\"success\",\"Succès de la mise à jour de votre profil et du mot de passe\")\n                            }\n                            else {\n                                endUpdateProcess(\"error\",\"Erreur lors de la mise à jour du mot de passe\")\n                            }\n                        })\n                    }\n                    else{\n                        endUpdateProcess(\"success\",\"Succès de la mise à jour de votre profil\")\n                    }\n                }\n                else {\n                    endUpdateProcess(\"error\",\"Erreur lors de la mise à jour de votre profil\")\n                }\n            })         \n        }\n    }\n\n    const endUpdateProcess = (result, message) => {\n        setSnackBarSeverity(result)\n        setSuccessUpdateText(message)\n        openSnackbar()\n        if(result===\"success\"){\n            getOneUser(props.user.infos.id)\n            .then(user => {\n                props.refreshUserInfos(user)\n            })  \n        }\n        \n    }\n\n    //Fonctions de gestion de l'ouverture/fermeture de la snackbar\n    const closeSnackbar = () => {\n        setSnackBarOpened(false)\n    }\n\n    const openSnackbar = () => {\n        setSnackBarOpened(true)\n    }\n\n    //Contruction de la liste des commandes passées à afficher\n    const loadRequestsDetails = (requests) => {\n        requests.map((requestItem) => {\n            let requestDetails = []\n            getAllRequestDetails(requestItem.id)\n            .then((requestLines) => {\n                requestLines.map((requestLineDetails, indexDetail) => {\n                    requestDetails = [...requestDetails,\n                        <article key={indexDetail} className=\"request-details-item\">\n                            <section className=\"request-details-item-pict\">\n                                <img src={config.product_pict_url + requestLineDetails.pict_url} alt={\"illustration\"+requestLineDetails.id}/>\n                            </section>\n                            <section className=\"request-details-item-infos\">\n                                <p>{requestLineDetails.name}</p>\n                                <p>{requestLineDetails.quantity} g</p>\n                                <p>{requestLineDetails.price} € TTC</p>\n                            </section>\n                        </article>]\n                })\n\n                setDisplayedRequests(displayedRequests => [...displayedRequests,\n                    <article key={requestItem.id} className=\"profile-user-request-item\">\n                        <section className=\"request-item-header\">\n                            <p>N°{requestItem.request_number}</p>\n                            <p>du {convertDate(requestItem.request_date)}</p>\n                            <p>Statut : {requestItem.preparation_status}</p>\n                        </section>\n                        <section className=\"request-item-details\">\n                            {requestDetails}\n                        </section>\n                        <section className=\"request-item-resume\">\n                            <p>Total</p>\n                            <p>{requestItem.total_amount} € TCC</p>\n                        </section>\n                    </article>])\n            })\n            \n            \n            \n        })\n    }\n\n    //Fonction d'affichage des commandes de l'utilisateur\n    const showRequestsDetails = () => {\n        return (\n        <section className=\"profile-user-requests-container\">\n                    {displayedRequests}\n        </section>)\n    }\n\n    return(\n        <section className=\"root\">\n            <Header />\n            <HeaderPages headerTitle={headerTitle} headerBreadcrumbs={headerBreadcrumbs}/>\n            <section className=\"profile-container\">\n                <h4>Mes informations</h4>\n                <section className=\"profile-user-infos-container default-background-gradient\">\n                    <section className=\"profile-user-informations\">\n\n                        <section className=\"profile-header\">\n                            <p><AccountCircleIcon /></p>\n                            <p className=\"profile-header-title\">Informations personnelles</p>\n                        </section>\n                        <section className=\"profile-user-informations-content\">\n                            <FormControl error className={classes.margin}>\n                                <TextField variant=\"filled\" label=\"Nom\" color=\"primary\" required onChange={(e) => {setLastName(e.target.value)}} error={lastNameError} value={lastName || \"\"} \n                                InputLabelProps={{style : {color : \"#B4B4B4\"}}}\n                                InputProps={{style : {color : \"#fff\"}}}/>\n                                <FormHelperText>{lastNameErrorText}</FormHelperText>\n                            </FormControl>\n\n                            <FormControl error className={classes.margin}>\n                                <TextField variant=\"filled\" label=\"Prénom\" color=\"primary\"  required onChange={(e) => {setFirstName(e.target.value)}} error={firstNameError} value={firstName || \"\"}\n                                InputLabelProps={{style : {color : \"#B4B4B4\"}}}\n                                InputProps={{style : {color : \"#fff\"}}}/>\n                                <FormHelperText>{firstNameErrorText}</FormHelperText>\n                            </FormControl>\n\n                            <FormControl error className={classes.margin}>\n                                <TextField variant=\"filled\" label=\"Mot de passe\" color=\"primary\" onChange={(e) => {setPassword(e.target.value)\n                                e.target.value ? setPasswordUpdated(true) : setPasswordUpdated(false)}} type=\"password\" defaultValue=\"\"\n                                InputLabelProps={{style : {color : \"#B4B4B4\"}}}\n                                InputProps={{style : {color : \"#fff\"}}}/>\n                            </FormControl>\n                        </section>\n                    </section>\n\n                    <section className=\"profile-user-contact\">\n                            <section className=\"profile-header\">\n                                <p><MailIcon /></p>\n                                <p className=\"profile-header-title\">Contact</p>\n                            </section>\n                            <section className=\"profile-user-contact-content\">\n                                \n                                    <FormControl error className={classes.margin} >\n                                        <TextField variant=\"filled\" label=\"Email\" color=\"primary\" required onChange={(e) => {setEmail(e.target.value)}} error={emailError} type=\"email\" value={email || \"\"}\n                                        InputLabelProps={{style : {color : \"#B4B4B4\"}}}\n                                        InputProps={{style : {color : \"#fff\"}}}/>\n                                        <FormHelperText>{emailErrorText}</FormHelperText>\n                                    </FormControl>\n\n                                    <FormControl error className={classes.margin}>\n                                        <TextField variant=\"filled\" label=\"Téléphone\" color=\"primary\" required  error={phoneError} type=\"tel\" value={phone || \"\"\n                                        } onChange={(e) => {setPhone(e.target.value)}} \n                                        InputLabelProps={{style : {color : \"#B4B4B4\"}}}\n                                        InputProps={{style : {color : \"#fff\"}}}/>\n                                        <FormHelperText>{phoneErrorText}</FormHelperText>\n                                    </FormControl>\n\n                                    <FormControl error className={classes.margin}>\n                                        <TextField variant=\"filled\" label=\"Adresse\" color=\"primary\" onChange={(e) => {setAddress(e.target.value)}} value={address || \"\"}\n                                        InputLabelProps={{style : {color : \"#B4B4B4\"}}}\n                                        InputProps={{style : {color : \"#fff\"}}}/>\n                                    </FormControl>\n\n                                    <FormControl error className={classes.margin}>\n                                        <TextField variant=\"filled\" label=\"Code Postal\" color=\"primary\" onChange={(e) => {setZip(e.target.value)}} value={zip || \"\"}\n                                        InputLabelProps={{style : {color : \"#B4B4B4\"}}}\n                                        InputProps={{style : {color : \"#fff\"}}}/>\n                                    </FormControl>\n\n                                    <FormControl error className={classes.margin}>\n                                        <TextField variant=\"filled\" label=\"Ville\" color=\"primary\" onChange={(e) => {setCity(e.target.value)}} value={city || \"\"}\n                                        InputLabelProps={{style : {color : \"#B4B4B4\"}}}\n                                        InputProps={{style : {color : \"#fff\"}}}/>\n                                    </FormControl>\n\n                                    \n                            </section>\n                            <section className=\"profile-submit-button\">\n                                <Button className=\"admin-user-edit-button\" color=\"primary\" variant=\"contained\" onClick={onSubmit}>Envoyer</Button>\n                            </section>\n                            <Snackbar open={snackBarOpened} autoHideDuration={6000} onClose={(e) => {closeSnackbar()}}>\n                                <MuiAlert onClose={(e) => {closeSnackbar()}} severity={snackBarSeverity}>{successUpdateText}</MuiAlert>\n                            </Snackbar>\n                    </section>      \n                </section>\n                <h4>Mes commandes</h4>\n                {showRequestsDetails()}\n            </section>\n            <Footer />\n        </section>\n    )\n}\n\nconst mapStateToProps = (store) => {\n    return {\n\n    }\n\n}\n\nconst mapDispatchToProps = {\n    refreshUserInfos\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)"]},"metadata":{},"sourceType":"module"}