{"ast":null,"code":"var _jsxFileName = \"/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/src/components/shopOpinionPopUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { saveUser } from \"../api/user\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport { config } from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShopOpinionPopUp = props => {\n  _s();\n\n  //Définition des variables\n  const [opinion, setOpinion] = useState(\"\");\n  const [opinionError, setOpinionError] = useState(false);\n  const [opinionErrorMsg, setOpinionErrorMsg] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(\"\");\n  const [filePreview, setFilePreview] = useState(\"\");\n  const [defaultPict, setDefaultPict] = useState(\"no-pict.png\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [firstNameError, setFirstNameError] = useState(false);\n  const [firstNameErrorText, setFirstNameErrorText] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [lastNameError, setLastNameError] = useState(false);\n  const [lastNameErrorText, setLastNameErrorText] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [emailErrorText, setEmailErrorText] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(false);\n  const [passwordErrorText, setPasswordErrorText] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(false);\n  const [phoneErrorText, setPhoneErrorText] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n\n  const globalVerify = () => {\n    if (!firstName) {\n      setFirstNameError(true);\n      setFirstNameErrorText(\"Prénom non renseigné\");\n    } else {\n      setFirstNameError(false);\n      setFirstNameErrorText(\"\");\n    }\n\n    if (!lastName) {\n      setLastNameError(true);\n      setLastNameErrorText(\"Nom non renseigné\");\n    } else {\n      setLastNameError(false);\n      setLastNameErrorText(\"\");\n    }\n\n    if (!email) {\n      setEmailError(true);\n      setEmailErrorText(\"Adresse email non renseignée\");\n    } else {\n      if (!email.match(config.emailRegEx)) {\n        setEmailError(true);\n        setEmailErrorText(\"Format d'email non valide\");\n      } else {\n        setEmailError(false);\n        setEmailErrorText(\"\");\n      }\n    }\n\n    if (!password) {\n      setPasswordError(true);\n      setPasswordErrorText(\"Mot de passe non renseigné\");\n    } else {\n      setPasswordError(false);\n      setPasswordErrorText(\"\");\n    }\n\n    if (!phone) {\n      setPhoneError(true);\n      setPhoneErrorText(\"N° de téléphone non renseigné\");\n    } else {\n      if (!phone.match(phoneRegEx)) {\n        setPhoneError(true);\n        setPhoneErrorText(\"N° de téléphone incorrect\");\n      } else {\n        setPhoneError(false);\n        setPhoneErrorText(\"\");\n      }\n    } //Si tous les champs sont bons, on enregistre l'utilisateur\n\n\n    if (firstName && lastName && email && password && phone && phone.match(phoneRegEx) && email.match(config.emailRegEx)) {\n      let datas = {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        password: password,\n        phone: phone,\n        address: address,\n        zip: zip,\n        city: city\n      };\n      saveUser(datas).then(response => {\n        if (response.data.status === 401) {\n          setEmailErrorText(\"Utilisateur existant\");\n          setEmailError(true);\n        } else {\n          props.closeShopOpinionPopUp();\n        }\n      });\n    }\n  };\n\n  const onSubmit = () => {\n    globalVerify();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: props.opened,\n    onClose: e => {\n      props.closeShopOpinionPopUp();\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Avis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          error: true,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Votre avis\",\n            color: \"primary\",\n            className: \"register-form-input\",\n            required: true,\n            onChange: e => {\n              setLastName(e.target.value);\n            },\n            error: lastNameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: lastNameErrorText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: e => {\n          props.closeShopOpinionPopUp();\n        },\n        color: \"primary\",\n        children: \"Annuler\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: e => {\n          onSubmit();\n        },\n        color: \"primary\",\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ShopOpinionPopUp, \"oec+S4vzGoqooQptlD9bdBGZRtE=\");\n\n_c = ShopOpinionPopUp;\n\nconst mapStateToProps = store => {\n  return {\n    user: store.user\n  };\n};\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopOpinionPopUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"ShopOpinionPopUp\");","map":{"version":3,"sources":["/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/src/components/shopOpinionPopUp.js"],"names":["React","useState","connect","saveUser","Dialog","DialogActions","DialogContent","DialogTitle","Button","TextField","FormHelperText","FormControl","config","ShopOpinionPopUp","props","opinion","setOpinion","opinionError","setOpinionError","opinionErrorMsg","setOpinionErrorMsg","selectedFile","setSelectedFile","filePreview","setFilePreview","defaultPict","setDefaultPict","firstName","setFirstName","firstNameError","setFirstNameError","firstNameErrorText","setFirstNameErrorText","lastName","setLastName","lastNameError","setLastNameError","lastNameErrorText","setLastNameErrorText","email","setEmail","emailError","setEmailError","emailErrorText","setEmailErrorText","password","setPassword","passwordError","setPasswordError","passwordErrorText","setPasswordErrorText","phone","setPhone","phoneError","setPhoneError","phoneErrorText","setPhoneErrorText","address","setAddress","zip","setZip","city","setCity","globalVerify","match","emailRegEx","phoneRegEx","datas","then","response","data","status","closeShopOpinionPopUp","onSubmit","opened","e","target","value","mapStateToProps","store","user","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {connect} from \"react-redux\"\nimport {saveUser} from \"../api/user\"\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport {config} from \"../config\"\n\nconst ShopOpinionPopUp = (props) => {\n\n    //Définition des variables\n    const [opinion, setOpinion] = useState(\"\")\n    const [opinionError, setOpinionError] = useState(false)\n    const [opinionErrorMsg, setOpinionErrorMsg] = useState(\"\")\n\n    const [selectedFile, setSelectedFile] = useState(\"\")\n    const [filePreview, setFilePreview] = useState(\"\")\n    const [defaultPict, setDefaultPict] = useState(\"no-pict.png\")\n\n\n\n    const [firstName, setFirstName] = useState(\"\")\n    const [firstNameError, setFirstNameError] = useState(false)\n    const [firstNameErrorText, setFirstNameErrorText] = useState(\"\")\n\n    const [lastName, setLastName] = useState(\"\")\n    const [lastNameError, setLastNameError] = useState(false)\n    const [lastNameErrorText, setLastNameErrorText] = useState(\"\")\n\n    const [email, setEmail] = useState(\"\")\n    const [emailError, setEmailError] = useState(\"\")\n    const [emailErrorText, setEmailErrorText] = useState(\"\")\n\n    const [password, setPassword] = useState(\"\")\n    const [passwordError, setPasswordError] = useState(false)\n    const [passwordErrorText, setPasswordErrorText] = useState(\"\")\n\n    const [phone, setPhone] = useState(\"\")\n    const [phoneError, setPhoneError] = useState(false)\n    const [phoneErrorText, setPhoneErrorText] = useState(\"\")\n\n    const [address, setAddress] = useState(\"\")\n    const [zip, setZip] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n\n    const globalVerify = () => {\n\n            if(!firstName){\n                setFirstNameError(true)\n                setFirstNameErrorText(\"Prénom non renseigné\")\n            }\n            else {\n                setFirstNameError(false)\n                setFirstNameErrorText(\"\")\n            }\n\n            if(!lastName){\n                setLastNameError(true)\n                setLastNameErrorText(\"Nom non renseigné\")\n            }\n            else {\n                setLastNameError(false)\n                setLastNameErrorText(\"\")\n            }\n            if(!email){\n                setEmailError(true)\n                setEmailErrorText(\"Adresse email non renseignée\")\n            }\n            else {\n                if(!email.match(config.emailRegEx)){\n                    setEmailError(true)\n                    setEmailErrorText(\"Format d'email non valide\")\n                }\n                else {\n                    setEmailError(false)\n                    setEmailErrorText(\"\")\n                }\n            }\n            if(!password){\n                setPasswordError(true)\n                setPasswordErrorText(\"Mot de passe non renseigné\")\n            }\n            else {\n                setPasswordError(false)\n                setPasswordErrorText(\"\")\n            }\n            if(!phone){\n                setPhoneError(true)\n                setPhoneErrorText(\"N° de téléphone non renseigné\")\n            }\n            else{\n                if(!phone.match(phoneRegEx)){\n                    setPhoneError(true)\n                    setPhoneErrorText(\"N° de téléphone incorrect\")\n                }\n                else {\n                    setPhoneError(false)\n                    setPhoneErrorText(\"\")\n                }\n            }\n\n            //Si tous les champs sont bons, on enregistre l'utilisateur\n            if(firstName && lastName && email && password && phone && phone.match(phoneRegEx) && email.match(config.emailRegEx)){\n                \n                let datas = {\n                    firstName: firstName,\n                    lastName: lastName,\n                    email: email,\n                    password: password,\n                    phone: phone,\n                    address: address,\n                    zip: zip,\n                    city: city\n                }    \n                \n                saveUser(datas)\n                .then(response => {\n                    if(response.data.status === 401){\n                        setEmailErrorText(\"Utilisateur existant\")\n                        setEmailError(true)\n                    }\n                    else{\n                        props.closeShopOpinionPopUp()\n                    }\n                })\n                \n            }\n            \n    }\n\n    const onSubmit = () =>{\n        globalVerify()\n       \n    }\n\n    return(\n        <Dialog\n            open={props.opened}\n            onClose={(e) => {props.closeShopOpinionPopUp()}}\n        >\n            <DialogTitle>Avis</DialogTitle>\n            <DialogContent>\n            <form>\n                <FormControl error>\n                    <TextField label=\"Votre avis\" color=\"primary\" className=\"register-form-input\" required onChange={(e) => {setLastName(e.target.value)}} error={lastNameError} />\n                    <FormHelperText>{lastNameErrorText}</FormHelperText>\n                </FormControl>\n\n            </form>\n            </DialogContent>\n            <DialogActions>\n            <Button onClick={(e) => {props.closeShopOpinionPopUp()}} color=\"primary\">\n                Annuler\n            </Button>\n            <Button onClick={(e) => {onSubmit()}} color=\"primary\">\n                Envoyer\n            </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nconst mapStateToProps = (store) => {\n    return {\n        user: store.user\n    }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopOpinionPopUp)"]},"metadata":{},"sourceType":"module"}