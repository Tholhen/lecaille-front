{"ast":null,"code":"var _jsxFileName = \"/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/src/containers/admin/adminUserEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { getOneUser, updateUser, updatePassword, updateUserRole, getAllRoles } from \"../../api/user\";\nimport { config } from \"../../config/config\"; //Imports des composants de l'UI externes\n\nimport Header from \"../headers/header\";\nimport HeaderPages from \"../headers/headerPages\";\nimport Footer from \"../footer\";\nimport AdminMenu from \"../../components/adminMenu\"; //Imports depuis la librairie MaterialUI\n\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport { makeStyles } from \"@material-ui/styles\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminUserEdit = props => {\n  _s();\n\n  const headerTitle = \"Administration\";\n  const headerBreadcrumbs = [{\n    value: \"Accueil\",\n    link: \"/\"\n  }, {\n    value: \"Administration\",\n    link: \"/admin\"\n  }, {\n    value: \"Utilisateurs\",\n    link: \"/admin/users\"\n  }, {\n    value: \"Edition\",\n    link: null\n  }];\n  const [firstName, setFirstName] = useState(\"\");\n  const [firstNameError, setFirstNameError] = useState(false);\n  const [firstNameErrorText, setFirstNameErrorText] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [lastNameError, setLastNameError] = useState(false);\n  const [lastNameErrorText, setLastNameErrorText] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(false);\n  const [emailErrorText, setEmailErrorText] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordUpdated, setPasswordUpdated] = useState(false);\n  const [phone, setPhone] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(false);\n  const [phoneErrorText, setPhoneErrorText] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [displayedSelect, setDisplayedSelect] = useState(\"\");\n  const [idSelectedRole, setIdSelectedRole] = useState(\"\");\n  const [roles, setRoles] = useState([]);\n  const [newRole, setNewRole] = useState(0); //Définition du style MaterialUI\n\n  const useStyles = makeStyles(theme => ({\n    margin: {\n      margin: theme.spacing(1),\n      width: \"90%\"\n    }\n  }));\n  const classes = useStyles(); //Au chargement de la page\n\n  useEffect(() => {\n    getOneUser(props.match.params.id).then(user => {\n      setFirstName(user.first_name);\n      setLastName(user.last_name);\n      setEmail(user.email);\n      setPhone(user.phone);\n      setAddress(user.address);\n      setZip(user.zip);\n      setCity(user.city);\n      setIdSelectedRole(user.id_role);\n      setNewRole(user.id_role);\n    });\n    getAllRoles().then(rolesDB => {\n      setRoles(rolesDB.data.result);\n      setDisplayedSelect([]);\n    });\n  }, [props.match.params.id]); //Vérification avant soumission du formulaire\n\n  const globalVerify = () => {\n    if (!firstName) {\n      setFirstNameError(true);\n      setFirstNameErrorText(\"Prénom non renseigné\");\n    } else {\n      setFirstNameError(false);\n      setFirstNameErrorText(\"\");\n    }\n\n    if (!lastName) {\n      setLastNameError(true);\n      setLastNameErrorText(\"Nom non renseigné\");\n    } else {\n      setLastNameError(false);\n      setLastNameErrorText(\"\");\n    }\n\n    if (!email) {\n      setEmailError(true);\n      setEmailErrorText(\"Adresse email non renseignée\");\n    } else {\n      if (!email.match(config.emailRegEx)) {\n        setEmailError(true);\n        setEmailErrorText(\"Adresse email non valide\");\n      } else {\n        setEmailError(false);\n        setEmailErrorText(\"\");\n      }\n    }\n\n    if (password !== \"\") {\n      setPasswordUpdated(true);\n    } else {\n      setPasswordUpdated(false);\n    }\n\n    if (!phone) {\n      setPhoneError(true);\n      setPhoneErrorText(\"N° de téléphone non renseigné\");\n    } else {\n      if (!phone.match(config.phoneRegEx)) {\n        setPhoneError(true);\n        setPhoneErrorText(\"N° de téléphone incorrect\");\n      } else {\n        setPhoneError(false);\n        setPhoneErrorText(\"\");\n      }\n    } //Si tous les champs sont bons, on enregistre l'utilisateur\n\n\n    if (firstName && lastName && email && phone && phone.match(config.phoneRegEx) && email.match(config.emailRegEx)) {\n      let datas = {\n        first_name: firstName,\n        last_name: lastName,\n        email: email,\n        phone: phone,\n        address: address,\n        zip: zip,\n        city: city\n      };\n      updateUser(datas, props.match.params.id).then(responseUpdateUser => {\n        if (responseUpdateUser.data.status === 200) {\n          console.log(\"Succès de la mise à jour utilisateur\");\n\n          if (passwordUpdated) {\n            let datasPassword = {\n              password: password\n            };\n            updatePassword(datasPassword, props.match.params.id).then(responsePassword => {\n              if (responsePassword.data.status === 200) {\n                console.log(\"Succès de la mise à jour du mot de passe\");\n              } else {\n                console.log(\"Erreur lors de la mise à jour du mot de passe\");\n              }\n            });\n          }\n\n          if (parseInt(newRole) !== idSelectedRole) {\n            let datas = {\n              id_role: newRole\n            };\n            updateUserRole(datas, props.match.params.id).then(responseRole => {\n              if (responseRole.status === 200) {\n                console.log(\"Succès de la mise à jour du rôle\");\n              } else {\n                console.log(\"Erreur lors de la mise à jour du rôle\");\n              }\n            });\n          }\n        } else {\n          console.log(\"Erreur lors de la mise à jour de l'utilisateur\");\n        }\n      });\n    }\n  };\n\n  const onSubmit = () => {\n    globalVerify();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(HeaderPages, {\n      headerTitle: headerTitle,\n      headerBreadcrumbs: headerBreadcrumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"admin-container\",\n      children: [/*#__PURE__*/_jsxDEV(AdminMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"admin-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Edition d'un utilisateur\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"user-edit-container\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"admin-user-edit\",\n            children: [/*#__PURE__*/_jsxDEV(\"section\", {\n              className: \"user-edit-informations\",\n              children: [/*#__PURE__*/_jsxDEV(\"section\", {\n                className: \"user-edit-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 44\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"admin-content-section-title\",\n                  children: \"Informations personnelles\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n                className: \"user-edit-informations-content\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  error: true,\n                  className: classes.margin,\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Nom\",\n                    color: \"primary\",\n                    required: true,\n                    onChange: e => {\n                      setLastName(e.target.value);\n                    },\n                    error: lastNameError,\n                    value: lastName || \"\",\n                    variant: \"filled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    children: lastNameErrorText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  error: true,\n                  className: classes.margin,\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Pr\\xE9nom\",\n                    color: \"primary\",\n                    required: true,\n                    onChange: e => {\n                      setFirstName(e.target.value);\n                    },\n                    error: firstNameError,\n                    value: firstName || \"\",\n                    variant: \"filled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    children: firstNameErrorText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  error: true,\n                  className: classes.margin,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Mot de passe\",\n                    color: \"primary\",\n                    onChange: e => {\n                      setPassword(e.target.value);\n                      e.target.value ? setPasswordUpdated(true) : setPasswordUpdated(false);\n                    },\n                    type: \"password\",\n                    defaultValue: \"\",\n                    variant: \"filled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 41\n                }, this), displayedSelect]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n              className: \"user-edit-contact\",\n              children: [/*#__PURE__*/_jsxDEV(\"section\", {\n                className: \"user-edit-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 44\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"admin-content-section-title\",\n                  children: \"Contact\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n                className: \"user-edit-contact-content\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  error: true,\n                  className: classes.margin,\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Email\",\n                    color: \"primary\",\n                    required: true,\n                    onChange: e => {\n                      setEmail(e.target.value);\n                    },\n                    error: emailError,\n                    type: \"email\",\n                    value: email || \"\",\n                    variant: \"filled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    children: emailErrorText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  error: true,\n                  className: classes.margin,\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"T\\xE9l\\xE9phone\",\n                    color: \"primary\",\n                    required: true,\n                    error: phoneError,\n                    type: \"tel\",\n                    value: phone || \"\",\n                    onChange: e => {\n                      setPhone(e.target.value);\n                    },\n                    variant: \"filled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    children: phoneErrorText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  error: true,\n                  className: classes.margin,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Adresse\",\n                    color: \"primary\",\n                    onChange: e => {\n                      setAddress(e.target.value);\n                    },\n                    value: address || \"\",\n                    variant: \"filled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  error: true,\n                  className: classes.margin,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Code Postal\",\n                    color: \"primary\",\n                    onChange: e => {\n                      setZip(e.target.value);\n                    },\n                    value: zip || \"\",\n                    variant: \"filled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  error: true,\n                  className: classes.margin,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Ville\",\n                    color: \"primary\",\n                    onChange: e => {\n                      setCity(e.target.value);\n                    },\n                    value: city || \"\",\n                    variant: \"filled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"admin-user-edit-button\",\n                color: \"primary\",\n                variant: \"contained\",\n                onClick: e => {\n                  onSubmit();\n                },\n                children: \"Envoyer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdminUserEdit, \"V/ZXPUUT8n0ixaXr0iQ7KiILaAA=\", true);\n\n_c = AdminUserEdit;\nexport default AdminUserEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminUserEdit\");","map":{"version":3,"sources":["/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/src/containers/admin/adminUserEdit.js"],"names":["React","useState","useEffect","getOneUser","updateUser","updatePassword","updateUserRole","getAllRoles","config","Header","HeaderPages","Footer","AdminMenu","Button","TextField","FormHelperText","FormControl","InputLabel","NativeSelect","makeStyles","AccountCircleIcon","MailIcon","AdminUserEdit","props","headerTitle","headerBreadcrumbs","value","link","firstName","setFirstName","firstNameError","setFirstNameError","firstNameErrorText","setFirstNameErrorText","lastName","setLastName","lastNameError","setLastNameError","lastNameErrorText","setLastNameErrorText","email","setEmail","emailError","setEmailError","emailErrorText","setEmailErrorText","password","setPassword","passwordUpdated","setPasswordUpdated","phone","setPhone","phoneError","setPhoneError","phoneErrorText","setPhoneErrorText","address","setAddress","zip","setZip","city","setCity","displayedSelect","setDisplayedSelect","idSelectedRole","setIdSelectedRole","roles","setRoles","newRole","setNewRole","useStyles","theme","margin","spacing","width","classes","match","params","id","then","user","first_name","last_name","id_role","rolesDB","data","result","globalVerify","emailRegEx","phoneRegEx","datas","responseUpdateUser","status","console","log","datasPassword","responsePassword","parseInt","responseRole","onSubmit","e","target"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport {getOneUser, updateUser, updatePassword, updateUserRole, getAllRoles} from \"../../api/user\"\nimport {config} from \"../../config/config\"\n\n//Imports des composants de l'UI externes\nimport Header from \"../headers/header\"\nimport HeaderPages from \"../headers/headerPages\"\nimport Footer from \"../footer\"\nimport AdminMenu from \"../../components/adminMenu\"\n\n//Imports depuis la librairie MaterialUI\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport {makeStyles } from \"@material-ui/styles\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail'\n\nconst AdminUserEdit = (props) => {\n    \n    const headerTitle = \"Administration\"\n    const headerBreadcrumbs = [{value: \"Accueil\", link:\"/\"},{value:\"Administration\", link:\"/admin\"},{value: \"Utilisateurs\", link:\"/admin/users\"},{value: \"Edition\", link:null}]\n\n    const [firstName, setFirstName] = useState(\"\")\n    const [firstNameError, setFirstNameError] = useState(false)\n    const [firstNameErrorText, setFirstNameErrorText] = useState(\"\")\n    \n\n    const [lastName, setLastName] = useState(\"\")\n    const [lastNameError, setLastNameError] = useState(false)\n    const [lastNameErrorText, setLastNameErrorText] = useState(\"\")\n\n    const [email, setEmail] = useState(\"\")\n    const [emailError, setEmailError] = useState(false)\n    const [emailErrorText, setEmailErrorText] = useState(\"\")\n\n    const [password, setPassword] = useState(\"\")\n    const [passwordUpdated, setPasswordUpdated] = useState(false)\n\n    const [phone, setPhone] = useState(\"\")\n    const [phoneError, setPhoneError] = useState(false)\n    const [phoneErrorText, setPhoneErrorText] = useState(\"\")\n\n    const [address, setAddress] = useState(\"\")\n    const [zip, setZip] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n\n\n    const [displayedSelect, setDisplayedSelect] = useState(\"\")\n    const [idSelectedRole, setIdSelectedRole] = useState(\"\")\n\n    const [roles, setRoles] = useState([])\n    const [newRole, setNewRole] = useState(0)\n    \n    //Définition du style MaterialUI\n    const useStyles = makeStyles((theme) => ({\n        margin: {\n            margin: theme.spacing(1),\n            width: \"90%\"\n        },\n    }));\n\n    const classes = useStyles();\n\n    //Au chargement de la page\n    useEffect(() => {\n        getOneUser(props.match.params.id)\n        .then((user) => {\n            setFirstName(user.first_name)\n            setLastName(user.last_name)\n            setEmail(user.email)\n            setPhone(user.phone)\n            setAddress(user.address)\n            setZip(user.zip)\n            setCity(user.city)\n            setIdSelectedRole(user.id_role)\n            setNewRole(user.id_role)\n        })\n\n        getAllRoles()\n        .then(rolesDB => {\n            setRoles(rolesDB.data.result)\n\n            setDisplayedSelect([])\n        })\n    }, [props.match.params.id])\n\n    //Vérification avant soumission du formulaire\n    const globalVerify = () => {\n\n        if(!firstName){\n            setFirstNameError(true)\n            setFirstNameErrorText(\"Prénom non renseigné\")\n        }\n        else {\n            setFirstNameError(false)\n            setFirstNameErrorText(\"\")\n        }\n\n        if(!lastName){\n            setLastNameError(true)\n            setLastNameErrorText(\"Nom non renseigné\")\n        }\n        else {\n            setLastNameError(false)\n            setLastNameErrorText(\"\")\n        }\n        if(!email){\n            setEmailError(true)\n            setEmailErrorText(\"Adresse email non renseignée\")\n        }\n        else {\n            if(!email.match(config.emailRegEx)){\n                setEmailError(true)\n                setEmailErrorText(\"Adresse email non valide\")\n            }\n            else {\n                setEmailError(false)\n                setEmailErrorText(\"\")\n            }\n        }\n        if(password !== \"\"){\n            setPasswordUpdated(true)\n        }\n        else {\n            setPasswordUpdated(false)\n        }\n        if(!phone){\n            setPhoneError(true)\n            setPhoneErrorText(\"N° de téléphone non renseigné\")\n        }\n        else{\n            if(!phone.match(config.phoneRegEx)){\n                setPhoneError(true)\n                setPhoneErrorText(\"N° de téléphone incorrect\")\n            }\n            else {\n                setPhoneError(false)\n                setPhoneErrorText(\"\")\n            }\n        }\n\n        //Si tous les champs sont bons, on enregistre l'utilisateur\n        if(firstName && lastName && email && phone && phone.match(config.phoneRegEx) && email.match(config.emailRegEx)){\n            \n            let datas = {\n                first_name: firstName,\n                last_name: lastName,\n                email: email,\n                phone: phone,\n                address: address,\n                zip: zip,\n                city: city\n            }    \n\n            updateUser(datas, props.match.params.id)\n            .then(responseUpdateUser => {\n                if(responseUpdateUser.data.status === 200){\n                    console.log(\"Succès de la mise à jour utilisateur\")\n                    if(passwordUpdated){\n                        let datasPassword = {\n                            password: password\n                        }\n                        updatePassword(datasPassword, props.match.params.id)\n                        .then(responsePassword => { \n                            if(responsePassword.data.status === 200){\n                                console.log(\"Succès de la mise à jour du mot de passe\")\n                            }\n                            else {\n                                console.log(\"Erreur lors de la mise à jour du mot de passe\")\n                            }\n                        })\n                    }\n                    if(parseInt(newRole) !== idSelectedRole){\n                        let datas = {\n                            id_role: newRole\n                        }\n                        updateUserRole(datas, props.match.params.id)\n                        .then(responseRole => {\n                            if(responseRole.status === 200){\n                                console.log(\"Succès de la mise à jour du rôle\")\n                            } else {\n                                console.log(\"Erreur lors de la mise à jour du rôle\")\n                            }\n                        })\n                    }\n\n                    \n                }\n                else {\n                    console.log(\"Erreur lors de la mise à jour de l'utilisateur\")\n                }\n            })\n            \n        }\n        \n    }\n\n    const onSubmit = () => {\n        globalVerify()\n    }\n\n    return(\n        <section className=\"root\">\n                <Header />\n                <HeaderPages headerTitle={headerTitle} headerBreadcrumbs={headerBreadcrumbs}/>\n                <section className=\"admin-container\">\n                    <AdminMenu />\n\n                    <section className=\"admin-content\">\n                        <h4>Edition d'un utilisateur</h4>\n                        <section className=\"user-edit-container\">\n                            <form className=\"admin-user-edit\">\n                                <section className=\"user-edit-informations\">\n                                    <section className=\"user-edit-header\">\n                                        <p><AccountCircleIcon /></p>\n                                        <p className=\"admin-content-section-title\">Informations personnelles</p>\n                                    </section>\n                                    <section className=\"user-edit-informations-content\">\n                                        <FormControl error className={classes.margin}>\n                                            <TextField label=\"Nom\" color=\"primary\" required onChange={(e) => {setLastName(e.target.value)}} error={lastNameError} value={lastName || \"\"} variant=\"filled\"/>\n                                            <FormHelperText>{lastNameErrorText}</FormHelperText>\n                                        </FormControl>\n\n                                        <FormControl error className={classes.margin}>\n                                            <TextField label=\"Prénom\" color=\"primary\"  required onChange={(e) => {setFirstName(e.target.value)}} error={firstNameError} value={firstName || \"\"} variant=\"filled\"/>\n                                            <FormHelperText>{firstNameErrorText}</FormHelperText>\n                                        </FormControl>\n\n                                        <FormControl error className={classes.margin}>\n                                            <TextField label=\"Mot de passe\" color=\"primary\" onChange={(e) => {setPassword(e.target.value)\n                                            e.target.value ? setPasswordUpdated(true) : setPasswordUpdated(false)}} type=\"password\" defaultValue=\"\" variant=\"filled\"/>\n                                        </FormControl>\n\n                                        {displayedSelect}\n                                    </section>\n                                </section>\n                                <section className=\"user-edit-contact\">\n                                    <section className=\"user-edit-header\">\n                                        <p><MailIcon /></p>\n                                        <p className=\"admin-content-section-title\">Contact</p>\n                                    </section>\n                                    <section className=\"user-edit-contact-content\">\n                                        \n                                            <FormControl error className={classes.margin} >\n                                                <TextField label=\"Email\" color=\"primary\" required onChange={(e) => {setEmail(e.target.value)}} error={emailError} type=\"email\" value={email || \"\"} variant=\"filled\"/>\n                                                <FormHelperText>{emailErrorText}</FormHelperText>\n                                            </FormControl>\n\n                                            <FormControl error className={classes.margin}>\n                                                <TextField label=\"Téléphone\" color=\"primary\" required  error={phoneError} type=\"tel\" value={phone || \"\"\n                                                } onChange={(e) => {setPhone(e.target.value)}} variant=\"filled\"/>\n                                                <FormHelperText>{phoneErrorText}</FormHelperText>\n                                            </FormControl>\n\n                                            <FormControl error className={classes.margin}>\n                                                <TextField label=\"Adresse\" color=\"primary\" onChange={(e) => {setAddress(e.target.value)}} value={address || \"\"} variant=\"filled\"/>\n                                            </FormControl>\n\n                                            <FormControl error className={classes.margin}>\n                                                <TextField label=\"Code Postal\" color=\"primary\" onChange={(e) => {setZip(e.target.value)}} value={zip || \"\"} variant=\"filled\"/>\n                                            </FormControl>\n\n                                            <FormControl error className={classes.margin}>\n                                                <TextField label=\"Ville\" color=\"primary\" onChange={(e) => {setCity(e.target.value)}} value={city || \"\"} variant=\"filled\"/>\n                                            </FormControl>\n\n                                            \n                                    </section>\n                                    <Button className=\"admin-user-edit-button\" color=\"primary\" variant=\"contained\" onClick={(e)=>{onSubmit()}}>\n                                                Envoyer\n                                            </Button>\n                                </section>                          \n                            </form>\n                        </section>\n\n                    </section>\n                </section>\n                <Footer />\n        </section>\n    )\n}\n\nexport default AdminUserEdit"]},"metadata":{},"sourceType":"module"}