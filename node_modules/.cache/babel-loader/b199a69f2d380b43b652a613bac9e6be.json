{"ast":null,"code":"const localStorageBasketName = \"lecaille-basket\"; //Récupération du panier dans le local storage\n\nexport const getBasket = () => {\n  return JSON.parse(localStorage.getItem(localStorageBasketName));\n}; //Ajout d'un produit dans le panier\n\nexport const addToBasket = (product, quantity) => {\n  if (parseFloat(quantity) > 0) {\n    let newBasket = [];\n    let basket = getBasket();\n\n    if (basket) {\n      newBasket = basket;\n      let productExistsIndex = newBasket.findIndex(basketProduct => basketProduct.id === product.id);\n\n      if (productExistsIndex !== -1) {\n        console.log(\"existe\");\n        newBasket[productExistsIndex].quantity += parseFloat(quantity);\n      } else {\n        newBasket.push({\n          productId: product.id,\n          quantity: parseFloat(quantity)\n        });\n      }\n    } else {\n      newBasket.push({\n        productId: product.id,\n        quantity: parseFloat(quantity)\n      });\n    }\n\n    localStorage.setItem(localStorageBasketName, JSON.stringify(newBasket));\n  }\n}; //Edition d'un produit du panier\n\nexport const editFromBasket = (id, quantity) => {}; //Suppression d'un produit du panier\n\nexport const deleteFromBasket = id => {\n  let newBasket = [];\n}; //Suppression du panier\n\nexport const clearBasket = () => {\n  localStorage.removeItem(localStorageBasketName);\n};","map":{"version":3,"sources":["/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/src/utils/basket.js"],"names":["localStorageBasketName","getBasket","JSON","parse","localStorage","getItem","addToBasket","product","quantity","parseFloat","newBasket","basket","productExistsIndex","findIndex","basketProduct","id","console","log","push","productId","setItem","stringify","editFromBasket","deleteFromBasket","clearBasket","removeItem"],"mappings":"AAAA,MAAMA,sBAAsB,GAAG,iBAA/B,C,CAEA;;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,SAAOC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBL,sBAArB,CAAX,CAAP;AACH,CAFM,C,CAGP;;AACA,OAAO,MAAMM,WAAW,GAAG,CAACC,OAAD,EAAUC,QAAV,KAAwB;AAC/C,MAAGC,UAAU,CAACD,QAAD,CAAV,GAAuB,CAA1B,EAA4B;AACxB,QAAIE,SAAS,GAAI,EAAjB;AACA,QAAIC,MAAM,GAAGV,SAAS,EAAtB;;AAEA,QAAGU,MAAH,EAAU;AACND,MAAAA,SAAS,GAAGC,MAAZ;AACA,UAAIC,kBAAkB,GAAGF,SAAS,CAACG,SAAV,CAAoBC,aAAa,IAAIA,aAAa,CAACC,EAAd,KAAqBR,OAAO,CAACQ,EAAlE,CAAzB;;AACA,UAAGH,kBAAkB,KAAK,CAAC,CAA3B,EAA6B;AACzBI,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAP,QAAAA,SAAS,CAACE,kBAAD,CAAT,CAA8BJ,QAA9B,IAA0CC,UAAU,CAACD,QAAD,CAApD;AACH,OAHD,MAIK;AACDE,QAAAA,SAAS,CAACQ,IAAV,CAAe;AAACC,UAAAA,SAAS,EAAEZ,OAAO,CAACQ,EAApB;AAAwBP,UAAAA,QAAQ,EAAEC,UAAU,CAACD,QAAD;AAA5C,SAAf;AACH;AACJ,KAVD,MAWK;AACDE,MAAAA,SAAS,CAACQ,IAAV,CAAe;AAACC,QAAAA,SAAS,EAAEZ,OAAO,CAACQ,EAApB;AAAwBP,QAAAA,QAAQ,EAAEC,UAAU,CAACD,QAAD;AAA5C,OAAf;AACH;;AAEDJ,IAAAA,YAAY,CAACgB,OAAb,CAAqBpB,sBAArB,EAA6CE,IAAI,CAACmB,SAAL,CAAeX,SAAf,CAA7C;AACH;AACJ,CAtBM,C,CAwBP;;AACA,OAAO,MAAMY,cAAc,GAAG,CAACP,EAAD,EAAKP,QAAL,KAAkB,CAE/C,CAFM,C,CAIP;;AACA,OAAO,MAAMe,gBAAgB,GAAIR,EAAD,IAAQ;AACpC,MAAIL,SAAS,GAAG,EAAhB;AAEH,CAHM,C,CAKP;;AACA,OAAO,MAAMc,WAAW,GAAG,MAAM;AAC7BpB,EAAAA,YAAY,CAACqB,UAAb,CAAwBzB,sBAAxB;AACH,CAFM","sourcesContent":["const localStorageBasketName = \"lecaille-basket\"\n\n//Récupération du panier dans le local storage\nexport const getBasket = () => {\n    return JSON.parse(localStorage.getItem(localStorageBasketName))\n}\n//Ajout d'un produit dans le panier\nexport const addToBasket = (product, quantity) =>  {\n    if(parseFloat(quantity) > 0){    \n        let newBasket  = []\n        let basket = getBasket()\n        \n        if(basket){\n            newBasket = basket\n            let productExistsIndex = newBasket.findIndex(basketProduct => basketProduct.id === product.id)\n            if(productExistsIndex !== -1){\n                console.log(\"existe\")\n                newBasket[productExistsIndex].quantity += parseFloat(quantity)\n            }\n            else {\n                newBasket.push({productId: product.id, quantity: parseFloat(quantity)})\n            }\n        }\n        else {\n            newBasket.push({productId: product.id, quantity: parseFloat(quantity)})\n        }\n\n        localStorage.setItem(localStorageBasketName, JSON.stringify(newBasket))\n    }\n}\n\n//Edition d'un produit du panier\nexport const editFromBasket = (id, quantity) => {\n\n}\n\n//Suppression d'un produit du panier\nexport const deleteFromBasket = (id) => {\n    let newBasket = []\n\n}\n\n//Suppression du panier\nexport const clearBasket = () => {\n    localStorage.removeItem(localStorageBasketName)\n}\n\n"]},"metadata":{},"sourceType":"module"}