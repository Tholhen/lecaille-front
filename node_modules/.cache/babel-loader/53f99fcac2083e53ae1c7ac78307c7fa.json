{"ast":null,"code":"var _jsxFileName = \"/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/src/containers/admin/adminDailyStand.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { config } from \"../../config/config\"; //Imports des composants de l'UI externes\n\nimport Header from \"../headers/header\";\nimport HeaderPages from \"../headers/headerPages\";\nimport Footer from \"../footer\";\nimport AdminMenu from \"../../components/adminMenu\";\nimport { getDailyStand, getDailyStandDetails, saveDailyStand, saveDailyStandDetail, saveDailyStandDetailPict, deleteDailyStand, updateDailyStand, deleteDailyStandDetails } from \"../../api/dailyStand\"; //Imports de la librairie MaterialUI\n\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from \"@material-ui/styles\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminDailyStand = props => {\n  _s();\n\n  const headerTitle = \"Administration\";\n  const headerBreadcrumbs = [{\n    value: \"Accueil\",\n    link: \"/\"\n  }, {\n    value: \"Administration\",\n    link: \"/admin\"\n  }, {\n    value: \"Etal\",\n    link: null\n  }];\n  const [dailyStand, setDailyStand] = useState({\n    id: \"\",\n    description: \"\",\n    creation_timestamp: \"\"\n  });\n  const [contentAdded, setContentAdded] = useState([]);\n  const [dailyStandItems, setDailyStandItems] = useState([]);\n  const [errorForm, setErrorForm] = useState(false);\n  const [dailyStandItemsDisplayed, setDailyStandItemsDisplayed] = useState([]); //Définition des styles MaterialUI\n\n  const useStyles = makeStyles(theme => ({\n    margin: {\n      margin: theme.spacing(1)\n    },\n    dailyStandDescription: {\n      width: \"90%\",\n      margin: theme.spacing(1)\n    }\n  }));\n  const classes = useStyles();\n\n  const deleteDailyStandItem = (index, id) => {\n    console.log(\"ok\"); //let newArray = dailyStandItemsDisplayed.splice(index, 1)\n    //console.log(newArray)\n    //setDailyStandItemsDisplayed(newArray)\n  }; //Au chargement de la page\n\n\n  useEffect(() => {\n    getDailyStand().then(dailyStandDB => {\n      if (dailyStandDB) {\n        setDailyStand(dailyStandDB);\n        getDailyStandDetails().then(dailyStandItemsDB => {\n          for (let i = 0; i < dailyStandItemsDB.length; i++) {\n            setDailyStandItemsDisplayed(dailyStandItemsDisplayed => [...dailyStandItemsDisplayed, /*#__PURE__*/_jsxDEV(\"article\", {\n              children: [/*#__PURE__*/_jsxDEV(\"section\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: config.dailystand_detail_pict_url + dailyStandItemsDB[i].pict_url,\n                  alt: \"illustration\" + dailyStandItemsDB[i].id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Description : \", dailyStandItemsDB[i].description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 29\n              }, this), console.log(\"test\"), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  deleteDailyStandItem(i, dailyStandItemsDB[i].id);\n                },\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 104\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 29\n              }, this)]\n            }, dailyStandItemsDB[i].id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this)]);\n          }\n        });\n      }\n    });\n  }, []); //Ajout des champs permettant de compléter l'étal du jour\n\n  const addElement = () => {\n    setDailyStandItems(dailyStandItems => [...dailyStandItems, {\n      pict_url: \"\",\n      description: \"\",\n      filePreview: \"\",\n      selectedFile: \"\"\n    }]);\n  }; //A chaque modification de dailyStandItems\n\n\n  useEffect(() => {\n    if (dailyStandItems.length > 0) {\n      let index = contentAdded.length;\n      setContentAdded(contentAdded => [...contentAdded, /*#__PURE__*/_jsxDEV(\"article\", {\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              accept: \"images/*\",\n              style: {\n                display: 'none'\n              },\n              id: \"file-select\" + index,\n              type: \"file\",\n              onChange: e => {\n                let newArr = dailyStandItems;\n                newArr[index].filePreview = URL.createObjectURL(e.target.files[0]);\n                newArr[index].selectedFile = e.target.files[0];\n                setDailyStandItems(newArr);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"file-select\" + index,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                component: \"span\",\n                children: \"Ajouter une photo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), dailyStandItems[index].selectedFile && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: dailyStandItems[index].selectedFile.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 65\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Description\",\n              variant: \"filled\",\n              onChange: e => {\n                dailyStandItems[index].description = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]);\n    }\n  }, [dailyStandItems]); //Initialisation d'un nouveau étal\n\n  const newDailyStand = () => {\n    deleteDailyStand();\n    deleteDailyStandDetails();\n    setDailyStand({\n      id: \"\",\n      description: \"\",\n      creation_timestamp: \"\"\n    });\n    setDailyStandItemsDisplayed([]);\n  }; //Fonction d'enregistrement de l'étal\n\n\n  const handleSave = () => {\n    //Vérification des données avant enregistrement\n    let conformFiles = false;\n\n    for (let i = 0; i < dailyStandItems.length; i++) {\n      if (dailyStandItems[i].selectedFile) {\n        conformFiles = true;\n      }\n    }\n\n    if (!conformFiles && !dailyStand.description && dailyStandItemsDisplayed.length === 0) {\n      setErrorForm(true);\n    } else {\n      setErrorForm(false);\n      let dailyStandDatas = {\n        description: dailyStand.description\n      };\n\n      if (dailyStand.id === \"\") {\n        saveDailyStand(dailyStandDatas).then(responseDailyStand => {\n          setDailyStand({ ...dailyStand,\n            \"id\": responseDailyStand.data.result.insertId\n          });\n\n          if (conformFiles) {\n            for (let i = 0; i < dailyStandItems.length; i++) {\n              if (dailyStandItems[i].selectedFile) {\n                saveDailyStandDetailPict(dailyStandItems[i].selectedFile).then(responseDailyStandDetailPict => {\n                  let dailyStandDetailDatas = {\n                    description: dailyStandItems[i].description,\n                    pict_url: responseDailyStandDetailPict.data.url || \"\",\n                    id_daily_stand: responseDailyStand.data.result.insertId\n                  };\n                  saveDailyStandDetail(dailyStandDetailDatas);\n                });\n              }\n            }\n          }\n        });\n      } else {\n        updateDailyStand(dailyStandDatas).then(response => {\n          for (let i = 0; i < dailyStandItems.length; i++) {\n            if (dailyStandItems[i].selectedFile) {\n              saveDailyStandDetailPict(dailyStandItems[i].selectedFile).then(responseDailyStandDetailPict => {\n                let dailyStandDetailDatas = {\n                  description: dailyStandItems[i].description,\n                  pict_url: responseDailyStandDetailPict.data.url || \"\",\n                  id_daily_stand: dailyStand.id\n                };\n                saveDailyStandDetail(dailyStandDetailDatas);\n              });\n            }\n          }\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(HeaderPages, {\n      headerTitle: headerTitle,\n      headerBreadcrumbs: headerBreadcrumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"admin-container\",\n      children: [/*#__PURE__*/_jsxDEV(AdminMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"admin-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Gestion de l'\\xE9tal du jour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"admin-dailystand-interractions\",\n          children: [errorForm && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Veuillez saisir une description de l'\\xE9tal et/ou au moins une image d'illustration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 43\n          }, this), dailyStand.id !== \"\" && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            onClick: e => {\n              newDailyStand();\n            },\n            className: classes.margin,\n            children: \"Nouvel Etal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 54\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            onClick: e => {\n              addElement();\n            },\n            className: classes.margin,\n            children: \"Ajouter un \\xE9l\\xE9ment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: e => handleSave(),\n            className: classes.margin,\n            children: \"Enregistrer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"admin-dailystand-content\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.dailyStandDescription,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Description de l'\\xE9tal\",\n              multiline: true,\n              rows: 8,\n              variant: \"filled\",\n              onChange: e => {\n                setDailyStand({ ...dailyStand,\n                  \"description\": e.target.value\n                });\n              },\n              value: dailyStand.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this), contentAdded.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"admin-dailystand-toadd\",\n            children: contentAdded\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 57\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"admin-dailystand-items\",\n            children: dailyStandItemsDisplayed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdminDailyStand, \"naV4EKfDXywbYxjVW8JGw5d4jbM=\", true);\n\n_c = AdminDailyStand;\nexport default AdminDailyStand;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminDailyStand\");","map":{"version":3,"sources":["/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/src/containers/admin/adminDailyStand.js"],"names":["React","useState","useEffect","config","Header","HeaderPages","Footer","AdminMenu","getDailyStand","getDailyStandDetails","saveDailyStand","saveDailyStandDetail","saveDailyStandDetailPict","deleteDailyStand","updateDailyStand","deleteDailyStandDetails","Button","TextField","FormControl","makeStyles","DeleteIcon","AdminDailyStand","props","headerTitle","headerBreadcrumbs","value","link","dailyStand","setDailyStand","id","description","creation_timestamp","contentAdded","setContentAdded","dailyStandItems","setDailyStandItems","errorForm","setErrorForm","dailyStandItemsDisplayed","setDailyStandItemsDisplayed","useStyles","theme","margin","spacing","dailyStandDescription","width","classes","deleteDailyStandItem","index","console","log","then","dailyStandDB","dailyStandItemsDB","i","length","dailystand_detail_pict_url","pict_url","addElement","filePreview","selectedFile","display","e","newArr","URL","createObjectURL","target","files","name","newDailyStand","handleSave","conformFiles","dailyStandDatas","responseDailyStand","data","result","insertId","responseDailyStandDetailPict","dailyStandDetailDatas","url","id_daily_stand","response"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {config} from \"../../config/config\"\n\n//Imports des composants de l'UI externes\nimport Header from \"../headers/header\"\nimport HeaderPages from \"../headers/headerPages\"\nimport Footer from \"../footer\"\nimport AdminMenu from \"../../components/adminMenu\"\n\nimport {getDailyStand, getDailyStandDetails, saveDailyStand, saveDailyStandDetail, saveDailyStandDetailPict, deleteDailyStand, updateDailyStand, deleteDailyStandDetails} from \"../../api/dailyStand\"\n\n//Imports de la librairie MaterialUI\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from \"@material-ui/styles\";\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nconst AdminDailyStand = (props) => {\n\n    const headerTitle = \"Administration\"\n    const headerBreadcrumbs = [{value: \"Accueil\", link:\"/\"},{value: \"Administration\", link:\"/admin\"}, {value: \"Etal\", link:null}]\n\n    const [dailyStand, setDailyStand] = useState({id:\"\", description:\"\", creation_timestamp:\"\"})\n    const [contentAdded, setContentAdded] = useState([])\n    const [dailyStandItems, setDailyStandItems] = useState([])\n    const [errorForm, setErrorForm] = useState(false)\n    const [dailyStandItemsDisplayed, setDailyStandItemsDisplayed] = useState([])\n\n\n    //Définition des styles MaterialUI\n    const useStyles = makeStyles((theme) => ({\n        margin:{\n            margin: theme.spacing(1),\n        },\n        dailyStandDescription:{\n            width:\"90%\",\n            margin: theme.spacing(1)\n        }\n        }));\n        \n    const classes = useStyles();\n\n    const deleteDailyStandItem = (index, id) => {\n        console.log(\"ok\")\n        //let newArray = dailyStandItemsDisplayed.splice(index, 1)\n        //console.log(newArray)\n        //setDailyStandItemsDisplayed(newArray)\n    }\n\n    //Au chargement de la page\n    useEffect(() => {\n        getDailyStand()\n        .then(dailyStandDB => {\n            if(dailyStandDB){\n                setDailyStand(dailyStandDB)\n                getDailyStandDetails()\n                .then(dailyStandItemsDB => {\n                    for(let i = 0; i < dailyStandItemsDB.length; i++){\n                        setDailyStandItemsDisplayed(dailyStandItemsDisplayed => [...dailyStandItemsDisplayed,\n                        <article key={dailyStandItemsDB[i].id}>\n                            <section>\n                                <img src={config.dailystand_detail_pict_url + dailyStandItemsDB[i].pict_url} alt={\"illustration\"+dailyStandItemsDB[i].id}></img>\n                            </section>\n                            \n                            <p>Description : {dailyStandItemsDB[i].description}</p>\n                            {console.log(\"test\")}\n                            <Button onClick={() => {deleteDailyStandItem(i, dailyStandItemsDB[i].id)}}><DeleteIcon /></Button>\n                        </article>])\n                    }\n                    \n                })\n            }\n        })\n    }, [])\n\n    //Ajout des champs permettant de compléter l'étal du jour\n    const addElement = () => {\n        setDailyStandItems(dailyStandItems => [...dailyStandItems,\n            {pict_url:\"\",\n            description: \"\",\n            filePreview: \"\",\n            selectedFile: \"\"}])\n    }\n\n    //A chaque modification de dailyStandItems\n    useEffect(() => {\n        if(dailyStandItems.length > 0){\n            let index = contentAdded.length\n            setContentAdded(contentAdded => [...contentAdded, \n                <article key={index}>\n                    <section>\n                        <FormControl>\n                            <input \n                            accept=\"images/*\"\n                            style={{display: 'none'}}\n                            id={\"file-select\"+index}\n                            type=\"file\"\n                            onChange={(e) => {\n                                let newArr = dailyStandItems\n                                newArr[index].filePreview = URL.createObjectURL(e.target.files[0])\n                                newArr[index].selectedFile = e.target.files[0]\n                                setDailyStandItems(newArr)}}\n                            />\n                            <label htmlFor={\"file-select\"+index}>\n                                <Button color=\"primary\" component=\"span\">Ajouter une photo</Button>\n                            </label>\n                        </FormControl>\n                        {dailyStandItems[index].selectedFile && <p>{dailyStandItems[index].selectedFile.name}</p>}\n                        \n                    </section>\n                    <section>\n                        <FormControl>\n                            <TextField label=\"Description\" variant=\"filled\" onChange={(e) => {dailyStandItems[index].description = e.target.value}} />\n                        </FormControl>\n                    </section>\n                </article>\n            ])\n        }\n        \n    }, [dailyStandItems])\n\n    \n\n    //Initialisation d'un nouveau étal\n    const newDailyStand = () => {\n        deleteDailyStand()\n        deleteDailyStandDetails()\n        setDailyStand({id:\"\", description:\"\", creation_timestamp:\"\"})\n        setDailyStandItemsDisplayed([])\n    }\n\n    //Fonction d'enregistrement de l'étal\n    const handleSave = () => {\n\n        //Vérification des données avant enregistrement\n        let conformFiles = false\n        for(let i = 0; i < dailyStandItems.length; i++){\n            if(dailyStandItems[i].selectedFile){\n                conformFiles = true\n            }\n        }\n\n        if(!conformFiles && !dailyStand.description && dailyStandItemsDisplayed.length === 0){\n            setErrorForm(true)\n        } else {\n            setErrorForm(false)\n            let dailyStandDatas = {description: dailyStand.description}\n            if(dailyStand.id === \"\"){\n                saveDailyStand(dailyStandDatas)\n                .then(responseDailyStand => {\n                    setDailyStand({...dailyStand, \"id\": responseDailyStand.data.result.insertId})\n                    if(conformFiles){\n                        for(let i = 0; i < dailyStandItems.length; i++){\n                            if(dailyStandItems[i].selectedFile){\n                                saveDailyStandDetailPict(dailyStandItems[i].selectedFile)\n                                .then(responseDailyStandDetailPict => {\n                                    let dailyStandDetailDatas = {\n                                        description: dailyStandItems[i].description,\n                                        pict_url: responseDailyStandDetailPict.data.url || \"\",\n                                        id_daily_stand: responseDailyStand.data.result.insertId\n                                    }\n                                    saveDailyStandDetail(dailyStandDetailDatas)\n                                })\n                            }\n                        }\n                    }\n                    \n                })\n            }\n            else {\n                updateDailyStand(dailyStandDatas)\n                .then(response => {\n                    for(let i = 0; i < dailyStandItems.length; i++){\n                        if(dailyStandItems[i].selectedFile){\n                            saveDailyStandDetailPict(dailyStandItems[i].selectedFile)\n                            .then(responseDailyStandDetailPict => {\n                                let dailyStandDetailDatas = {\n                                    description: dailyStandItems[i].description,\n                                    pict_url: responseDailyStandDetailPict.data.url  || \"\",\n                                    id_daily_stand: dailyStand.id\n                                }\n                                saveDailyStandDetail(dailyStandDetailDatas)\n                            })\n                        }\n                    }\n                })\n            }\n        }\n        \n    }\n\n    return(\n        <section className=\"root\">\n                <Header />\n                <HeaderPages headerTitle={headerTitle} headerBreadcrumbs={headerBreadcrumbs}/>\n                <section className=\"admin-container\">\n                    <AdminMenu />\n \n                    <section className=\"admin-content\">\n                        <h4>Gestion de l'étal du jour</h4>\n                        <section className=\"admin-dailystand-interractions\">\n                            {errorForm && <p>Veuillez saisir une description de l'étal et/ou au moins une image d'illustration</p>}\n                            {dailyStand.id !== \"\" && <Button variant=\"outlined\" color=\"primary\" onClick={(e) => {newDailyStand()}} className={classes.margin}>Nouvel Etal</Button>}\n                            <Button variant=\"outlined\" color=\"primary\" onClick={(e) => {addElement()}} className={classes.margin}>Ajouter un élément</Button>\n                            <Button variant=\"contained\" color=\"primary\" onClick={(e) => handleSave()} className={classes.margin}>Enregistrer</Button>\n                        </section>\n                        <section className=\"admin-dailystand-content\">\n                            <FormControl className={classes.dailyStandDescription}>\n                                <TextField label=\"Description de l'étal\" multiline rows={8} variant=\"filled\" \n                                onChange={(e) => {setDailyStand({...dailyStand, \"description\": e.target.value})}}\n                                value={dailyStand.description} />\n                            </FormControl>\n                            {contentAdded.length > 0 && <section className=\"admin-dailystand-toadd\">\n                                {contentAdded}\n                            </section>}\n                            \n                            <section className=\"admin-dailystand-items\">\n                                {dailyStandItemsDisplayed}\n                            </section>\n                        </section>\n                    </section>\n                </section>\n                <Footer />\n        </section>\n    )\n\n}\n\nexport default AdminDailyStand"]},"metadata":{},"sourceType":"module"}