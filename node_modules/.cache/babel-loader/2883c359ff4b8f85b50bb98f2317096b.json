{"ast":null,"code":"const localStorageBasketName = \"lecaille-basket\"; //Ajout d'un produit dans le panier\n\nexport const addToBasket = (product, quantity) => {\n  if (parseFloat(quantity) > 0) {\n    console.log(\"ajout du produit au panier\");\n    let newBasket = [];\n    let basket = JSON.parse(localStorage.getItem(localStorageBasketName));\n\n    if (basket) {\n      newBasket = basket;\n      /*\n      let productExists = newBasket.find(basketProduct => basketProduct.product.id === product.id)\n      if(productExists){\n          productExists.quantity += parseFloat(quantity)\n          newBasket.push(productExists)\n      }\n      else(\n          newBasket.push({product: product, quantity: parseFloat(quantity)})\n      )*/\n\n      let productExistsIndex = newBasket.findIndex(basketProduct => basketProduct.product.id === product.id);\n\n      if (productExistsIndex !== -1) {\n        console.log(\"existe\");\n        newBasket[productExistsIndex].quantity += parseFloat(quantity);\n      } else {\n        newBasket.push({\n          product: product,\n          quantity: parseFloat(quantity)\n        });\n      }\n    } else {\n      newBasket.push({\n        product: product,\n        quantity: parseFloat(quantity)\n      });\n    }\n\n    localStorage.setItem(localStorageBasketName, JSON.stringify(newBasket));\n  }\n}; //Edition d'un produit du panier\n\nexport const editFromBasket = (id, quantity) => {}; //Suppression d'un produit du panier\n\nexport const deleteFromBasket = id => {\n  let newBasket = [];\n}; //Suppression du panier\n\nexport const clearBasket = () => {};\nexport const getBasket = () => {};","map":{"version":3,"sources":["/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/src/utils/basket.js"],"names":["localStorageBasketName","addToBasket","product","quantity","parseFloat","console","log","newBasket","basket","JSON","parse","localStorage","getItem","productExistsIndex","findIndex","basketProduct","id","push","setItem","stringify","editFromBasket","deleteFromBasket","clearBasket","getBasket"],"mappings":"AAAA,MAAMA,sBAAsB,GAAG,iBAA/B,C,CAEA;;AACA,OAAO,MAAMC,WAAW,GAAG,CAACC,OAAD,EAAUC,QAAV,KAAwB;AAC/C,MAAGC,UAAU,CAACD,QAAD,CAAV,GAAuB,CAA1B,EAA4B;AACxBE,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AAEA,QAAIC,SAAS,GAAI,EAAjB;AACA,QAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBZ,sBAArB,CAAX,CAAb;;AAGA,QAAGQ,MAAH,EAAU;AACND,MAAAA,SAAS,GAAGC,MAAZ;AACA;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACY,UAAIK,kBAAkB,GAAGN,SAAS,CAACO,SAAV,CAAoBC,aAAa,IAAIA,aAAa,CAACb,OAAd,CAAsBc,EAAtB,KAA6Bd,OAAO,CAACc,EAA1E,CAAzB;;AACA,UAAGH,kBAAkB,KAAK,CAAC,CAA3B,EAA6B;AACzBR,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAC,QAAAA,SAAS,CAACM,kBAAD,CAAT,CAA8BV,QAA9B,IAA0CC,UAAU,CAACD,QAAD,CAApD;AACH,OAHD,MAIK;AACDI,QAAAA,SAAS,CAACU,IAAV,CAAe;AAACf,UAAAA,OAAO,EAAEA,OAAV;AAAmBC,UAAAA,QAAQ,EAAEC,UAAU,CAACD,QAAD;AAAvC,SAAf;AACH;AACJ,KAnBD,MAoBK;AACDI,MAAAA,SAAS,CAACU,IAAV,CAAe;AAACf,QAAAA,OAAO,EAAEA,OAAV;AAAmBC,QAAAA,QAAQ,EAAEC,UAAU,CAACD,QAAD;AAAvC,OAAf;AACH;;AAEDQ,IAAAA,YAAY,CAACO,OAAb,CAAqBlB,sBAArB,EAA6CS,IAAI,CAACU,SAAL,CAAeZ,SAAf,CAA7C;AACH;AACJ,CAlCM,C,CAoCP;;AACA,OAAO,MAAMa,cAAc,GAAG,CAACJ,EAAD,EAAKb,QAAL,KAAkB,CAE/C,CAFM,C,CAIP;;AACA,OAAO,MAAMkB,gBAAgB,GAAIL,EAAD,IAAQ;AACpC,MAAIT,SAAS,GAAG,EAAhB;AAEH,CAHM,C,CAKP;;AACA,OAAO,MAAMe,WAAW,GAAG,MAAM,CAEhC,CAFM;AAIP,OAAO,MAAMC,SAAS,GAAG,MAAM,CAE9B,CAFM","sourcesContent":["const localStorageBasketName = \"lecaille-basket\"\n\n//Ajout d'un produit dans le panier\nexport const addToBasket = (product, quantity) =>  {\n    if(parseFloat(quantity) > 0){\n        console.log(\"ajout du produit au panier\")\n    \n        let newBasket  = []\n        let basket = JSON.parse(localStorage.getItem(localStorageBasketName))\n\n        \n        if(basket){\n            newBasket = basket\n            /*\n            let productExists = newBasket.find(basketProduct => basketProduct.product.id === product.id)\n            if(productExists){\n                productExists.quantity += parseFloat(quantity)\n                newBasket.push(productExists)\n            }\n            else(\n                newBasket.push({product: product, quantity: parseFloat(quantity)})\n            )*/\n            let productExistsIndex = newBasket.findIndex(basketProduct => basketProduct.product.id === product.id)\n            if(productExistsIndex !== -1){\n                console.log(\"existe\")\n                newBasket[productExistsIndex].quantity += parseFloat(quantity)\n            }\n            else {\n                newBasket.push({product: product, quantity: parseFloat(quantity)})\n            }\n        }\n        else {\n            newBasket.push({product: product, quantity: parseFloat(quantity)})\n        }\n\n        localStorage.setItem(localStorageBasketName, JSON.stringify(newBasket))\n    }\n}\n\n//Edition d'un produit du panier\nexport const editFromBasket = (id, quantity) => {\n\n}\n\n//Suppression d'un produit du panier\nexport const deleteFromBasket = (id) => {\n    let newBasket = []\n\n}\n\n//Suppression du panier\nexport const clearBasket = () => {\n\n}\n\nexport const getBasket = () => {\n    \n}"]},"metadata":{},"sourceType":"module"}