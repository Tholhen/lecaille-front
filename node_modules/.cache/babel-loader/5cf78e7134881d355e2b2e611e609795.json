{"ast":null,"code":"var _jsxFileName = \"/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/src/components/loginPopUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { loginUser } from \"../api/user\";\nimport MaskedInput from 'react-text-mask';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles, makeStyles } from \"@material-ui/styles\";\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPopUp = props => {\n  _s();\n\n  //Définition des variables\n  const [firstName, setFirstName] = useState(\"\");\n  const [firstNameError, setFirstNameError] = useState(false);\n  const [firstNameErrorText, setFirstNameErrorText] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [lastNameError, setLastNameError] = useState(false);\n  const [lastNameErrorText, setLastNameErrorText] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [emailErrorText, setEmailErrorText] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(false);\n  const [passwordErrorText, setPasswordErrorText] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(false);\n  const [phoneErrorText, setPhoneErrorText] = useState(\"\");\n  const [autoFocusPhone, setAutoFocusPhone] = useState(true);\n  const [address, setAddress] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [city, setCity] = useState(\"\"); // RegEx de vérification du mail\n\n  let emailRegEx = /^[a-z]+([\\.\\-_]?[a-z0-9]+)*@([a-z]{3,})+(\\.[a-z]{2,3})+$/;\n\n  const globalVerify = () => {\n    if (!email) {\n      setEmailError(true);\n      setEmailErrorText(\"Adresse email non renseignée\");\n    } else {\n      if (!email.match(emailRegEx)) {\n        setEmailError(true);\n        setEmailErrorText(\"Adresse email non valide\");\n      } else {\n        setEmailError(false);\n        setEmailErrorText(\"\");\n      }\n    }\n\n    if (!password) {\n      setPasswordError(true);\n      setPasswordErrorText(\"Mot de passe non reseigné\");\n    } else {\n      setPasswordError(false);\n      setPasswordErrorText(\"\");\n    }\n\n    if (email && password && email.match(emailRegEx)) {\n      let datas = {\n        email: email,\n        password: password\n      };\n      loginUser(datas).then(response => {\n        if (response.data.status === 404) {\n          setEmailErrorText(\"Utilisateur ineexistant\");\n          setEmailError(true);\n        }\n      });\n    }\n  };\n\n  const onSubmit = () => {\n    /*verifyFirstName()\n    verifyLastName()\n    verifyMail()\n    verifyPhone()\n    console.log(\"firstNameError\", firstNameError)*/\n    globalVerify(); //globalVerify()\n\n    /*\n    let datas = {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        password: password,\n        phone: phone,\n        address: address,\n        zip: zip,\n        city: city\n    }    \n     saveUser(datas)\n    .then(response => {\n        console.log(response)\n    })*/\n  }; //Fonction de création du masque pour le numéro de téléphone\n\n\n  function PhoneNumberMask(props) {\n    const {\n      inputRef,\n      ...other\n    } = props;\n    return /*#__PURE__*/_jsxDEV(MaskedInput, { ...other,\n      value: phone,\n      mask: [/[0-9]/, /\\d/, \".\", /\\d/, /\\d/, \".\", /\\d/, /\\d/, \".\", /\\d/, /\\d/, \".\", /\\d/, /\\d/],\n      placeholderChar: '\\u2000'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: props.opened,\n    onClose: e => {\n      props.closeRegisterForm();\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"S'enregistrer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"register-form\",\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          error: true,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Nom\",\n            color: \"primary\",\n            className: \"register-form-input\",\n            required: true,\n            onChange: e => {\n              setLastName(e.target.value);\n            },\n            error: lastNameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: lastNameErrorText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          error: true,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Pr\\xE9nom\",\n            color: \"primary\",\n            className: \"register-form-input\",\n            required: true,\n            onChange: e => {\n              setFirstName(e.target.value);\n            },\n            error: firstNameError,\n            value: firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: firstNameErrorText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          error: true,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Email\",\n            color: \"primary\",\n            className: \"register-form-input\",\n            required: true,\n            onChange: e => {\n              setEmail(e.target.value);\n            },\n            error: emailError,\n            type: \"email\",\n            value: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: emailErrorText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          error: true,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Mot de passe\",\n            color: \"primary\",\n            className: \"register-form-input\",\n            required: true,\n            onChange: e => {\n              setPassword(e.target.value);\n            },\n            error: passwordError,\n            type: \"password\",\n            value: password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: passwordErrorText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          error: true,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"T\\xE9l\\xE9phone\",\n            color: \"primary\",\n            className: \"register-form-input\",\n            required: true,\n            error: phoneError,\n            type: \"tel\",\n            onChange: e => {\n              setPhone(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: phoneErrorText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          error: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Adresse\",\n            color: \"primary\",\n            className: \"register-form-input\",\n            onChange: e => {\n              setAddress(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          error: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Code Postal\",\n            color: \"primary\",\n            className: \"register-form-input\",\n            onChange: e => {\n              setZip(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          error: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Ville\",\n            color: \"primary\",\n            className: \"register-form-input\",\n            onChange: e => {\n              setCity(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: e => {\n          props.closeRegisterForm();\n        },\n        color: \"primary\",\n        children: \"Annuler\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: e => {\n          onSubmit();\n        },\n        color: \"primary\",\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginPopUp, \"jioM4NJUcAP+Qeyj0yeqbmpXjRM=\");\n\n_c = LoginPopUp;\nexport default LoginPopUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPopUp\");","map":{"version":3,"sources":["/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/src/components/loginPopUp.js"],"names":["React","useState","useEffect","loginUser","MaskedInput","Dialog","DialogActions","DialogContent","DialogTitle","Button","TextField","withStyles","makeStyles","FormHelperText","FormControl","LoginPopUp","props","firstName","setFirstName","firstNameError","setFirstNameError","firstNameErrorText","setFirstNameErrorText","lastName","setLastName","lastNameError","setLastNameError","lastNameErrorText","setLastNameErrorText","email","setEmail","emailError","setEmailError","emailErrorText","setEmailErrorText","password","setPassword","passwordError","setPasswordError","passwordErrorText","setPasswordErrorText","phone","setPhone","phoneError","setPhoneError","phoneErrorText","setPhoneErrorText","autoFocusPhone","setAutoFocusPhone","address","setAddress","zip","setZip","city","setCity","emailRegEx","globalVerify","match","datas","then","response","data","status","onSubmit","PhoneNumberMask","inputRef","other","opened","e","closeRegisterForm","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {loginUser} from \"../api/user\"\n\nimport MaskedInput from 'react-text-mask';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles, makeStyles } from \"@material-ui/styles\";\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst LoginPopUp = (props) => {\n\n    //Définition des variables\n    const [firstName, setFirstName] = useState(\"\")\n    const [firstNameError, setFirstNameError] = useState(false)\n    const [firstNameErrorText, setFirstNameErrorText] = useState(\"\")\n\n    const [lastName, setLastName] = useState(\"\")\n    const [lastNameError, setLastNameError] = useState(false)\n    const [lastNameErrorText, setLastNameErrorText] = useState(\"\")\n\n    const [email, setEmail] = useState(\"\")\n    const [emailError, setEmailError] = useState(\"\")\n    const [emailErrorText, setEmailErrorText] = useState(\"\")\n\n    const [password, setPassword] = useState(\"\")\n    const [passwordError, setPasswordError] = useState(false)\n    const [passwordErrorText, setPasswordErrorText] = useState(\"\")\n\n    const [phone, setPhone] = useState(\"\")\n    const [phoneError, setPhoneError] = useState(false)\n    const [phoneErrorText, setPhoneErrorText] = useState(\"\")\n    const [autoFocusPhone, setAutoFocusPhone] = useState(true)\n\n    const [address, setAddress] = useState(\"\")\n    const [zip, setZip] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n\n    // RegEx de vérification du mail\n    let emailRegEx = /^[a-z]+([\\.\\-_]?[a-z0-9]+)*@([a-z]{3,})+(\\.[a-z]{2,3})+$/\n\n    const globalVerify = () => {\n\n            if(!email){\n                setEmailError(true)\n                setEmailErrorText(\"Adresse email non renseignée\")\n            }\n            else {\n                if(!email.match(emailRegEx)){\n                    setEmailError(true)\n                    setEmailErrorText(\"Adresse email non valide\")\n                }\n                else {\n                    setEmailError(false)\n                    setEmailErrorText(\"\")\n                }\n            }\n            if(!password){\n                setPasswordError(true)\n                setPasswordErrorText(\"Mot de passe non reseigné\")\n            }\n            else {\n                setPasswordError(false)\n                setPasswordErrorText(\"\")\n            }\n            \n            if(email  && password && email.match(emailRegEx)){\n                let datas = {\n                    email: email,\n                    password: password\n                }    \n                \n                loginUser(datas)\n                .then(response => {\n                    if(response.data.status === 404){\n                        setEmailErrorText(\"Utilisateur ineexistant\")\n                        setEmailError(true)\n                    }\n                })\n                \n            }\n            \n    }\n\n    const onSubmit = () =>{\n        /*verifyFirstName()\n        verifyLastName()\n        verifyMail()\n        verifyPhone()\n        console.log(\"firstNameError\", firstNameError)*/\n        globalVerify()\n        //globalVerify()\n        /*\n        let datas = {\n            firstName: firstName,\n            lastName: lastName,\n            email: email,\n            password: password,\n            phone: phone,\n            address: address,\n            zip: zip,\n            city: city\n        }    \n\n        saveUser(datas)\n        .then(response => {\n            console.log(response)\n        })*/\n        \n        \n        \n    }\n\n    //Fonction de création du masque pour le numéro de téléphone\n    function PhoneNumberMask(props) {\n        const { inputRef, ...other } = props;\n      \n        return (\n          <MaskedInput\n            {...other}\n            value={phone}\n            mask={[/[0-9]/, /\\d/,\".\", /\\d/, /\\d/,\".\", /\\d/, /\\d/,\".\",/\\d/, /\\d/,\".\",/\\d/, /\\d/]}\n            placeholderChar={'\\u2000'}\n            \n          />\n        );\n      }\n\n\n    return(\n        <Dialog\n            open={props.opened}\n            onClose={(e) => {props.closeRegisterForm()}}\n        >\n            <DialogTitle>S'enregistrer</DialogTitle>\n            <DialogContent>\n            <form className=\"register-form\" autoComplete=\"off\">\n                <FormControl error>\n                    <TextField label=\"Nom\" color=\"primary\" className=\"register-form-input\" required onChange={(e) => {setLastName(e.target.value)}} error={lastNameError} />\n                    <FormHelperText>{lastNameErrorText}</FormHelperText>\n                </FormControl>\n\n                <FormControl error>\n                    <TextField label=\"Prénom\" color=\"primary\" className=\"register-form-input\" required onChange={(e) => {setFirstName(e.target.value)}} error={firstNameError} value={firstName}/>\n                    <FormHelperText>{firstNameErrorText}</FormHelperText>\n                </FormControl>\n\n                <FormControl error>\n                    <TextField label=\"Email\" color=\"primary\" className=\"register-form-input\" required onChange={(e) => {setEmail(e.target.value)}} error={emailError} type=\"email\" value={email}/>\n                    <FormHelperText>{emailErrorText}</FormHelperText>\n                </FormControl>\n\n                <FormControl error>\n                    <TextField label=\"Mot de passe\" color=\"primary\" className=\"register-form-input\" required onChange={(e) => {setPassword(e.target.value)}} error={passwordError} type=\"password\" value={password}/>\n                    <FormHelperText>{passwordErrorText}</FormHelperText>\n                </FormControl>\n\n                <FormControl error>\n                    {/*<TextField label=\"Téléphone\" color=\"primary\" className=\"register-form-input\" required onChange={(e) => {setPhone(e.target.value)}} error={phoneError} type=\"tel\"/>\n                    <TextField InputProps={{ inputComponent: PhoneNumberMask }} label=\"Téléphone\" color=\"primary\" className=\"register-form-input\" required  error={phoneError} type=\"tel\"  onChange={setPhoneNumber} autoFocus={autoFocusPhone}/>*/}\n\n                    <TextField label=\"Téléphone\" color=\"primary\" className=\"register-form-input\" required  error={phoneError} type=\"tel\"  onChange={(e) => {setPhone(e.target.value)}} />\n                    \n                    <FormHelperText>{phoneErrorText}</FormHelperText>\n                </FormControl>\n\n                <FormControl error>\n                    <TextField label=\"Adresse\" color=\"primary\" className=\"register-form-input\" onChange={(e) => {setAddress(e.target.value)}} />\n                </FormControl>\n\n                <FormControl error>\n                    <TextField label=\"Code Postal\" color=\"primary\" className=\"register-form-input\" onChange={(e) => {setZip(e.target.value)}} />\n                </FormControl>\n\n                <FormControl error>\n                    <TextField label=\"Ville\" color=\"primary\" className=\"register-form-input\" onChange={(e) => {setCity(e.target.value)}} />\n                </FormControl>\n            </form>\n            </DialogContent>\n            <DialogActions>\n            <Button onClick={(e) => {props.closeRegisterForm()}} color=\"primary\">\n                Annuler\n            </Button>\n            <Button onClick={(e) => {onSubmit()}} color=\"primary\">\n                Envoyer\n            </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default LoginPopUp"]},"metadata":{},"sourceType":"module"}