{"ast":null,"code":"import axios from \"axios\";\nimport { config } from \"../config\";\nimport tokenConfig from \"../tokenConfig\"; //Enregistrement d'un utilisateur\n\nexport const saveUser = datas => {\n  return axios.post(config.api_url + \"/user/register\", datas, {\n    headers: {\n      \"x-access-token\": localStorage.getItem(tokenConfig.token.name)\n    }\n  }).then(response => {\n    return response;\n  }).catch(err => {\n    return err;\n  });\n}; //Connexion d'un utilisateur\n\nexport const loginUser = datas => {\n  return axios.post(config.api_url + \"/user/login\", datas).then(response => {\n    return response;\n  }).catch(err => {\n    return err;\n  });\n}; //Récupération de tous les utilisateurs\n\nexport const getAllUsers = () => {\n  return axios.get(config.api_url + \"/user/all\", {\n    headers: {\n      \"x-access-token\": localStorage.getItem(tokenConfig.token.name)\n    }\n  }).then(response => {\n    return response;\n  }).catch(err => {\n    console.log(err);\n  });\n}; //Récupération d'un utilisateur\n\nexport const getOneUser = id => {\n  return axios.get(config.api_url + \"/users/\" + id, {\n    headers: {\n      \"x-access-token\": token\n    }\n  }).then(response => {\n    return response.data.user[0];\n  }).catch(err => console.log(err));\n}; //Mise à jour d'un utilisateur\n\nexport const updateUser = (datas, id) => {\n  return axios.put(config.api_url + \"/users/update/\" + id, datas, {\n    headers: {\n      \"x-access-token\": token\n    }\n  }).then(response => {\n    return response;\n  }).catch(err => console.log(\"err\", err));\n}; //Mise à jour du mot de passe de l'utilisateur\n\nexport const updatePassword = (datas, id) => {\n  return axios.put(config.api_url + \"/users/update/password/\" + id, datas, {\n    headers: {\n      \"x-access-token\": token\n    }\n  }).then(response => {\n    return response;\n  }).catch(err => console.log(err));\n}; //Mise à jour du rôle de l'utilisateur\n\nexport const updateUserRole = (datas, id) => {\n  return axios.put(config.api_url + \"/users/update/role/\" + id, datas, {\n    headers: {\n      \"x-access-token\": token\n    }\n  }).then(response => {\n    return response;\n  }).catch(err => console.log(err));\n}; //Récupération de tous les roles\n\nexport const getAllRoles = () => {\n  return axios.get(config.api_url + \"/users/roles/all\", {\n    headers: {\n      \"x-access-token\": token\n    }\n  }).then(response => {\n    return response;\n  }).catch(err => console.log(err));\n}; //Suppression d'un utilisateur\n\nexport const deleteUser = id => {\n  return axios.delete(config.api_url + \"/users/delete/\" + id, {\n    headers: {\n      \"x-access-token\": token\n    }\n  }).then(response => {\n    return response;\n  }).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"sources":["/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/src/api/user.js"],"names":["axios","config","tokenConfig","saveUser","datas","post","api_url","headers","localStorage","getItem","token","name","then","response","catch","err","loginUser","getAllUsers","get","console","log","getOneUser","id","data","user","updateUser","put","updatePassword","updateUserRole","getAllRoles","deleteUser","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport {config} from \"../config\"\nimport tokenConfig from \"../tokenConfig\"\n\n//Enregistrement d'un utilisateur\nexport const saveUser = (datas) => {\n\n    return axios.post(config.api_url + \"/user/register\", datas, {headers: {\"x-access-token\": localStorage.getItem(tokenConfig.token.name)}})\n    .then(response => {\n        return response\n    })\n    .catch(err => {\n        return err\n    })\n}\n\n//Connexion d'un utilisateur\nexport const loginUser = (datas) => {\n\n    return axios.post(config.api_url + \"/user/login\", datas)\n    .then(response => {\n        return response\n    })\n    .catch(err => {\n        return err\n    })\n}\n\n//Récupération de tous les utilisateurs\nexport const getAllUsers = () => {\n\n    return axios.get(config.api_url + \"/user/all\", {headers: {\"x-access-token\": localStorage.getItem(tokenConfig.token.name)}})\n    .then(response => {\n        return response\n    })\n    .catch(err => {\n        console.log(err)\n    })\n} \n\n//Récupération d'un utilisateur\nexport const getOneUser = (id) => {\n    \n    return axios.get(config.api_url + \"/users/\"+id, {headers: {\"x-access-token\": token}})\n    .then(response => {\n        return response.data.user[0]\n    })\n    .catch(err => console.log(err))\n}\n\n//Mise à jour d'un utilisateur\nexport const updateUser = (datas, id) => {\n    return axios.put(config.api_url + \"/users/update/\"+id, datas, {headers: {\"x-access-token\": token}})\n    .then(response => {\n        return response\n    })\n    .catch(err =>  console.log(\"err\",err))\n}\n\n//Mise à jour du mot de passe de l'utilisateur\nexport const updatePassword = (datas, id) => {\n    return axios.put(config.api_url + \"/users/update/password/\"+id, datas, {headers: {\"x-access-token\": token}})\n    .then(response => {\n        return response\n    })\n    .catch(err => console.log(err))\n}\n\n//Mise à jour du rôle de l'utilisateur\nexport const updateUserRole = (datas, id) => {\n    \n    return axios.put(config.api_url + \"/users/update/role/\"+id, datas, {headers: {\"x-access-token\": token}})\n    .then(response => {\n        return response\n    })\n    .catch(err => console.log(err))\n}\n\n//Récupération de tous les roles\nexport const getAllRoles = () => {\n    return axios.get(config.api_url +\"/users/roles/all\", {headers: {\"x-access-token\": token}})\n    .then(response => {\n        return response\n    })\n    .catch(err => console.log(err))\n}\n\n//Suppression d'un utilisateur\nexport const deleteUser = (id) => {\n    return axios.delete(config.api_url + \"/users/delete/\"+id, {headers: {\"x-access-token\": token}})\n    .then(response => {\n        return response\n    })\n    .catch(err => {\n        console.log(err)\n    })\n}"]},"metadata":{},"sourceType":"module"}