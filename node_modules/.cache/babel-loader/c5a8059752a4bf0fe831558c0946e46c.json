{"ast":null,"code":"import _slicedToArray from\"/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{connect}from\"react-redux\";import{connectUser}from\"../actions/user/userAction\";import{loginUser}from\"../api/user\";import tokenConfig from\"../config/tokenConfig\";import{config}from\"../config/config\";//Imports de la librairie MaterialUI\nimport Dialog from'@material-ui/core/Dialog';import DialogActions from'@material-ui/core/DialogActions';import DialogContent from'@material-ui/core/DialogContent';import DialogTitle from'@material-ui/core/DialogTitle';import{Button}from'@material-ui/core';import TextField from'@material-ui/core/TextField';import FormHelperText from'@material-ui/core/FormHelperText';import FormControl from'@material-ui/core/FormControl';import{makeStyles}from\"@material-ui/styles\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LoginPopUp=function LoginPopUp(props){//Définition des variables\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),emailError=_useState4[0],setEmailError=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),emailErrorText=_useState6[0],setEmailErrorText=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),password=_useState8[0],setPassword=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),passwordError=_useState10[0],setPasswordError=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),passwordErrorText=_useState12[0],setPasswordErrorText=_useState12[1];//Définition du style MaterialUI\nvar useStyles=makeStyles(function(theme){return{margin:{margin:theme.spacing(1),width:\"90%\"}};});var classes=useStyles();var globalVerify=function globalVerify(){if(!email){setEmailError(true);setEmailErrorText(\"Adresse email non renseignée\");}else{if(!email.match(config.emailRegEx)){setEmailError(true);setEmailErrorText(\"Format d'email non valide\");}else{setEmailError(false);setEmailErrorText(\"\");}}if(!password){setPasswordError(true);setPasswordErrorText(\"Mot de passe non reseigné\");}else{setPasswordError(false);setPasswordErrorText(\"\");}if(email.match(config.emailRegEx)){var datas={email:email,password:password};loginUser(datas).then(function(response){if(response.data.status===404){setEmailErrorText(\"Utilisateur inexistant\");setEmailError(true);}else{setEmailErrorText(\"\");setEmailError(false);if(response.data.status===401){setPasswordErrorText(\"Mot de passe incorrect\");setPasswordError(true);}else{localStorage.setItem(tokenConfig.token.name,response.data.token);props.connectUser(response.data.user);props.closeLoginForm();}}});}};var onSubmit=function onSubmit(){globalVerify();};return/*#__PURE__*/_jsxs(Dialog,{open:props.opened,onClose:function onClose(e){props.closeLoginForm();},children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Se connecter\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(\"form\",{className:\"login-register-form\",autoComplete:\"off\",children:[/*#__PURE__*/_jsxs(FormControl,{error:true,children:[/*#__PURE__*/_jsx(TextField,{variant:\"filled\",label:\"Email\",color:\"primary\",className:classes.margin,required:true,onChange:function onChange(e){setEmail(e.target.value);},error:emailError,type:\"email\",value:email}),/*#__PURE__*/_jsx(FormHelperText,{children:emailErrorText})]}),/*#__PURE__*/_jsxs(FormControl,{error:true,children:[/*#__PURE__*/_jsx(TextField,{variant:\"filled\",label:\"Mot de passe\",color:\"primary\",className:classes.margin,required:true,onChange:function onChange(e){setPassword(e.target.value);},error:passwordError,type:\"password\",value:password}),/*#__PURE__*/_jsx(FormHelperText,{children:passwordErrorText})]})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:function onClick(e){props.closeLoginForm();},color:\"primary\",children:\"Annuler\"}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(e){onSubmit();},color:\"primary\",children:\"Connexion\"})]})]});};var mapStateToProps=function mapStateToProps(store){return{};};var mapDispatchToProps={connectUser:connectUser};export default connect(mapStateToProps,mapDispatchToProps)(LoginPopUp);","map":{"version":3,"sources":["/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/src/components/loginPopUp.js"],"names":["React","useState","connect","connectUser","loginUser","tokenConfig","config","Dialog","DialogActions","DialogContent","DialogTitle","Button","TextField","FormHelperText","FormControl","makeStyles","LoginPopUp","props","email","setEmail","emailError","setEmailError","emailErrorText","setEmailErrorText","password","setPassword","passwordError","setPasswordError","passwordErrorText","setPasswordErrorText","useStyles","theme","margin","spacing","width","classes","globalVerify","match","emailRegEx","datas","then","response","data","status","localStorage","setItem","token","name","user","closeLoginForm","onSubmit","opened","e","target","value","mapStateToProps","store","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {connect} from \"react-redux\"\nimport {connectUser} from \"../actions/user/userAction\"\n\nimport {loginUser} from \"../api/user\"\n\nimport tokenConfig from \"../config/tokenConfig\"\nimport {config} from \"../config/config\"\n\n//Imports de la librairie MaterialUI\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport {makeStyles } from \"@material-ui/styles\";\n\nconst LoginPopUp = (props) => {\n\n    //Définition des variables\n    const [email, setEmail] = useState(\"\")\n    const [emailError, setEmailError] = useState(false)\n    const [emailErrorText, setEmailErrorText] = useState(\"\")\n\n    const [password, setPassword] = useState(\"\")\n    const [passwordError, setPasswordError] = useState(false)\n    const [passwordErrorText, setPasswordErrorText] = useState(\"\")\n\n    //Définition du style MaterialUI\n    const useStyles = makeStyles((theme) => ({\n        margin: {\n            margin: theme.spacing(1),\n            width: \"90%\"\n        },\n    }));\n\n    const classes = useStyles();\n    \n    const globalVerify = () => {\n\n            if(!email){\n                setEmailError(true)\n                setEmailErrorText(\"Adresse email non renseignée\")\n            }\n            else {\n                if(!email.match(config.emailRegEx)){\n                    setEmailError(true)\n                    setEmailErrorText(\"Format d'email non valide\")\n                }\n                else {\n                    setEmailError(false)\n                    setEmailErrorText(\"\")\n                }\n            }\n            if(!password){\n                setPasswordError(true)\n                setPasswordErrorText(\"Mot de passe non reseigné\")\n            }\n            else {\n                setPasswordError(false)\n                setPasswordErrorText(\"\")\n            }\n\n            if(email.match(config.emailRegEx)){\n                let datas = {\n                    email: email,\n                    password: password\n                }    \n                \n                loginUser(datas)\n                .then(response => {\n                    if(response.data.status === 404){\n                        setEmailErrorText(\"Utilisateur inexistant\")\n                        setEmailError(true)\n                    } else {\n                        setEmailErrorText(\"\")\n                        setEmailError(false)\n\n                        if(response.data.status === 401) {\n                            setPasswordErrorText(\"Mot de passe incorrect\")\n                            setPasswordError(true)\n                        }\n                        else {\n                            localStorage.setItem(tokenConfig.token.name, response.data.token)\n                            props.connectUser(response.data.user)\n                            props.closeLoginForm()\n                        }\n                    }\n                })\n            }\n            \n    }\n\n    const onSubmit = () =>{\n        globalVerify() \n    }\n\n    return(\n            <Dialog\n                open={props.opened}\n                onClose={(e) => {props.closeLoginForm()}}\n            >\n                <DialogTitle>Se connecter</DialogTitle>\n                    <DialogContent>\n                    <form className=\"login-register-form\" autoComplete=\"off\">\n                        <FormControl error>\n                            <TextField variant=\"filled\" label=\"Email\" color=\"primary\" className={classes.margin} required onChange={(e) => {setEmail(e.target.value)}} error={emailError} type=\"email\" value={email}/>\n                            <FormHelperText>{emailErrorText}</FormHelperText>\n                        </FormControl>\n\n                        <FormControl error>\n                            <TextField variant=\"filled\" label=\"Mot de passe\" color=\"primary\" className={classes.margin} required onChange={(e) => {setPassword(e.target.value)}} error={passwordError} type=\"password\" value={password}/>\n                            <FormHelperText>{passwordErrorText}</FormHelperText>\n                        </FormControl>\n                    </form>\n                    </DialogContent>\n                <DialogActions>\n                <Button onClick={(e) => {props.closeLoginForm()}} color=\"primary\">\n                    Annuler\n                </Button>\n                <Button onClick={(e) => {onSubmit()}} color=\"primary\" >\n                    Connexion\n                </Button>\n                </DialogActions>\n            </Dialog>\n    )\n}\n\nconst mapStateToProps = (store) => {\n    return {\n        \n    }\n}\n\nconst mapDispatchToProps = {\n    connectUser\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(LoginPopUp)"]},"metadata":{},"sourceType":"module"}