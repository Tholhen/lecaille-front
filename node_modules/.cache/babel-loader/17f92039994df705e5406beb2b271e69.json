{"ast":null,"code":"var _jsxFileName = \"/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/src/containers/user/profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateUser, updatePassword } from \"../../api/user\";\nimport { getAllRequestsByCustomer, getAllRequestDetails } from \"../../api/requests\";\nimport { convertDate } from \"../../utils/utils\";\nimport { config } from \"../../config/config\"; //Imports des composants de l'UI externes\n\nimport Header from \"../headers/header\";\nimport HeaderPages from \"../headers/headerPages\";\nimport Footer from \"../footer\"; //Imports depuis la librairie MaterialUI\n\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport { makeStyles } from \"@material-ui/styles\";\nimport contactIcon from \"../../assets/icons/email-blue.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = props => {\n  _s();\n\n  const headerTitle = \"Profil\";\n  const headerBreadcrumbs = [{\n    value: \"Accueil\",\n    link: \"/\"\n  }, {\n    value: \"Profil\",\n    link: null\n  }];\n  const [firstName, setFirstName] = useState(\"\");\n  const [firstNameError, setFirstNameError] = useState(false);\n  const [firstNameErrorText, setFirstNameErrorText] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [lastNameError, setLastNameError] = useState(false);\n  const [lastNameErrorText, setLastNameErrorText] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(false);\n  const [emailErrorText, setEmailErrorText] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordUpdated, setPasswordUpdated] = useState(false);\n  const [phone, setPhone] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(false);\n  const [phoneErrorText, setPhoneErrorText] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [displayedRequests, setDisplayedRequests] = useState([]); //Définition des styles MaterialUI\n\n  const useStyles = makeStyles(theme => ({\n    margin: {\n      margin: theme.spacing(1)\n    }\n  }));\n  const classes = useStyles(); //A chaque modification du redux user\n\n  useEffect(() => {\n    setFirstName(props.user.infos.first_name);\n    setLastName(props.user.infos.last_name);\n    setEmail(props.user.infos.email);\n    setPhone(props.user.infos.phone);\n    setAddress(props.user.infos.address);\n    setZip(props.user.infos.zip);\n    setCity(props.user.infos.city);\n    getAllRequestsByCustomer(props.user.infos.id).then(requestsDB => {\n      loadRequestsDetails(requestsDB);\n    });\n  }, [props.user]); // Au click sur le bouton envoyer\n\n  const onSubmit = () => {\n    globalVerify();\n  }; //Fonction de vérification de bonne saisie des informations\n\n\n  const globalVerify = () => {\n    if (!firstName) {\n      setFirstNameError(true);\n      setFirstNameErrorText(\"Prénom non renseigné\");\n    } else {\n      setFirstNameError(false);\n      setFirstNameErrorText(\"\");\n    }\n\n    if (!lastName) {\n      setLastNameError(true);\n      setLastNameErrorText(\"Nom non renseigné\");\n    } else {\n      setLastNameError(false);\n      setLastNameErrorText(\"\");\n    }\n\n    if (!email) {\n      setEmailError(true);\n      setEmailErrorText(\"Adresse email non renseignée\");\n    } else {\n      if (!email.match(config.emailRegEx)) {\n        setEmailError(true);\n        setEmailErrorText(\"Adresse email non valide\");\n      } else {\n        setEmailError(false);\n        setEmailErrorText(\"\");\n      }\n    }\n\n    if (password !== \"\") {\n      setPasswordUpdated(true);\n    } else {\n      setPasswordUpdated(false);\n    }\n\n    if (!phone) {\n      setPhoneError(true);\n      setPhoneErrorText(\"N° de téléphone non renseigné\");\n    } else {\n      if (!phone.match(config.phoneRegEx)) {\n        setPhoneError(true);\n        setPhoneErrorText(\"N° de téléphone incorrect\");\n      } else {\n        setPhoneError(false);\n        setPhoneErrorText(\"\");\n      }\n    } //Si tous les champs sont bons, on enregistre l'utilisateur\n\n\n    if (firstName && lastName && email && phone && phone.match(config.phoneRegEx) && email.match(config.emailRegEx)) {\n      let datas = {\n        first_name: firstName,\n        last_name: lastName,\n        email: email,\n        phone: phone,\n        address: address,\n        zip: zip,\n        city: city\n      };\n      updateUser(datas, props.user.infos.id).then(responseUpdateUser => {\n        if (responseUpdateUser.data.status === 200) {\n          console.log(\"Succès de la mise à jour utilisateur\");\n\n          if (passwordUpdated) {\n            let datasPassword = {\n              password: password\n            };\n            updatePassword(datasPassword, props.user.infos.id).then(responsePassword => {\n              if (responsePassword.data.status === 200) {\n                console.log(\"Succès de la mise à jour du mot de passe\");\n              } else {\n                console.log(\"Erreur lors de la mise à jour du mot de passe\");\n              }\n            });\n          }\n        } else {\n          console.log(\"Erreur lors de la mise à jour de l'utilisateur\");\n        }\n      });\n    }\n  }; //Contruction de la liste des commandes passées\n\n\n  const loadRequestsDetails = requests => {\n    console.log(requests.length);\n    requests.map((requestItem, index) => {\n      let requestDetails;\n      console.log(requestItem);\n      getAllRequestDetails(requestItem.id).then(requestLines => {\n        requestLines.map(requestLineDetails => {\n          requestDetails += /*#__PURE__*/_jsxDEV(\"article\", {\n            children: [/*#__PURE__*/_jsxDEV(\"section\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: requestLineDetails.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Qt\\xE9 : \", requestLineDetails.quantity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: requestLineDetails.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 39\n          }, this);\n        });\n        console.log(requestLines);\n      });\n      setDisplayedRequests(displayedRequests => [...displayedRequests, /*#__PURE__*/_jsxDEV(\"article\", {\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: requestItem.request_number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: convertDate(requestItem.request_date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: console.log(\"requestDetails\", requestDetails)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this)]);\n    });\n  }; //Fonction d'affichage des commandes de l'utilisateur\n\n\n  const showRequestsDetails = () => {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile-user-requests-container\",\n      children: displayedRequests\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HeaderPages, {\n      headerTitle: headerTitle,\n      headerBreadcrumbs: headerBreadcrumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Mes informations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"profile-user-infos-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"user-edit-informations\",\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"user-edit-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: contactIcon,\n              alt: \"Personnal information icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"admin-content-section-title\",\n              children: \"Informations personnelles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"user-edit-informations-content\",\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              error: true,\n              className: classes.margin,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Nom\",\n                color: \"primary\",\n                className: \"register-form-input\",\n                required: true,\n                onChange: e => {\n                  setLastName(e.target.value);\n                },\n                error: lastNameError,\n                value: lastName || \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: lastNameErrorText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              error: true,\n              className: classes.margin,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Pr\\xE9nom\",\n                color: \"primary\",\n                className: \"register-form-input\",\n                required: true,\n                onChange: e => {\n                  setFirstName(e.target.value);\n                },\n                error: firstNameError,\n                value: firstName || \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: firstNameErrorText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              error: true,\n              className: classes.margin,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Mot de passe\",\n                color: \"primary\",\n                className: \"register-form-input\",\n                onChange: e => {\n                  setPassword(e.target.value);\n                  e.target.value ? setPasswordUpdated(true) : setPasswordUpdated(false);\n                },\n                type: \"password\",\n                defaultValue: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"user-edit-contact\",\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"user-edit-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: contactIcon,\n              alt: \"Contact icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"admin-content-section-title\",\n              children: \"Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"user-edit-contact-content\",\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              error: true,\n              className: classes.margin,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Email\",\n                color: \"primary\",\n                required: true,\n                onChange: e => {\n                  setEmail(e.target.value);\n                },\n                error: emailError,\n                type: \"email\",\n                value: email || \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: emailErrorText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              error: true,\n              className: classes.margin,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                label: \"T\\xE9l\\xE9phone\",\n                color: \"primary\",\n                required: true,\n                error: phoneError,\n                type: \"tel\",\n                value: phone || \"\",\n                onChange: e => {\n                  setPhone(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: phoneErrorText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              error: true,\n              className: classes.margin,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Adresse\",\n                color: \"primary\",\n                onChange: e => {\n                  setAddress(e.target.value);\n                },\n                value: address || \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              error: true,\n              className: classes.margin,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Code Postal\",\n                color: \"primary\",\n                onChange: e => {\n                  setZip(e.target.value);\n                },\n                value: zip || \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              error: true,\n              className: classes.margin,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Ville\",\n                color: \"primary\",\n                onChange: e => {\n                  setCity(e.target.value);\n                },\n                value: city || \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"admin-user-edit-button\",\n            color: \"primary\",\n            variant: \"contained\",\n            onClick: onSubmit,\n            children: \"Envoyer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Mes commandes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this), showRequestsDetails()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"3KpRK+ujl1Q7V8uYIDhqFykNGlo=\", true);\n\n_c = Profile;\n\nconst mapStateToProps = store => {\n  return {};\n};\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/nicolas/Documents/Travail/Web Developper/3W Academy/Projet/site/lecaille-front/src/containers/user/profile.js"],"names":["React","useState","useEffect","connect","updateUser","updatePassword","getAllRequestsByCustomer","getAllRequestDetails","convertDate","config","Header","HeaderPages","Footer","Button","TextField","FormHelperText","FormControl","InputLabel","NativeSelect","makeStyles","Profile","props","headerTitle","headerBreadcrumbs","value","link","firstName","setFirstName","firstNameError","setFirstNameError","firstNameErrorText","setFirstNameErrorText","lastName","setLastName","lastNameError","setLastNameError","lastNameErrorText","setLastNameErrorText","email","setEmail","emailError","setEmailError","emailErrorText","setEmailErrorText","password","setPassword","passwordUpdated","setPasswordUpdated","phone","setPhone","phoneError","setPhoneError","phoneErrorText","setPhoneErrorText","address","setAddress","zip","setZip","city","setCity","displayedRequests","setDisplayedRequests","useStyles","theme","margin","spacing","classes","user","infos","first_name","last_name","id","then","requestsDB","loadRequestsDetails","onSubmit","globalVerify","match","emailRegEx","phoneRegEx","datas","responseUpdateUser","data","status","console","log","datasPassword","responsePassword","requests","length","map","requestItem","index","requestDetails","requestLines","requestLineDetails","name","quantity","price","request_number","request_date","showRequestsDetails","contactIcon","e","target","mapStateToProps","store","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport {connect} from \"react-redux\"\n\nimport {updateUser, updatePassword} from \"../../api/user\"\nimport {getAllRequestsByCustomer, getAllRequestDetails} from \"../../api/requests\"\nimport {convertDate} from \"../../utils/utils\"\n\nimport {config} from \"../../config/config\"\n\n//Imports des composants de l'UI externes\nimport Header from \"../headers/header\"\nimport HeaderPages from \"../headers/headerPages\"\nimport Footer from \"../footer\"\n\n//Imports depuis la librairie MaterialUI\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport {makeStyles } from \"@material-ui/styles\";\n\nimport contactIcon from \"../../assets/icons/email-blue.svg\"\n\nconst Profile = (props) => {\n\n    const headerTitle = \"Profil\"\n    const headerBreadcrumbs = [{value: \"Accueil\", link:\"/\"}, {value: \"Profil\", link:null}]\n\n    const [firstName, setFirstName] = useState(\"\")\n    const [firstNameError, setFirstNameError] = useState(false)\n    const [firstNameErrorText, setFirstNameErrorText] = useState(\"\")\n    \n\n    const [lastName, setLastName] = useState(\"\")\n    const [lastNameError, setLastNameError] = useState(false)\n    const [lastNameErrorText, setLastNameErrorText] = useState(\"\")\n\n    const [email, setEmail] = useState(\"\")\n    const [emailError, setEmailError] = useState(false)\n    const [emailErrorText, setEmailErrorText] = useState(\"\")\n\n    const [password, setPassword] = useState(\"\")\n    const [passwordUpdated, setPasswordUpdated] = useState(false)\n\n    const [phone, setPhone] = useState(\"\")\n    const [phoneError, setPhoneError] = useState(false)\n    const [phoneErrorText, setPhoneErrorText] = useState(\"\")\n\n    const [address, setAddress] = useState(\"\")\n    const [zip, setZip] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n\n    const [displayedRequests, setDisplayedRequests] = useState([])\n\n    //Définition des styles MaterialUI\n    const useStyles = makeStyles((theme) => ({\n        margin: {\n            margin: theme.spacing(1),\n        }\n        }));\n        \n    const classes = useStyles();\n\n    //A chaque modification du redux user\n    useEffect(() => {\n        setFirstName(props.user.infos.first_name)\n        setLastName(props.user.infos.last_name)\n        setEmail(props.user.infos.email)\n        setPhone(props.user.infos.phone)\n        setAddress(props.user.infos.address)\n        setZip(props.user.infos.zip)\n        setCity(props.user.infos.city)\n\n        getAllRequestsByCustomer(props.user.infos.id)\n        .then((requestsDB) => {\n            loadRequestsDetails(requestsDB)\n        })\n        \n    }, [props.user])\n\n    // Au click sur le bouton envoyer\n    const onSubmit = () => {\n        globalVerify()\n    }\n\n    //Fonction de vérification de bonne saisie des informations\n    const globalVerify = () => {\n\n        if(!firstName){\n            setFirstNameError(true)\n            setFirstNameErrorText(\"Prénom non renseigné\")\n        }\n        else {\n            setFirstNameError(false)\n            setFirstNameErrorText(\"\")\n        }\n\n        if(!lastName){\n            setLastNameError(true)\n            setLastNameErrorText(\"Nom non renseigné\")\n        }\n        else {\n            setLastNameError(false)\n            setLastNameErrorText(\"\")\n        }\n        if(!email){\n            setEmailError(true)\n            setEmailErrorText(\"Adresse email non renseignée\")\n        }\n        else {\n            if(!email.match(config.emailRegEx)){\n                setEmailError(true)\n                setEmailErrorText(\"Adresse email non valide\")\n            }\n            else {\n                setEmailError(false)\n                setEmailErrorText(\"\")\n            }\n        }\n        if(password !== \"\"){\n            setPasswordUpdated(true)\n        }\n        else {\n            setPasswordUpdated(false)\n        }\n        if(!phone){\n            setPhoneError(true)\n            setPhoneErrorText(\"N° de téléphone non renseigné\")\n        }\n        else{\n            if(!phone.match(config.phoneRegEx)){\n                setPhoneError(true)\n                setPhoneErrorText(\"N° de téléphone incorrect\")\n            }\n            else {\n                setPhoneError(false)\n                setPhoneErrorText(\"\")\n            }\n        }\n\n        //Si tous les champs sont bons, on enregistre l'utilisateur\n        if(firstName && lastName && email && phone && phone.match(config.phoneRegEx) && email.match(config.emailRegEx)){\n            \n            let datas = {\n                first_name: firstName,\n                last_name: lastName,\n                email: email,\n                phone: phone,\n                address: address,\n                zip: zip,\n                city: city\n            }    \n\n            updateUser(datas, props.user.infos.id)\n            .then(responseUpdateUser => {\n                if(responseUpdateUser.data.status === 200){\n                    console.log(\"Succès de la mise à jour utilisateur\")\n                    if(passwordUpdated){\n                        let datasPassword = {\n                            password: password\n                        }\n                        updatePassword(datasPassword, props.user.infos.id)\n                        .then(responsePassword => { \n                            if(responsePassword.data.status === 200){\n                                console.log(\"Succès de la mise à jour du mot de passe\")\n                            }\n                            else {\n                                console.log(\"Erreur lors de la mise à jour du mot de passe\")\n                            }\n                        })\n                    }\n                }\n                else {\n                    console.log(\"Erreur lors de la mise à jour de l'utilisateur\")\n                }\n            })            \n        }\n        \n    }\n\n    //Contruction de la liste des commandes passées\n    const loadRequestsDetails = (requests) => {\n        console.log(requests.length)\n        requests.map((requestItem, index) => {\n            let requestDetails\n            console.log(requestItem)\n            getAllRequestDetails(requestItem.id)\n            .then((requestLines) => {\n                requestLines.map(requestLineDetails => {\n                    requestDetails += <article>\n                                            <section></section>\n                                            <section>\n                                                <p>{requestLineDetails.name}</p>\n                                                <p>Qté : {requestLineDetails.quantity}</p>\n                                                <p>{requestLineDetails.price}</p>\n                                            </section>\n                                    </article>\n                })\n                \n                console.log(requestLines)\n            })\n            \n            setDisplayedRequests(displayedRequests => [...displayedRequests,\n                <article key={index}>\n                    <section>\n                        <p>{requestItem.request_number}</p>\n                        <p>{convertDate(requestItem.request_date)}</p>\n                    </section>\n                    <section>\n                        {console.log(\"requestDetails\",requestDetails)}\n                    </section>\n                </article>])\n            \n        })\n    }\n\n    //Fonction d'affichage des commandes de l'utilisateur\n    const showRequestsDetails = () => {\n        return (<section className=\"profile-user-requests-container\">\n                    {displayedRequests}\n        </section>)\n    }\n\n    return(\n        <section className=\"root\">\n            <Header />\n            <HeaderPages headerTitle={headerTitle} headerBreadcrumbs={headerBreadcrumbs}/>\n            <section className=\"profile-container\">\n                <h4>Mes informations</h4>\n                <section className=\"profile-user-infos-container\">\n                    <section className=\"user-edit-informations\">\n                        <section className=\"user-edit-header\">\n                            <img src={contactIcon} alt=\"Personnal information icon\" />\n                            <p className=\"admin-content-section-title\">Informations personnelles</p>\n                        </section>\n                        <section className=\"user-edit-informations-content\">\n                            <FormControl error className={classes.margin}>\n                                <TextField label=\"Nom\" color=\"primary\" className=\"register-form-input\" required onChange={(e) => {setLastName(e.target.value)}} error={lastNameError} value={lastName || \"\"} />\n                                <FormHelperText>{lastNameErrorText}</FormHelperText>\n                            </FormControl>\n\n                            <FormControl error className={classes.margin}>\n                                <TextField label=\"Prénom\" color=\"primary\" className=\"register-form-input\" required onChange={(e) => {setFirstName(e.target.value)}} error={firstNameError} value={firstName || \"\"}/>\n                                <FormHelperText>{firstNameErrorText}</FormHelperText>\n                            </FormControl>\n\n                            <FormControl error className={classes.margin}>\n                                <TextField label=\"Mot de passe\" color=\"primary\" className=\"register-form-input\" onChange={(e) => {setPassword(e.target.value)\n                                e.target.value ? setPasswordUpdated(true) : setPasswordUpdated(false)}} type=\"password\" defaultValue=\"\"/>\n                            </FormControl>\n                        </section>\n                    </section>\n                    <section className=\"user-edit-contact\">\n                            <section className=\"user-edit-header\">\n                                <img src={contactIcon} alt=\"Contact icon\" />\n                                <p className=\"admin-content-section-title\">Contact</p>\n                            </section>\n                            <section className=\"user-edit-contact-content\">\n                                \n                                    <FormControl error className={classes.margin} >\n                                        <TextField label=\"Email\" color=\"primary\" required onChange={(e) => {setEmail(e.target.value)}} error={emailError} type=\"email\" value={email || \"\"}/>\n                                        <FormHelperText>{emailErrorText}</FormHelperText>\n                                    </FormControl>\n\n                                    <FormControl error className={classes.margin}>\n                                        <TextField label=\"Téléphone\" color=\"primary\" required  error={phoneError} type=\"tel\" value={phone || \"\"\n                                        } onChange={(e) => {setPhone(e.target.value)}} />\n                                        <FormHelperText>{phoneErrorText}</FormHelperText>\n                                    </FormControl>\n\n                                    <FormControl error className={classes.margin}>\n                                        <TextField label=\"Adresse\" color=\"primary\" onChange={(e) => {setAddress(e.target.value)}} value={address || \"\"}/>\n                                    </FormControl>\n\n                                    <FormControl error className={classes.margin}>\n                                        <TextField label=\"Code Postal\" color=\"primary\" onChange={(e) => {setZip(e.target.value)}} value={zip || \"\"}/>\n                                    </FormControl>\n\n                                    <FormControl error className={classes.margin}>\n                                        <TextField label=\"Ville\" color=\"primary\" onChange={(e) => {setCity(e.target.value)}} value={city || \"\"}/>\n                                    </FormControl>\n\n                                    \n                            </section>\n                            <Button className=\"admin-user-edit-button\" color=\"primary\" variant=\"contained\" onClick={onSubmit}>\n                                        Envoyer\n                                    </Button>\n                    </section>      \n                </section>\n                <h4>Mes commandes</h4>\n                {showRequestsDetails()}\n            </section>\n            <Footer />\n        </section>\n    )\n}\n\nconst mapStateToProps = (store) => {\n    return {\n\n    }\n\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)"]},"metadata":{},"sourceType":"module"}